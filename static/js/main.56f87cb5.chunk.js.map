{"version":3,"sources":["temporary_data.js","utils.js","navbar.js","signature.js","creation_box.js","credits.js","patient_box.js","item.js","section_title.js","validation_button.js","App.js","reportWebVitals.js","index.js"],"names":["checklist_list_array","patients","list_possible_answer","list_possible_answer_trad","list_possible_num_var","list_possible_num_var_trad","list_possible_op","trad_answer","answer","trad_num_var","num_var","simple_operation","val1","string_op","val2","CsvGenerator","dataArray","fileName","separator","addQuotes","this","getDownloadLink","type","data","map","row","rowData","join","length","btoa","encodeURIComponent","downloadLink","getLinkElement","linkText","linkElement","a","document","createElement","innerHTML","href","download","removeAfterDownload","style","display","body","appendChild","click","removeChild","checklist_tree_to_flat","checklist_tree","checklist_array","checklist_tree_to_flat_rec","console","log","item","array","parent_id","position","id","push","name","comment","JSON","stringify","cond","check","color","pre_check","i","values","checklist_flat_to_tree","checklist_id","checklist_flat_to_tree_rec","num_values","child_array","filter","elm","sort","b","new_item","parse","AppNavbar","props","setCreationMode","setCreditMode","trimmedCanvasUrl","checklistList","swapchecklist","import_csv_result","deactivatecreditmode","result","className","onClick","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-current","downloadImage","role","aria-labelledby","index","filename","AppSignature","sigpad","setTrimmedCanvasUrl","canvasProps","ref","dataUrl","getTrimmedCanvas","toDataURL","clear","CreateBox","checklist","setChecklist","setChecklistList","checklistId","setChecklistId","forceUpdate","setResult","setIsDict","init_dict","setIsPreCheckDone","currentQuestion","setCurrentQuestion","useState","currentParentQuestion","setCurrentParentQuestion","currentName","setCurrentName","currentComment","setCurrentComment","tempNums","setTempNums","tempPreCheck","setTempPreCheck","pairIndicator","setPairIndicator","questionList","enumquestions","possible_answers","forEach","includes","possible_vars","possible_op","op","possible_pre_check","reinit_current_question","searchquestion","parent_item","current_question","removequestion","e","check_id","every","value","movecurrentquestion_child","currentQuestionCopy","num","splice","swapchecklist_creation_mode","addtempnumval","event","var","val","selectedKey","target","addtempprecheckval","switchpairindicator","n_checklist","new_empty_checklist","addchecklist","last_id","new_empty_question","addnewquestion","onChange","rows","chosen_question_position","findIndex","movecurrentquestion_sibling","selectStyle","options","isMultiSelect","placeholder","selectedOptions","current_colors","concat","Array","fill","utils","color_id","indexOf","changecolor","deletecond","addcond","removenum","data-icon","if","removeprecheck","then","Credits","PatientBox","patientList","currentPatient","setCurrentPatient","firstname","lastname","patient_id","0","changecurrentpatient","ChecklistItem","init_items","dicts","values_filter_cond","creationMode","currentId","isDict","numDict","isPreCheckDone","visibleList","handleOnChangeIs","is_check","list_other_answer","clean_children_rec","children","checked","input_text","init_item","answers","is_remove","SectionTitle","section_title","check_all_question_answered","search_question_not_answered","ValidationButton","App","useReducer","x","checklist_list","temp_data","setVisibleList","creditMode","Object","entries","key","date","split","Date","getFullYear","date_to_age","result_table","keys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mKAmXMA,G,MAAuB,CAC3B,CACE,CACE,OACA,SACA,cACA,aACA,YACA,SACA,UACA,UACA,eAEF,CACE,EACA,6BACC,EACD,EACA,KACA,8BACA,qBACA,UACA,gFAEF,CACE,EACA,wCACA,EACA,EACA,KACA,wCACA,eACA,QACA,MAEF,CACE,EACA,4BACA,EACA,EACA,KACA,+BACA,eACA,QACA,MAEF,CACE,EACA,0BACA,EACA,EACA,KACA,+BACA,eACA,QACA,MAEF,CACE,EACA,gBACA,EACA,EACA,KACA,+BACA,KACA,KACA,MAEF,CACE,EACA,eACA,EACA,EACA,KACA,+BACA,eACA,QACA,MAEF,CACE,EACA,iBACA,EACA,EACA,KACA,+BACA,eACA,QACA,MAEF,CACE,EACA,mBACA,EACA,EACA,KACA,+BACA,eACA,QACA,MAEF,CACE,EACA,cACA,EACA,EACA,KACA,+BACA,eACA,QACA,MAEF,CACE,GACA,gDACC,EACD,EACA,8FACA,iIACA,eACA,QACA,MAEF,CACE,GACA,oCACA,GACA,EACA,KACA,gCACA,WACA,KACA,MAEF,CACE,GACA,sBACA,GACA,EACA,KACA,gCACA,eACA,QACA,MAEF,CACE,GACA,iBACA,GACA,EACA,KACA,gCACA,eACA,QACA,MAEF,CACE,GACA,4BACA,GACA,EACA,KACA,gCACA,eACA,QACA,MAEF,CACE,GACA,gCACA,GACA,EACA,KACA,gCACA,eACA,QACA,MAEF,CACE,GACA,uCACC,EACD,EACA,KACA,8BACA,eACA,QACA,oEAEF,CACE,GACA,sBACA,GACA,EACA,KACA,gCACA,eACA,QACA,MAEF,CACE,GACA,kCACA,GACA,EACA,KACA,gCACA,eACA,QACA,MAEF,CACE,GACA,0CACA,GACA,EACA,KACA,kCACA,eACA,QACA,MAEF,CACE,GACA,6BACA,GACA,EACA,KACA,gCACA,WACA,KACA,MAEF,CACE,GACA,wCACA,GACA,EACA,KACA,gCACA,uBACA,QACA,MAEF,CACE,GACA,uEACC,EACD,EACA,iEACA,6DACA,KACA,KACA,MAEF,CACE,GACA,uCACA,GACA,EACA,KACA,qDACA,eACA,QACA,MAEF,CACE,GACA,2CACA,GACA,EACA,KACA,qDACA,eACA,QACA,MAEF,CACE,GACA,2CACA,GACA,EACA,KACA,qDACA,eACA,QACA,MAEF,CACE,GACA,8CACA,GACA,EACA,KACA,qDACA,eACA,QACA,MAEF,CACE,GACA,8BACC,EACD,EACA,0GACA,qDACA,kBACA,QACA,MAEF,CACE,GACA,iCACA,GACA,EACA,KACA,qDACA,kBACA,QACA,MAEF,CACE,GACA,iCACA,GACA,EACA,KACA,qDACA,kBACA,QACA,MAEF,CACE,GACA,6BACC,EACD,EACA,qHACA,sBACA,eACA,QACA,MAEF,CACE,GACA,4BACA,GACA,EACA,KACA,wBACA,eACA,QACA,MAEF,CACE,GACA,kCACA,GACA,EACA,KACA,wBACA,eACA,QACA,MAEF,CACE,GACA,cACA,GACA,EACA,KACA,wBACA,kBACA,QACA,MAEF,CACE,GACA,yBACA,GACA,EACA,KACA,kCACA,eACA,QACA,MAEF,CACE,GACA,mCACA,GACA,EACA,KACA,wBACA,eACA,QACA,MAEF,CACE,GACA,cACA,GACA,EACA,KACA,wBACA,kBACA,QACA,MAEF,CACE,GACA,mBACA,GACA,EACA,KACA,qCACA,eACA,QACA,MAEF,CACE,GACA,QACA,GACA,EACA,KACA,wBACA,eACA,QACA,MAEF,CACE,GACA,cACA,GACA,EACA,KACA,wBACA,kBACA,QACA,OAGJ,CACE,CACE,OACA,SACA,cACA,aACA,YACA,SACA,UACA,UACA,eAEF,CACE,EACA,6BACC,EACD,EACA,KACA,8BACA,qBACA,UACA,gFAEF,CACE,EACA,wCACA,EACA,EACA,KACA,wCACA,eACA,QACA,SAQAC,EAAW,CACf,CAAC,GAAM,EAAG,SAAY,SAAU,UAAa,WAAY,OAAU,IAAK,YAAe,aAAc,SAAW,OAAQ,qBAAuB,QAC/I,CAAC,GAAM,EAAG,SAAY,WAAY,UAAa,UAAW,OA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","file":"static/js/main.56f87cb5.chunk.js","sourcesContent":["/* Data that will be obtain by call to backend\n* */\n\n/*Initial checklist list*/\nconst checklist_list = [\n  {\n    checklist_id: 0,\n    id: -1,\n    num_values:[],\n    values:[\n      {\n        id: 1,\n        name: \"Intubation Difficile ? \",\n        section_title : \"Vérifications concernant l'intubation difficile\",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\",\"no\",\"idk\"],\n        color : [0,1,2],\n        pre_check : {if:[{var:\"difficult_intubation\",op:\"est\",val:\"vrai\"}],then:\"yes\"},\n        values: [\n          {\n            id: 2,\n            name: \"A confirmer l'incubation difficile\",\n            cond: {\"yes\":[], \"no\": [], \"idk\" : [1], num:[]},\n            check : [\"yes\",\"no\"],\n            color : [1,0],\n            values: []\n          },\n          {\n            id: 3,\n            name: \"2ème Anesthésiste\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            color : [1,0],\n            values: []\n          },\n          {\n            id: 4,\n            name: \"2ème Infirmière\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            color : [0,1],\n            values: []\n          },\n          {\n            id: 5,\n            name: \"Matériel\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [],\n            values: [\n              {\n                id: 6,\n                name: \"Glidescope\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 7,\n                name: \"Laryngoscope\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 8,\n                name: \"Set Trachéo\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                color : [0,1],\n                values: []\n              },\n            ]\n          },\n          {\n            id: 9,\n            name: \"Protocole\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            color : [0,1],\n            values: []\n          },\n        ]\n      },\n      {\n        id: 10,\n        name: \"Est-elle susceptible d'être enceinte ?\",\n        section_title : \"Vérifications concernant une possible grossesse\",\n        comment: \"(Les données patient nous indiquent que la patiente est âgée entre 15 et 60 ans)\",\n        cond: {\"yes\":[], \"no\":[], num:[{var:\"age\",op:\">\",val:15},{var:\"age\",op:\"<\",val:60}, {var:\"gender\",op:\"=\",val:\"F\"}]},\n        check : [\"yes\",\"no\"],\n        color : [0,1],\n        values: [\n          {\n            id: 11,\n            name: \"Arrêt des rêgles depuis ?\",\n            cond: {\"yes\":[10], \"no\":[], num:[]},\n            check : [\"text\"],\n            values: []\n          },\n          {\n            id: 12,\n            name: \"Test disponible ?\",\n            cond: {\"yes\":[10], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            color : [0,1],\n            values: [\n              {\n                id: 13,\n                name: \"Négatif ?\",\n                cond: {\"yes\":[12], \"no\":[], num:[]},\n                check : [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 14,\n                name: \"Faire test maintenant ?\",\n                cond: {\"yes\":[], \"no\":[12], num:[]},\n                check : [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 15,\n                name: \"Postposer l'intervention ?\",\n                cond: {\"yes\":[], \"no\":[12], num:[]},\n                check : [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n            ]\n          },\n        ]\n      },\n      {\n        id: 16,\n        name: \"Le patient est-il diabétique ?\",\n        section_title : \"Vérification concernant le diabète\",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\",\"no\"],\n        color : [0,1],\n        pre_check : {if:[{var:\"diabetic\",op:\"est\",val:\"vrai\"}],then:\"yes\"},\n        values: [\n          {\n            id: 17,\n            name: \"Traitement Oral ?\",\n            cond: {\"yes\":[16], \"no\":[], num:[]},\n            check : [\"yes\", \"no\"],\n            color : [0,1],\n            values: [\n              {\n                id: 18,\n                name: \"Arrêt des médicaments ?\",\n                cond: {\"yes\":[17], \"no\":[], num:[]},\n                check : [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n            ]\n          },\n          {\n            id: 19,\n            name: \"Traitement par piqure à insuline ?\",\n            cond: {\"yes\":[16], \"no\":[17], num:[]},\n            check : [\"yes\", \"no\"],\n            color : [0,1],\n            values: [\n              {\n                id: 20,\n                name: \"Dernière piqure le ? \",\n                cond : {\"yes\":[19], \"no\":[], num:[]},\n                check: [\"text\"],\n                values: []\n              }\n            ]\n          },\n          {\n            id: 21,\n            name: \"Glycémie à l'arrivée HJ ?\",\n            cond: {\"yes\":[16], \"no\":[], num:[]},\n            check : [\"normal\", \"anormal\"],\n            color : [0,1],\n            values: []\n          },\n        ]\n      },\n      {\n        id: 22,\n        name: \"Consentement chirugicaux et anéstésiques de père/mère\",\n        section_title : \"Concernant les consentements parentaux\",\n        comment: \"Enfant de <15 ans, nécessite les consentement des parents\",\n        cond: {\"yes\":[],\"no\":[],num:[{var:\"age\",op:\"<\",val:15}]},\n        check: [],\n        values: [\n          {\n            id: 23,\n            name: \"Consentement chirugical du père\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\"<\",val:15}]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: []\n          },\n          {\n            id: 24,\n            name: \"Consentement chirurgical de la mère\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\"<\",val:15}]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: []\n          },\n          {\n            id: 25,\n            name: \"Consentement anestésique du père\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\"<\",val:15}]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: []\n          },\n          {\n            id: 26,\n            name: \"Consentement anestésique de la mère\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\"<\",val:15}]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: []\n          },\n        ]\n      },\n      {\n        id: 27,\n        name: \"Checks vernis à ongle\",\n        section_title : \"Checks généraux pour anestésie\",\n        comment: \"Ado/Adulte, nécessite vérification du vernis à ongle et des prothèses auditives/dentaires\",\n        cond: {\"yes\":[], num:[{var:\"age\",op:\">\",val:10}]},\n        check: [\"ok\", \"not_ok\"],\n        color : [0,1],\n        values: [\n          {\n            id: 28,\n            name: \"Check Prothèses dentaires\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\">\",val:10}]},\n            check: [\"ok\", \"not_ok\"],\n            color : [0,1],\n            values: []\n          },\n          {\n            id: 29,\n            name: \"Check Prothèses auditives\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\">\",val:10}]},\n            check: [\"ok\", \"not_ok\"],\n            color : [0,1],\n            values: []\n          },\n        ]\n      },\n      {\n        id: 30,\n        name: \"Maladie transmissible ?\",\n        section_title : \"Vérifications maladadies transmissibles\",\n        comment : \"Si oui, l'information sera considérée dans les checklists suivantes (accueil du bloc, salle de réveil)\",\n        cond: {\"yes\":[], num:[]},\n        check: [\"yes\", \"no\"],\n        color : [0,1],\n        values: [\n          {\n            id: 31,\n            name: \"Par voie aérienne ? \",\n            cond: {\"yes\":[30], num:[]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: [\n              {\n                id: 32,\n                name : \"EPI (Masque FFP2, Visière)\",\n                cond : {\"yes\":[31], num:[]},\n                check: [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 33,\n                name : \"Protocole\",\n                cond : {\"yes\":[31], num:[]},\n                check: [\"ok\", \"not_ok\"],\n                color : [0,1],\n                values: []\n              }\n            ]\n          },\n          {\n            id: 34,\n            name: \"Par voie sanguine ? \",\n            cond: {\"yes\":[30], \"no\":[31], num:[]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: [\n              {\n                id: 35,\n                name : \"EPI (Gants, blouses, lunettes)\",\n                cond : {\"yes\":[34], num:[]},\n                check: [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 36,\n                name : \"Protocole\",\n                cond : {\"yes\":[34], num:[]},\n                check: [\"ok\", \"not_ok\"],\n                color : [0,1],\n                values: []\n              }\n            ]\n          },\n          {\n            id: 37,\n            name: \"Par contact ? \",\n            cond: {\"yes\":[30], \"no\":[31,34], num:[]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: [\n              {\n                id: 38,\n                name : \"EPI\",\n                cond : {\"yes\":[37], num:[]},\n                check: [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 39,\n                name : \"Protocole\",\n                cond : {\"yes\":[37], num:[]},\n                check: [\"ok\", \"not_ok\"],\n                color : [0,1],\n                values: []\n              }\n            ]\n          },\n        ]\n      }\n    ]\n  },\n  {\n    checklist_id: 1,\n    id: -1,\n    num_values:[],\n    values:[\n      {\n        id: 1,\n        name: \"Intubation ? \",\n        cond: {\"yes\": [], \"no\": [], num: []},\n        check: [\"yes\", \"no\", \"?\"],\n        color: [0,1,2],\n        pre_check: {if: [{var: \"difficult_intubation\", op: \"est\", val: \"vrai\"}], then: \"yes\"},\n        values: []\n      },\n      {\n        id: 2,\n        name: \"Test ? \",\n        cond: {\"yes\": [], \"no\": [], num: []},\n        check: [\"yes\", \"no\", \"?\"],\n        color: [0,1,2],\n        values: []\n      }\n    ]\n  }\n];\n\nconst checklist_list_array = [\n  [\n    [\n      '\"id\"',\n      '\"name\"',\n      '\"parent_id\"',\n      '\"position\"',\n      '\"comment\"',\n      '\"cond\"',\n      '\"check\"',\n      '\"color\"',\n      '\"pre_check\"'\n    ],\n    [\n      1,\n      '\"Intubation Difficile ? \"',\n      -1,\n      0,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"idk\"]',\n      '[0,1,2]',\n      '{\"if\":[{\"var\":\"difficult_intubation\",\"op\":\"est\",\"val\":\"vrai\"}],\"then\":\"yes\"}'\n    ],\n    [\n      2,\n      '\"A confirmer l\\'incubation difficile\"',\n      1,\n      0,\n      null,\n      '{\"yes\":[],\"no\":[],\"idk\":[1],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[1,0]',\n      null\n    ],\n    [\n      3,\n      '\"2ème Anesthésiste\"',\n      1,\n      1,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[1,0]',\n      null\n    ],\n    [\n      4,\n      '\"2ème Infirmière\"',\n      1,\n      2,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      5,\n      '\"Matériel\"',\n      1,\n      3,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[]',\n      null,\n      null\n    ],\n    [\n      6,\n      '\"Glidescope\"',\n      5,\n      0,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      7,\n      '\"Laryngoscope\"',\n      5,\n      1,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      8,\n      '\"Set Trachéo\"',\n      5,\n      2,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      9,\n      '\"Protocole\"',\n      1,\n      4,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      10,\n      '\"Est-elle susceptible d\\'être enceinte ?\"',\n      -1,\n      1,\n      '\"(Les données patient nous indiquent que la patiente est âgée entre 15 et 60 ans)\"',\n      '{\"yes\":[],\"no\":[],\"num\":[{\"var\":\"age\",\"op\":\">\",\"val\":15},{\"var\":\"age\",\"op\":\"<\",\"val\":60},{\"var\":\"gender\",\"op\":\"=\",\"val\":\"F\"}]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      11,\n      '\"Arrêt des rêgles depuis ?\"',\n      10,\n      0,\n      null,\n      '{\"yes\":[10],\"no\":[],\"num\":[]}',\n      '[\"text\"]',\n      null,\n      null\n    ],\n    [\n      12,\n      '\"Test disponible ?\"',\n      10,\n      1,\n      null,\n      '{\"yes\":[10],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      13,\n      '\"Négatif ?\"',\n      12,\n      0,\n      null,\n      '{\"yes\":[12],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      14,\n      '\"Faire test maintenant ?\"',\n      12,\n      1,\n      null,\n      '{\"yes\":[],\"no\":[12],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      15,\n      '\"Postposer l\\'intervention ?\"',\n      12,\n      2,\n      null,\n      '{\"yes\":[],\"no\":[12],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      16,\n      '\"Le patient est-il diabétique ?\"',\n      -1,\n      2,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      '{\"if\":[{\"var\":\"diabetic\",\"op\":\"est\",\"val\":\"vrai\"}],\"then\":\"yes\"}'\n    ],\n    [\n      17,\n      '\"Traitement Oral ?\"',\n      16,\n      0,\n      null,\n      '{\"yes\":[16],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      18,\n      '\"Arrêt des médicaments ?\"',\n      17,\n      0,\n      null,\n      '{\"yes\":[17],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      19,\n      '\"Traitement par piqure à insuline ?\"',\n      16,\n      1,\n      null,\n      '{\"yes\":[16],\"no\":[17],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      20,\n      '\"Dernière piqure le ? \"',\n      19,\n      0,\n      null,\n      '{\"yes\":[19],\"no\":[],\"num\":[]}',\n      '[\"text\"]',\n      null,\n      null\n    ],\n    [\n      21,\n      '\"Glycémie à l\\'arrivée HJ ?\"',\n      16,\n      2,\n      null,\n      '{\"yes\":[16],\"no\":[],\"num\":[]}',\n      '[\"normal\",\"anormal\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      22,\n      '\"Consentement chirugicaux et anéstésiques de père/mère\"',\n      -1,\n      3,\n      '\"Enfant de <15 ans, nécessite les consentement des parents\"',\n      '{\"yes\":[],\"no\":[],\"num\":[{\"var\":\"age\",\"op\":\"<\",\"val\":15}]}',\n      '[]',\n      null,\n      null\n    ],\n    [\n      23,\n      '\"Consentement chirugical du père\"',\n      22,\n      0,\n      null,\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\"<\",\"val\":15}]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      24,\n      '\"Consentement chirurgical de la mère\"',\n      22,\n      1,\n      null,\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\"<\",\"val\":15}]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      25,\n      '\"Consentement anestésique du père\"',\n      22,\n      2,\n      null,\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\"<\",\"val\":15}]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      26,\n      '\"Consentement anestésique de la mère\"',\n      22,\n      3,\n      null,\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\"<\",\"val\":15}]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      27,\n      '\"Checks vernis à ongle\"',\n      -1,\n      4,\n      '\"Ado/Adulte, nécessite vérification du vernis à ongle et des prothèses auditives/dentaires\"',\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\">\",\"val\":10}]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      28,\n      '\"Check Prothèses dentaires\"',\n      27,\n      0,\n      null,\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\">\",\"val\":10}]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      29,\n      '\"Check Prothèses auditives\"',\n      27,\n      1,\n      null,\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\">\",\"val\":10}]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      30,\n      '\"Maladie transmissible ?\"',\n      -1,\n      5,\n      '\"Si oui, l\\'information sera considérée dans les checklists suivantes (accueil du bloc, salle de réveil)\"',\n      '{\"yes\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      31,\n      '\"Par voie aérienne ? \"',\n      30,\n      0,\n      null,\n      '{\"yes\":[30],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      32,\n      '\"EPI (Masque FFP2, Visière)\"',\n      31,\n      0,\n      null,\n      '{\"yes\":[31],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      33,\n      '\"Protocole\"',\n      31,\n      1,\n      null,\n      '{\"yes\":[31],\"num\":[]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      34,\n      '\"Par voie sanguine ? \"',\n      30,\n      1,\n      null,\n      '{\"yes\":[30],\"no\":[31],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      35,\n      '\"EPI (Gants, blouses, lunettes)\"',\n      34,\n      0,\n      null,\n      '{\"yes\":[34],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      36,\n      '\"Protocole\"',\n      34,\n      1,\n      null,\n      '{\"yes\":[34],\"num\":[]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      37,\n      '\"Par contact ? \"',\n      30,\n      2,\n      null,\n      '{\"yes\":[30],\"no\":[31,34],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      38,\n      '\"EPI\"',\n      37,\n      0,\n      null,\n      '{\"yes\":[37],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      39,\n      '\"Protocole\"',\n      37,\n      1,\n      null,\n      '{\"yes\":[37],\"num\":[]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ]\n  ],\n  [\n    [\n      '\"id\"',\n      '\"name\"',\n      '\"parent_id\"',\n      '\"position\"',\n      '\"comment\"',\n      '\"cond\"',\n      '\"check\"',\n      '\"color\"',\n      '\"pre_check\"'\n    ],\n    [\n      1,\n      '\"Intubation Difficile ? \"',\n      -1,\n      0,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"idk\"]',\n      '[0,1,2]',\n      '{\"if\":[{\"var\":\"difficult_intubation\",\"op\":\"est\",\"val\":\"vrai\"}],\"then\":\"yes\"}'\n    ],\n    [\n      2,\n      '\"A confirmer l\\'incubation difficile\"',\n      1,\n      0,\n      null,\n      '{\"yes\":[],\"no\":[],\"idk\":[1],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[1,0]',\n      null\n    ],\n  ]\n]\n\n\n\n/*List of all patients*/\nconst patients = [\n  {\"id\": 0, \"lastname\": \"Dubois\", \"firstname\": \"Germaine\", \"gender\": \"F\", \"dateofbirth\": \"02/11/1940\", \"diabetic\":\"faux\", \"difficult_intubation\":\"vrai\"  },\n  {\"id\": 1, \"lastname\": \"Vandamme\", \"firstname\": \"Gilbert\", \"gender\": \"M\", \"dateofbirth\": \"08/25/1960\", \"diabetic\":\"vrai\", \"difficult_intubation\":\"vrai\" },\n  {\"id\": 2, \"lastname\": \"Perlot\", \"firstname\": \"Claude\", \"gender\": \"M\", \"dateofbirth\": \"12/16/1975\", \"diabetic\":\"faux\", \"difficult_intubation\":\"faux\" },\n  {\"id\": 3, \"lastname\": \"Boulet\", \"firstname\": \"Arnaud\", \"gender\": \"M\", \"dateofbirth\": \"03/17/1981\", \"diabetic\":\"faux\", \"difficult_intubation\":\"faux\" },\n  {\"id\": 4, \"lastname\": \"Charlier\", \"firstname\": \"Emile\", \"gender\": \"M\", \"dateofbirth\": \"09/19/1953\", \"diabetic\":\"faux\", \"difficult_intubation\":\"vrai\" },\n  {\"id\": 5, \"lastname\": \"Nash\", \"firstname\": \"Emilie\", \"gender\": \"F\", \"dateofbirth\": \"03/30/2015\", \"diabetic\":\"vrai\", \"difficult_intubation\":\"vrai\" },\n  {\"id\": 6, \"lastname\": \"Materne\", \"firstname\": \"Marie\", \"gender\": \"F\", \"dateofbirth\": \"08/23/1982\", \"diabetic\":\"faux\", \"difficult_intubation\":\"faux\" },\n  {\"id\": 7, \"lastname\": \"Bernard\", \"firstname\": \"Virginie\", \"gender\": \"F\", \"dateofbirth\": \"06/03/1986\", \"diabetic\":\"faux\", \"difficult_intubation\":\"faux\" },\n  {\"id\": 8, \"lastname\": \"Lemoine\", \"firstname\": \"Karine\", \"gender\": \"F\", \"dateofbirth\": \"01/25/1977\", \"diabetic\":\"vrai\", \"difficult_intubation\":\"vrai\" },\n]\n\n\nexport {checklist_list, checklist_list_array, patients}","/*Diverse utility elements*/\nimport { Series, DataFrame } from 'pandas-js';\n\n\n\n/*We consider a constant list of all possible answers to a question*/\nconst list_possible_answer = [\"yes\",\"no\",\"idk\",\"ok\",\"not_ok\", \"normal\", \"anormal\"]\nconst list_possible_answer_trad = {\"yes\":\"Oui\",\"no\":\"Non\",\"idk\":\"?\",\"ok\":\"OK\",\"not_ok\":\"Non OK\", \"normal\":\"Normal\", \"anormal\":\"Anormal\",}\n\nconst list_possible_num_var = [\"diabetic\",\"age\",\"yearofbirth\",\"difficult_intubation\", \"gender\"]\nconst list_possible_num_var_trad = {\"diabetic\":\"Diabétique\",\"age\":\"Âge\",\"yearofbirth\":\"Année de naissance\",\"difficult_intubation\":\"Intubation Difficile\", \"gender\":\"Genre\"}\n\nconst list_possible_op = [\"<\",\">\",\"=\"]\n\n\n/*Function to translate an answer into mountable french version*/\nconst trad_answer = (answer) => {\n  return list_possible_answer_trad[answer]\n}\n\nconst trad_num_var = (num_var) => {\n    return list_possible_num_var_trad[num_var]\n}\n\n/*List of possible options (answers), used in the multiselect component to choose the question answers*/\n\n\n/*Function that make the operation of type \"is val1 op val2 ?' with op the operator in string input*/\nconst simple_operation = (val1, string_op, val2) => {\n  switch (string_op) {\n    case \">\" : return val1 > val2;\n    case \"<\" : return val1 < val2;\n    case \"=\" : return val1 === val2 ;\n    case \"est\" : return val1 === val2;\n    default: return true;\n  }\n}\n\n/*Function that take the list of checklist, transform it in json format and export as .json file*/\nconst checklist_to_json = (checklistList) => {\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(checklistList));\n    console.log(dataStr)\n    var b = document.createElement('a');\n    b.href = dataStr ;\n    b.download = \"checklist.json\";\n    document.body.appendChild(b);\n    b.click();\n    b.remove()\n}\n\n/*Function to take a data array and put in a .csv file, with some characteristics*/\nfunction CsvGenerator(dataArray, fileName, separator, addQuotes) {\n    this.dataArray = dataArray;\n    this.fileName = fileName;\n    this.separator = separator || ',';\n    this.addQuotes = !!addQuotes;\n\n    if (this.addQuotes) {\n        this.separator = '\"' + this.separator + '\"';\n    }\n\n    this.getDownloadLink = function () {\n        var separator = this.separator;\n        var addQuotes = this.addQuotes;\n\n        var rows = this.dataArray.map(function (row) {\n            var rowData = row.join(separator);\n\n            if (rowData.length && addQuotes) {\n                return '\"' + rowData + '\"';\n            }\n\n            return rowData;\n        });\n\n        var type = 'data:text/csv;charset=utf-8';\n        var data = rows.join('\\n');\n\n        if (typeof btoa === 'function') {\n            type += ';base64';\n            data = btoa(data);\n        } else {\n            data = encodeURIComponent(data);\n        }\n\n        return this.downloadLink = this.downloadLink || type + ',' + data;\n    };\n\n    this.getLinkElement = function (linkText) {\n        var downloadLink = this.getDownloadLink();\n        var fileName = this.fileName;\n        this.linkElement = this.linkElement || (function() {\n            var a = document.createElement('a');\n            a.innerHTML = linkText || '';\n            a.href = downloadLink;\n            a.download = fileName;\n            return a;\n        }());\n        return this.linkElement;\n    };\n\n    // call with removeAfterDownload = true if you want the link to be removed after downloading\n    this.download = function (removeAfterDownload) {\n        var linkElement = this.getLinkElement();\n        linkElement.style.display = 'none';\n        document.body.appendChild(linkElement);\n        linkElement.click();\n        if (removeAfterDownload) {\n            document.body.removeChild(linkElement);\n        }\n    };\n}\n\nfunction checklist_tree_to_flat(checklist_tree ) {\n    let checklist_array = [[\"id\", \"name\", \"parent_id\", \"position\", \"comment\", \"cond\", \"check\", \"color\", \"pre_check\"]]\n    checklist_array = checklist_tree_to_flat_rec(checklist_tree, checklist_array, 0, 0);\n    console.log(checklist_array)\n    let csvGenerator = new CsvGenerator(checklist_array, 'my_csv.csv', \";\");\n    csvGenerator.download(true);\n\n    return checklist_array\n}\n\nfunction checklist_tree_to_flat_rec(item, array, parent_id, position){\n    if (item.id > 0){\n        array.push([item.id, item.name, parent_id, position, item.comment, JSON.stringify(item.cond), JSON.stringify(item.check), JSON.stringify(item.color), JSON.stringify(item.pre_check)])\n    }\n    for (let i=0; i<item.values.length; i++){\n        array = checklist_tree_to_flat_rec(item.values[i], array, item.id, i)\n    }\n    return array\n}\n\nfunction checklist_flat_to_tree(checklist_array, checklist_id){\n  let root_item = {\n    checklist_id:checklist_id,\n    id:-1,\n    num_values:[],\n    values:[]\n  }\n  return checklist_flat_to_tree_rec(root_item, checklist_array)\n}\n\nfunction checklist_flat_to_tree_rec(item, array){\n  let child_array = array.filter(elm => elm[2] === item.id)\n  child_array.sort(function(a, b){return a[3] - b[3]})\n  // console.log(array)\n  // console.log(child_array)\n  if (!child_array.length){\n    return item\n  }\n  for (let i=0; i< child_array.length; i++){\n    const elm = child_array[i]\n    let new_item = {\n      id: elm[0],\n      name : JSON.parse(elm[1]),\n      parent_id : elm[2],\n      position : elm[3],\n      comment : JSON.parse(elm[4]),\n      cond : JSON.parse(elm[5]),\n      check : JSON.parse(elm[6]),\n      color : JSON.parse(elm[7]),\n      pre_check : JSON.parse(elm[8]),\n      values:[]\n    }\n    new_item = checklist_flat_to_tree_rec(new_item, array)\n    item.values.push(new_item)\n  }\n  return item\n}\n\n\n\nexport {list_possible_answer_trad, list_possible_answer, list_possible_num_var_trad, list_possible_num_var, list_possible_op, trad_answer, trad_num_var, CsvGenerator, simple_operation, checklist_to_json, checklist_tree_to_flat, checklist_flat_to_tree}","import React from \"react\";\nimport * as utils from \"./utils\";\n\n/* Component of the upper navbar of the webpage\n* -setCreationMode: bool indicating if we are in creation mode set function\n* -setCreditMode: bool indicating if we are in credit mode set function\n* -trimmedCanvasUrl: the canvas url data of the signature\n* -result: dict containing the results of the current checklist check-in\n* -checklistList: List containing the different checklists\n* -swapchecklist: function that changes the current checklist\n* */\nfunction AppNavbar ({props}) {\n\n  let {setCreationMode, setCreditMode, trimmedCanvasUrl, checklistList, swapchecklist, import_csv_result, result} = props;\n\n  /*Function triggered when we want to download the signature as .png file if there is a canvas url data*/\n  const image_download = () => {\n    if(trimmedCanvasUrl)\n      downloadImage(trimmedCanvasUrl, \"image.png\");\n  }\n\n  /*Activate the creation mode*/\n  const activatecreatemode = () => {\n    setCreationMode(1)\n  }\n\n  /*Deactivate the creation mode*/\n  const deactivatecreatemode = () => {\n    setCreationMode(0)\n  }\n\n  /*Activate the credit mode*/\n  const activatecreditmode = () => {\n    setCreditMode(1)\n  }\n\n  /*Deactivate the creation mode*/\n  const deactivatecreditmode = () => {\n    setCreditMode(0)\n  }\n\n  /*Return the different elements of the navbar*/\n  return (\n    <div className=\"iq-top-navbar h-auto \" >\n      <div className=\"iq-navbar-custom py-2\">\n        <nav className=\"navbar navbar-expand-lg navbar-light p-0\">\n          {/*Navbar Title*/}\n          <div className=\"navbar-brand pl-4\">\n            <a href=\"#\" onClick={deactivatecreditmode}>\n              <span>SLS</span>\n            </a>\n          </div>\n          {/*/!*Navbar Toggler button*!/*/}\n          <label className=\"navbar-toggler p-0 m-0\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\"\n                  aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </label>\n          {/*/!*Navbar links*!/*/}\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav  p-2 pl-4\">\n              <label className=\"nav-link active m-0\" aria-current=\"page\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={deactivatecreditmode}>Page d'accueil</label>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={import_csv_result}>Importer la checklist</label>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={image_download}>Importer la signature</label>\n              {/*Navbar checklist selection dropdown link*/}\n              <li className=\"nav-item dropdown\">\n                <label className=\"nav-link dropdown-toggle m-0\" id=\"navbarDropdown\" role=\"button\"\n                   data-toggle=\"dropdown\" aria-expanded=\"false\">\n                  Liste des checklists disponibles\n                </label>\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  {checklistList.map((i, index) => (\n                    <li key={index}><label className=\"dropdown-item m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={() => swapchecklist(i.checklist_id)}>Checklist n°{i.checklist_id}</label></li>\n                  ))}\n                </ul>\n              </li>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\"  onClick={activatecreatemode}>Activer le mode Création</label>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={deactivatecreatemode}>Désactiver le mode Création</label>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={activatecreditmode}>A propos</label>\n            </div>\n          </div>\n        </nav>\n      </div>\n    </div>\n  )\n}\n\n/*Download a data in a file with defined filename*/\nconst downloadImage = function(data, filename) {\n  let a = document.createElement('a');\n  a.href = data;\n  a.download = filename;\n  document.body.appendChild(a);\n  a.click();\n};\n\nexport {AppNavbar}","import SignaturePad from \"react-signature-canvas\";\nimport React from \"react\";\n\n/*Component for the signature pad\n* -sigpad: object representing the signature pad, fill in by the SignaturePad component\n* -setTrimmedCanvasUrl: the canvas url data of the signature set function\n* */\nfunction AppSignature ({props}) {\n\n  let {sigpad, setTrimmedCanvasUrl} = props;\n\n  /*Reinitialize the canvas and sigpad*/\n  const reinit_canvas = () => {\n    sigpad.clear()\n    setTrimmedCanvasUrl(null)\n  }\n\n  /*Import the current sigpad information into canvas url data*/\n  const trim_canvas = () => {\n    var dataUrl = sigpad.getTrimmedCanvas().toDataURL();\n    setTrimmedCanvasUrl(dataUrl);\n  }\n\n  /*Return the signature elements*/\n  return (\n    <div className=\"container iq-card mt-5\">\n      <div className=\"row align-items-center p-0 m-0 h-100\">\n        {/*Information text*/}\n        <div className=\"col-sm-3 m-0 p-0 text-center text-dark\">\n          Veuillez rentrer votre signature :\n        </div>\n        {/*Signature pad component, receiving the signature*/}\n        <div className=\"col m-0 p-0 h-100 py-2 \">\n          <div className=\"container iq-card m-0 bg-light border\">\n            <div className=\"sigContainer\">\n              <SignaturePad canvasProps={{className: \"sigPad\"}}\n                ref={(ref) => { sigpad = ref }} />\n            </div>\n          </div>\n        </div>\n        {/*Validation and Reinitialisation buttons*/}\n        <div className=\"col-sm-3 mx-2 p-0\">\n          {/*Button to validate the current signature and put info into data*/}\n          <div className=\"row align-items-center p-0 m-0 mb-2 px-4\">\n            <button type=\"button\" className=\"btn btn-primary w-100\" onClick={trim_canvas}>\n              Valider la signature\n            </button>\n          </div>\n          {/*Button to clean the current signature canvas and remove info in data*/}\n          <div className=\" row align-items-center p-0 m-0 px-4\">\n            <button type=\"button\" className=\"btn btn-warning text-dark w-100\" onClick={reinit_canvas}>\n              Réinitialiser\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport {AppSignature}","import BootstrapSelect from \"react-bootstrap-select-dropdown\";\nimport * as utils from \"./utils\";\nimport React, {useState} from \"react\";\nimport {list_possible_answer, list_possible_num_var, list_possible_op, trad_answer, trad_num_var, checklist_to_json} from \"./utils\";\n\n/* Component for the creation mode box\n* -checklist: current checklist (state variable)\n* -setChecklist: current checklist set function\n* -swapchecklist: function that changes the current checklist\n* -checklistList : list of checklists (state variable)\n* -setChecklistList : list of checklist set function\n* -checklistId : id of the current checklist (state variables)\n* -setChecklistId : id of the current checklist set function\n* -forceUpdate: function that force the reload of component if necessary\n* */\nfunction CreateBox ({props}) {\n\n  let {checklist, setChecklist, checklistList, setChecklistList, checklistId, setChecklistId, forceUpdate, setResult, setIsDict, init_dict, setIsPreCheckDone, currentQuestion, setCurrentQuestion} = props\n\n  /* State variables used only in creation mode\n  * -currentQuestion : the question currently into creation/modification\n  * -currentParentQuestion : the question that is parent of the current question\n  * -currentName : the current name\n  * -tempNums : the numerical condition values (var, op and val) of the current condition the user is going to add\n  * -tempPreChech : the precheck condition values (var, op, val) and then value of the current precheck the user is going to add\n  */\n\n  let [currentParentQuestion, setCurrentParentQuestion] = useState(checklist)\n  let [currentName, setCurrentName] = useState(checklist && checklist.values.length ? checklist.values[0].name : \" \" )\n  let [currentComment, setCurrentComment] = useState(checklist && checklist.comment ? checklist.comment : null)\n\n  let [tempNums, setTempNums] = useState({})\n  let [tempPreCheck, setTempPreCheck] = useState({})\n\n  let [pairIndicator, setPairIndicator] = useState(0)\n\n\n  // console.log(\"main\", currentQuestion)\n\n  /* Make the complete list of questions of the current checklist*/\n  let questionList = [];\n  function enumquestions (item){\n    if (item.id > 0)\n      questionList.push(item.id)\n    for (const value of item.values){\n      enumquestions(value)\n    }\n  }\n  if (checklist) enumquestions(checklist)\n\n  /*Create a list, usable by the select component, of the possible answer*/\n  let possible_answers = []\n  function construct_possible_answers (){\n    possible_answers = []\n    list_possible_answer.forEach(function(answer){\n      possible_answers.push({\n          \"labelKey\": answer,\n        \"value\": trad_answer(answer),\n        \"isSelected\":currentQuestion.check.includes(answer),\n      })\n    })\n  }\n  if (currentQuestion) construct_possible_answers()\n\n  /*Create a list, usable by the select component, of the possible variables of conditions*/\n  let possible_vars = []\n  function construct_possible_vars (){\n    possible_vars = []\n    list_possible_num_var.forEach(function(num_var){\n      possible_vars.push({\"labelKey\": num_var, \"value\": trad_num_var(num_var)})\n    })\n  }\n  if (currentQuestion) construct_possible_vars()\n\n  /*Create a list, usable by the select component, of the possible operators of conditions*/\n  let possible_op = []\n  function construct_possible_op (){\n    possible_op = []\n    list_possible_op.forEach(function(op){\n      possible_op.push({\"labelKey\": op, \"value\": op})\n    })\n  }\n  if (currentQuestion) construct_possible_op()\n\n  /*Create a list, usable by the select component, of the possible answers of this question*/\n  let possible_pre_check = []\n  function construct_possible_pre_check (){\n    possible_pre_check = []\n    currentQuestion.check.forEach(function(pre_check){\n      possible_pre_check.push({\"labelKey\": pre_check, \"value\": trad_answer(pre_check)})\n    })\n  }\n  if (currentQuestion) construct_possible_pre_check()\n\n\n  // /*Set state variables*/\n  // function set_elements () {\n  //   setCurrentQuestion(currentQuestion)\n  //   setCurrentParentQuestion(currentParentQuestion)\n  //   setChecklist(checklist)\n  //   setChecklistList(checklistList)\n  // }\n\n  /*Reinitialize the current question, which means taking the first question of the current checklist as current question*/\n  function reinit_current_question (checklist) {\n    setCurrentQuestion(checklist && checklist.values.length ? checklist.values[0] : null)\n    setCurrentParentQuestion(checklist)\n    setCurrentName(checklist && checklist.values.length ? checklist.values[0].name : \"\")\n    setCurrentComment(checklist && checklist.values.length ? checklist.values[0].comment : \"\")\n  }\n\n  /*Search for a question (with id) in item and his children, knowing that parent_item is the parent of item. When found, set\n  * the current question to this question (and so for the parent and name)*/\n  function searchquestion (item, parent_item, id) {\n    if (item.id === id){\n      console.log(\"found\", item)\n      currentQuestion = item\n      currentParentQuestion = parent_item\n      setCurrentQuestion(currentQuestion)\n      setCurrentParentQuestion(currentParentQuestion)\n      setCurrentName(currentQuestion.name)\n      setTempNums({})\n      setCurrentComment(currentQuestion.comment)\n      setPairIndicator(!pairIndicator)\n      return currentQuestion\n    }\n    let current_question = null\n    for (const value of item.values){\n      current_question = searchquestion(value,item,id) || current_question;\n    }\n    return current_question\n  }\n\n  /*Remove the current question (by removing the question from children of his parent),\n  * and reset to a new current queston\n  */\n  function removequestion (){\n    if (currentParentQuestion) {\n      currentParentQuestion.values = currentParentQuestion.values.filter(e => e.id !== currentQuestion.id)\n      reinit_current_question(checklist)\n      forceUpdate() // Dont know why the remove question need force update but not remove checklist\n    }\n  }\n\n  /*Add a new question to the checklist. For now we put it as the last children of the checklist item\n  * (the last question at first level of the tree ) and we put basic elements inside\n  */\n  function addnewquestion (){\n    let last_id = questionList.length ? questionList[questionList.length-1] : 0\n    let new_empty_question =\n      {\n        id: last_id+1,\n        name : \"\",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\", \"no\"],\n        color : [0,1],\n        values: [],\n      }\n    checklist.values.push(new_empty_question)\n    //set_elements()\n    searchquestion(checklist, null, last_id+1)\n  }\n\n  function check_id(item, id){\n    return item.id === id || (item.values.length && item.values.every(value => check_id(value)))\n  }\n\n  /*Move the current question to another position (the last child of the question with id), we reset the cond for now */\n  function movecurrentquestion_sibling (id){\n    if (!check_id(currentQuestion, id)) {\n      let currentQuestionCopy = {...currentQuestion}\n      removequestion()\n      searchquestion(checklist, null, id)\n      let chosen_question_position = currentParentQuestion.values.findIndex(elm => elm.id === id)\n      currentQuestionCopy.cond = {\"yes\": [], \"no\": [], num: []}\n      currentParentQuestion.values.splice(chosen_question_position + 1, 0, currentQuestionCopy)\n      //set_elements()\n      searchquestion(checklist, null, currentQuestionCopy.id)\n      forceUpdate()\n    }\n  }\n\n  function movecurrentquestion_child (id){\n    if (!check_id(currentQuestion, id)) {\n      let currentQuestionCopy = {...currentQuestion}\n      currentQuestionCopy.cond = {\"yes\":[], \"no\":[], num:[]}\n      removequestion()\n      searchquestion(checklist, null, id)\n      currentQuestion.values.splice(0,0,currentQuestionCopy)\n      //set_elements()\n      searchquestion(checklist, null, currentQuestionCopy.id)\n      forceUpdate()\n    }\n  }\n\n  /*Modify the current name*/\n  const modifyname = (event) => {\n    currentName = event.target.value\n    setCurrentName(currentName)\n  }\n\n  /*Update the current question name*/\n  const updatename = () => {\n    currentQuestion.name = currentName\n    setCurrentQuestion(currentQuestion)\n    forceUpdate()\n  }\n\n    /*Modify the current name*/\n  const modifycomment = (event) => {\n    currentComment = event.target.value\n    setCurrentComment(currentComment)\n  }\n\n  /*Update the current question name*/\n  const updatecomment = () => {\n    if (currentComment)\n      currentQuestion.comment = currentComment\n    else\n      delete currentQuestion.comment\n    forceUpdate()\n  }\n\n  /*Change the check array of the current question, containing the possible answers*/\n  const changecheck = (selectedOptions) => {\n    if (selectedOptions.selectedKey.length){\n      currentQuestion.check = selectedOptions.selectedKey\n      let current_colors = currentQuestion.color\n      console.log(current_colors)\n      if (currentQuestion.check.length >= current_colors.length)\n        current_colors = current_colors.concat(new Array(currentQuestion.check.length - current_colors.length).fill(2))\n      else\n        current_colors.splice(currentQuestion.check.length)\n      currentQuestion.color = current_colors\n      console.log(current_colors)\n\n      setCurrentQuestion(currentQuestion)\n      switchpairindicator()\n      forceUpdate()\n    }\n  }\n\n  /*Add a checklist (with basic content) to the list of checklist, and switch to this checklist*/\n  const addchecklist = () => {\n    const n_checklist = checklistList.length ? checklistList[checklistList.length-1].checklist_id+1 : 0\n    let new_empty_checklist =\n      {\n        checklist_id: n_checklist,\n        id: -1,\n        num_values: [],\n        values: [\n          {\n            id: 1,\n            name : \"\",\n            check : [\"yes\",\"no\"],\n            color : [0,1],\n            cond: {\"yes\":[], \"no\":[], num:[]},\n            values: []\n          }\n        ],\n      }\n    checklistList.push(new_empty_checklist)\n    setChecklistList(checklistList)\n    swapchecklist_creation_mode(n_checklist)\n  }\n\n  /*Remove the current checklist from the list of checklist and take the first checklist still available as current checklist*/\n  const removechecklist = () => {\n    console.log(checklistList, checklistId)\n    checklistList = checklistList.filter(e => e.checklist_id !== checklistId)\n    console.log(checklistList)\n    setChecklistId(checklistList.length ? checklistList[0].checklist_id : \" -\")\n    checklist = checklistList.length ? checklistList[0] : null\n    setChecklist(checklist)\n    setChecklistList(checklistList)\n    reinit_current_question(checklist)\n  }\n\n  /*Function that swap the current checklist and reinitialize the current question*/\n  const swapchecklist_creation_mode = (checklist_id) =>  {\n    setChecklistId(checklist_id);\n    checklist = checklistList.filter(e => e.checklist_id === checklist_id)[0]\n    setChecklist(checklist)\n    setResult({})\n    setIsDict(init_dict)\n    setIsPreCheckDone([]) //Do a warning when switch checklist but seems not causing problem\n    setPairIndicator(!pairIndicator)\n    reinit_current_question(checklist)\n  }\n\n  /*Function that add a  question condition (with it answer and id) to current question*/\n  const addcond = (answer, id) => {\n    if (currentQuestion.cond[answer]) currentQuestion.cond[answer].push(id)\n    else currentQuestion.cond[answer] = [id]\n\n    setCurrentQuestion(currentQuestion)\n    forceUpdate()\n  }\n\n  /*Function that delete a  question condition (with it answer and id) to current question*/\n  const deletecond = (answer, id) => {\n    currentQuestion.cond[answer] = currentQuestion.cond[answer].filter(elm => elm !== id)\n    console.log(currentQuestion)\n    setCurrentQuestion(currentQuestion)\n    //set_elements()\n    forceUpdate()\n  }\n\n  /*Function that update the tempNum.var variable with input*/\n  const addtempnumvar = (selectedOptions) => {\n    if (!tempNums){ tempNums = {}}\n    tempNums = {}\n    tempNums.var = selectedOptions.selectedKey[0]\n    setTempNums(tempNums)\n\n    forceUpdate()\n  }\n  /*Function that update the tempNum.op variable with input*/\n  const addtempnumop = (selectedOptions) => {\n    if (!tempNums){ tempNums = {}}\n    tempNums.op = selectedOptions.selectedKey[0]\n    setTempNums(tempNums)\n    forceUpdate()\n  }\n    /*Function that update the tempNum.val variable with input*/\n  const addtempnumval = (event) => {\n    if (!tempNums){ tempNums = {}}\n    if(tempNums.var && [\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempNums.var) )\n      tempNums.val = event.selectedKey[0]\n    else\n      tempNums.val = event.target.value\n    setTempNums(tempNums)\n    forceUpdate()\n  }\n\n  /*Function that add a numerical condition (with values contains in tempNum) to currentQuestion*/\n  const addnum = () => {\n    if(tempNums.var && tempNums.val && [\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempNums.var)){\n      currentQuestion.cond.num.push({var: tempNums.var, op: \"est\", val: tempNums.val})\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n    else if (tempNums.var && tempNums.op && tempNums.val) {\n      currentQuestion.cond.num.push({var: tempNums.var, op: tempNums.op, val: tempNums.val})\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n  }\n\n  /*Function that remove a numerical condition of the currentQuestion*/\n  const removenum = (index) => {\n    console.log(\"supprimer\", index)\n    currentQuestion.cond.num.splice(index,1)\n    console.log(currentQuestion.cond.num)\n    setCurrentQuestion(currentQuestion)\n    //set_elements()\n    forceUpdate()\n  }\n\n  /*Function that update the tempPrecheck.var variable with input*/\n  const addtempprecheckvar = (selectedOptions) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck = {}\n    tempPreCheck.var = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n  /*Function that update the tempPrecheck.op variable with input*/\n  const addtempprecheckop = (selectedOptions) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck.op = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n  /*Function that update the tempPrecheck.val variable with input*/\n  const addtempprecheckval = (event) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    if(tempPreCheck.var && [\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempPreCheck.var) )\n      tempPreCheck.val = event.selectedKey[0]\n    else\n      tempPreCheck.val = event.target.value\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n\n    /*Function that update the tempPrecheck.then variable with input*/\n  const addtempprecheckthen = (selectedOptions) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck.then = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n\n\n  /*Function that add a precheck condition (with values contains in tempPreCheck) and precheck then to currentQuestion*/\n  const addprecheck = () => {\n    if(tempPreCheck.var && tempPreCheck.val && tempPreCheck.then &&  [\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempPreCheck.var)){\n      if (!currentQuestion.pre_check)\n        currentQuestion.pre_check = {if:[],then:null}\n      currentQuestion.pre_check.then = tempPreCheck.then\n      currentQuestion.pre_check.if.push({var: tempPreCheck.var, op: \"est\", val: tempPreCheck.val})\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n    else if (tempPreCheck.var && tempPreCheck.op && tempPreCheck.val && tempPreCheck.then) {\n      if (!currentQuestion.pre_check)\n        currentQuestion.pre_check = {if:[],then:null}\n      currentQuestion.pre_check.then = tempPreCheck.then\n      currentQuestion.pre_check.if.push({var: tempPreCheck.var, op: tempPreCheck.op, val: tempPreCheck.val})\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n  }\n\n  const updateprecheckthen = () => {\n    if(currentQuestion.pre_check){\n      currentQuestion.pre_check.then = tempPreCheck.then\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n  }\n\n  /*Function that remove a precheck condition of the currentQuestion*/\n  const removeprecheck = (index) => {\n    console.log(\"supprimer\", index)\n    currentQuestion.pre_check.if.splice(index,1)\n    if (!currentQuestion.pre_check.if.length)\n      currentQuestion.pre_check = null\n    setCurrentQuestion(currentQuestion)\n    //set_elements()\n    forceUpdate()\n  }\n\n  const switchpairindicator = () => {\n    pairIndicator = (pairIndicator + 1)%4\n  }\n\n  const changecolor = (answer, color_id) => {\n    currentQuestion.color[currentQuestion.check.indexOf(answer)] = color_id\n    setCurrentQuestion(currentQuestion)\n    forceUpdate()\n  }\n\n  /*Return the create box, with all it elements*/\n  return (\n    <div className=\"container iq-card pt-2 border border-dark\">\n\n      {/*Title text*/}\n      <div className=\"iq-card bg-primary text-center mb-2\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title text-white\">Mode Création </h4>\n          <p className=\"card-text  m-0\">Vous pouvez ajouter, supprimer, modifier des checklists et des questions ici.</p>\n          <p className=\"card-text \">La checklist modifiée s'affiche en dessous.</p>\n        </div>\n      </div>\n\n      {/*Question and Checklist selection and show*/}\n      <div className=\"row align-items-center p-0 m-0 pb-2 border-bottom border-\">\n        {/*Checklist selection dropdown*/}\n        <div className=\"col align-items-center \">\n          <div className=\"dropright text-center\">\n            <button className=\"btn btn-info dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-toggle=\"dropdown\" aria-expanded=\"false\">\n              Sélectionnez la checklist\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Add a checklist (and select it)*/}\n              <li><label className=\"dropdown-item \" onClick={function(event){ addchecklist(); forceUpdate()}}>Nouvelle checklist</label></li>\n              {/*Select an existing checklist*/}\n              {checklistList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item \" onClick={function (){swapchecklist_creation_mode(i.checklist_id)}}>\n                  Checklist n°{i.checklist_id}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        {/*Checklist show*/}\n        <div className=\"col align-items-center p-2\">\n          <div className=\"iq-card card-light text-dark text-center shadow-sm mb-0 \">\n            Checklist n°{checklistId}\n          </div>\n        </div>\n        {/*Question show*/}\n        <div className=\"col align-items-center p-2\">\n          <div className=\"iq-card card-light text-dark text-center shadow-sm mb-0\">\n            Question n°{currentQuestion ? currentQuestion.id : \" -\"}\n          </div>\n        </div>\n        {/*Checklist selection dropdown*/}\n        <div className=\"col align-items-center \">\n          <div className=\"dropleft text-center\">\n            <button className=\"btn btn-info dropdown-toggle  \" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-toggle=\"dropdown\" aria-expanded=\"false\">\n              Sélectionnez la question\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Add a question (and select it)*/}\n              <li><label className=\"dropdown-item \" onClick={function(event){ addnewquestion(); forceUpdate()}}>Nouvelle question</label></li>\n              {/*Select an existing checklist*/}\n              {questionList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item \" onClick={function(){searchquestion(checklist, null, i)}}>\n                  Question n°{i}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {currentQuestion ? ( <div>\n        {/*Question Name selection*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark \">\n            Nom de la question :\n          </div>\n          {/*Question name text input */}\n          <div className=\"col-sm-4 align-items-center\">\n            <input className=\"form-control w-100 mb-0\" type = \"text \" aria-label=\"text input\" value={currentName} onChange={modifyname}/>\n          </div>\n          {/*Question name validation button*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center \">\n            <button className=\"btn btn-warning \" onClick={ () => updatename()}>\n              Valider le nom\n            </button>\n          </div>\n        </div>\n\n        {/*Question Comment selection*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark  \">\n            Commentaire (optionnel) de la question :\n          </div>\n          {/*Question comment text input */}\n          <div className=\"col-sm-4 align-items-center \">\n            <textarea className=\"form-control form-control-custom\" id=\"exampleFormControlTextarea1\" rows=\"2\" value={currentComment ? currentComment:\"\"} onChange={modifycomment}/>\n          </div>\n          {/*Question comment validation button*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center\">\n            <button className=\"btn btn-warning \" onClick={function(event){ updatecomment(); forceUpdate()}}>\n              Valider le commentaire\n            </button>\n          </div>\n        </div>\n\n        {/*Question Position (below which question the current question must be put)*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark\">\n            Placer la question à la suite d'une autre :\n          </div>\n          <div className=\"col-sm-4 align-items-center\">\n          </div>\n          {/*Other question as parent selection dropdown*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center\">\n            <div className=\"dropleft text-center\">\n              <button className=\"btn btn-warning dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton1\"\n                      data-toggle=\"dropdown\" aria-expanded=\"false\">\n                Quelle question ?\n              </button>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                {/*Put the question at top level*/}\n                <li><label className=\"dropdown-item \" onClick={() => movecurrentquestion_child(-1)}>\n                  Au début</label>\n                  </li>\n                {/*Put the question at child of another question*/}\n                {questionList.map((i, index) => (\n                  <li key={index}><label className=\"dropdown-item \" onClick={() => movecurrentquestion_sibling(i)}>\n                    Question n°{i}</label>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/*Question situation (child or sibling of the upper question)*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark \">\n            Placer la question comme découlant d'une autre :\n          </div>\n          <div className=\"col-sm-4 align-items-center\">\n          </div>\n          {/*Choice between child and sibling*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center\">\n            <div className=\"dropleft text-center\">\n              <button className=\"btn btn-warning dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton1\"\n                      data-toggle=\"dropdown\" aria-expanded=\"false\">\n                Quelle question ?\n              </button>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                {/*Put the question at top level*/}\n                <li><label className=\"dropdown-item \" onClick={() => movecurrentquestion_child(-1)}>\n                  Au début</label>\n                  </li>\n                {/*Put the question at child of another question*/}\n                {questionList.map((i, index) => (\n                  <li key={index}><label className=\"dropdown-item \" onClick={() => movecurrentquestion_child(i)}>\n                    Question n°{i}</label>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/*(Multi)selection of answers of the current question*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark \">\n            Quelles réponses possibles ? :\n          </div>\n          <div className=\"col-sm-4 align-items-center\">\n          </div>\n          {/*(Multi)Selection dropdown*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center\">\n            <BootstrapSelect key={pairIndicator} className=\" w-100 \" selectStyle =\"btn-warning\" options={possible_answers} isMultiSelect={true} placeholder=\"Aucune\" onChange={changecheck}/>\n          </div>\n        </div>\n\n        {/*selection of colors of answers of the current question*/}\n        <div className=\"border-bottom m-0 py-2 text-center\">\n          <button className=\"btn btn-secondary m-auto p-2 my-2 \" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseColors\"\n                  aria-expanded=\"false\" aria-controls=\"collapseExample\">\n            <i className=\"las la-angle-down\"/> Modifier les couleurs des questions <i className=\"las la-angle-down\"/>\n          </button>\n          <div className=\"collapse m-0 p-0\" id=\"collapseColors\">\n            <div className=\"row align-items-center p-2 m-0 border-bottom\">\n              {/*Information text*/}\n              <div className=\"col-sm-3 align-items-center text-dark \">\n                Avec quelles couleurs ? :\n              </div>\n              <div className=\"col-sm-9 align-items-center text-center\">\n                {currentQuestion.check.map((answer,index) => (\n                  <div key={index} className=\"row\">\n                    <div className=\"col text-center justify-content-center my-4\">\n                      <div className=\" iq-card card-grey text-center shadow-sm text-dark m-0\">\n                        {utils.trad_answer(answer)}\n                      </div>\n                    </div>\n                    <div className=\"col text-center justify-content-center my-4\">\n                      <div className=\" iq-card card-grey text-center shadow-sm text-dark m-0\">\n                        {currentQuestion.color[index] === 0 ? \"Vert\" : currentQuestion.color[index] === 1 ? \"Rouge\" : \"Gris\"}\n                      </div>\n                    </div>\n                    <div className=\"col text-center justify-content-center my-3\">\n                      <div className=\"dropleft text-center\">\n                        <button className=\"btn btn-warning dropdown-toggle m-0 \" type=\"button\" id=\"dropdownMenuButton1\"\n                                data-toggle=\"dropdown\" aria-expanded=\"false\">\n                          Quelle couleur ?\n                        </button>\n                        <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                          {[\"Vert\",\"Rouge\",\"Gris\"].map((color, index) => (\n                            <li key={index}><label className=\"dropdown-item \" onClick={() => changecolor(answer, index)}>\n                              {color}</label>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/*Question conditions of the current question (optional part, so it needs to be collapsable)*/}\n        <div className=\"border-bottom m-0 py-2 text-center\">\n          <button className=\"btn btn-secondary m-auto p-2 my-2 \" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseQuestionConditions\"\n                  aria-expanded=\"false\" aria-controls=\"collapseExample\">\n            <i className=\"las la-angle-down\"/> Ajouter/Supprimer des conditions sur les autres questions <i className=\"las la-angle-down\"/>\n          </button>\n          <div className=\"collapse m-0 p-0\" id=\"collapseQuestionConditions\">\n            <div className=\"row align-items-center p-2 m-0\">\n              <div className=\"col-sm-3 align-items-center text-dark \">\n                Quelles conditions sur les réponses ? :\n              </div>\n              <div className=\"col-sm-9 align-items-center\">\n                {utils.list_possible_answer.map((answer, index) => (\n                  <div key={index} className=\"row\">\n                    <div className=\"col align-items-center p-2 my-auto\">\n                      <div className=\"iq-card card-grey text-center shadow-sm m-0 text-dark \">\n                        {trad_answer(answer)}\n                      </div>\n                    </div>\n                    <div className=\"col align-items-center p-2\">\n                      <div className=\"list-group list-group-horizontal m-0\">\n                        {/*For each possible answer, if in item.check, we put a checkbox*/}\n                        {(currentQuestion && currentQuestion.cond[answer]) ? currentQuestion.cond[answer].map( (id, index) => (\n                            <button key={index} className=\" list-group-item list-group-item-custom btn btn-outline-secondary \" type=\"button\" onClick={() => deletecond(answer, id)} >{id} </button>\n                        )): null}\n                      </div>\n\n                    </div>\n                    <div className=\"col align-items-center p-2 my-auto\">\n                      <div className=\"dropleft text-center\">\n                        <button className=\"btn btn-warning dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton1\"\n                                data-toggle=\"dropdown\" aria-expanded=\"false\">\n                          Quelle question ?\n                        </button>\n                        <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                          {questionList.map((id, index) => (\n                            <li key={index}><label className=\"dropdown-item \" onClick={() => addcond(answer, id)}>\n                              Question n°{id}</label>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/*Numerical conditions of the current question*/}\n        <div className=\"border-bottom m-0 py-2 text-center\">\n          <button className=\"btn btn-secondary m-auto p-2 my-2 \" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseNumConditions\"\n                  aria-expanded=\"false\" aria-controls=\"collapseExample\">\n            <i className=\"las la-angle-down\"/> Ajouter/Supprimer des conditions numériques <i className=\"las la-angle-down\"/>\n          </button>\n          <div className=\"collapse m-0 p-0\" id=\"collapseNumConditions\">\n            <div className=\"col align-items-center p-2 m-0\">\n              {/*Current Numerical condition list display*/}\n              {(currentQuestion && currentQuestion.cond.num) ? currentQuestion.cond.num.map( (num, index) => (\n                <div  key={index} className=\"row justify-content-md-center py-2\">\n                  <div className=\"col-sm-3 align-items-center my-auto\">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark \">\n                      {trad_num_var(num.var)}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto \">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark \">\n                      {num.op}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto \">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark\">\n                      {num.val}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto text-center\">\n                    <button className=\"btn btn-danger \" onClick={() => removenum(index)} >\n                      <div data-icon=\"&#xe053;\" className=\"icon mt-1\"/>\n                    </button>\n                  </div>\n                </div>\n              )): null}\n              {/*Add numerical condition section */}\n              <div>\n                <div className=\"row justify-content-md-center py-2\">\n                  <div className=\"col-sm-3 align-items-center my-auto\">\n                    <BootstrapSelect key={pairIndicator} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle variable ?\" options={possible_vars} onChange={addtempnumvar}/>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto\">\n                    {[\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempNums.var) ?\n                      <div>est</div>\n                      :\n                      <BootstrapSelect key={pairIndicator} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quel opérateur ?\" options={possible_op} onChange={addtempnumop}/>\n                    }\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto \">\n                    {[\"diabetic\",\"difficult_intubation\"].includes(tempNums.var) ?\n                      <BootstrapSelect key={tempNums.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle valeur ?\"\n                                     options={[{\"labelKey\": \"vrai\", \"value\": \"Vrai\"},{\"labelKey\": \"faux\", \"value\": \"Faux\"}]  } onChange={addtempnumval}/>\n                      :\n                      <div> {tempNums.var === \"gender\" ?\n                        <BootstrapSelect key={tempNums.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle valeur ?\"\n                                     options={[{\"labelKey\": \"F\", \"value\": \"F\"},{\"labelKey\": \"M\", \"value\": \"M\"}] } onChange={addtempnumval}/>\n                        :\n                        <input type=\"number\" className=\"form-control \" placeholder=\"Quelle valeur ?\" onChange={addtempnumval}/>\n                      } </div>\n                    }\n                  </div>\n                  <div className=\"col-sm-3 align-items-center text-center my-auto\">\n                    <button className=\"btn btn-warning w-100 \" onClick={() => addnum()} >\n                      Valider\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/*Precheck conditions of the current question*/}\n        <div className=\"border-bottom m-0 py-2 text-center\">\n          <button className=\"btn btn-secondary m-auto p-2 my-2 \" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsePreCheck\"\n                  aria-expanded=\"false\" aria-controls=\"collapseExample\">\n            <i className=\"las la-angle-down\"/> Ajouter/Supprimer des conditions pour que la question soit pré-checkée <i className=\"las la-angle-down\"/>\n          </button>\n          <div className=\"collapse m-0 p-0\" id=\"collapsePreCheck\">\n            <div className=\"col align-items-center p-2 m-0\">\n              {/*Current PreCheck condition list (and then value) display*/}\n              {(currentQuestion && currentQuestion.pre_check) ? currentQuestion.pre_check.if.map( (pre_check, index) => (\n                <div  key={index} className=\"row justify-content-md-center py-2\">\n                  <div className=\"col-sm-3 align-items-center my-auto\">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark \">\n                      {trad_num_var(pre_check.var)}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto \">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark\">\n                      {pre_check.op}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto \">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark\">\n                      {pre_check.val}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto text-center\">\n                    <button className=\"btn btn-danger \" onClick={() => removeprecheck(index)} >\n                      <div data-icon=\"&#xe053;\" className=\"icon mt-1\"/>\n                    </button>\n                  </div>\n                </div>\n              )): null}\n              {(currentQuestion && currentQuestion.pre_check) ? (\n                <div className=\"row justify-content-md-center py-2\">\n                  <div className=\"col-sm-2 align-items-center my-auto \">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark\">\n                      {trad_answer(currentQuestion.pre_check.then)}\n                    </div>\n                  </div>\n                </div>\n              ): null}\n\n\n              {/*Add PreCheck condition and then value section*/}\n              <div>\n                {/*Same problem than with other (multi) bootstrap select, must see if another solution. If we switch between checklist 0 question 1 and checklist 1 question 1, problem stay*/}\n                <div>\n                  <div className=\"row justify-content-md-center py-2\">\n                    <div className=\"col-sm-3 align-items-center my-auto\">\n                      <BootstrapSelect key={pairIndicator} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle variable ?\" options={possible_vars} onChange={addtempprecheckvar}/>\n                    </div>\n                    <div className=\"col-sm-3 align-items-center my-auto \">\n                      {[\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempPreCheck.var) ?\n                        <div>est</div>\n                        :\n                        <BootstrapSelect key={pairIndicator} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quel opérateur ?\" options={possible_op} onChange={addtempprecheckop}/>\n                      }\n                    </div>\n                    <div className=\"col-sm-3 align-items-center my-auto\">\n                      {[\"diabetic\",\"difficult_intubation\"].includes(tempPreCheck.var) ?\n                        <BootstrapSelect key={tempPreCheck.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle valeur ?\"\n                                       options={[{\"labelKey\": \"vrai\", \"value\": \"Vrai\"},{\"labelKey\": \"faux\", \"value\": \"Faux\"}]  } onChange={addtempprecheckval}/>\n                        :\n                        <div> {tempPreCheck.var === \"gender\" ?\n                          <BootstrapSelect key={tempPreCheck.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle valeur ?\"\n                                       options={[{\"labelKey\": \"F\", \"value\": \"F\"},{\"labelKey\": \"M\", \"value\": \"M\"}] } onChange={addtempprecheckval}/>\n                          :\n                          <input type=\"number\" className=\"form-control \" placeholder=\"Quelle valeur ?\" onChange={addtempprecheckval}/>\n                        } </div>\n                      }\n                    </div>\n                    <div className=\"col-sm-3 align-items-center text-center my-auto\">\n                      <button className=\"btn btn-warning w-100  \" onClick={() => addprecheck()} >\n                        Valider\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"row justify-content-md-center py-2\">\n                    <div className=\"col-sm-3 align-items-center my-auto \">\n                      <BootstrapSelect key={tempPreCheck.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quel pre-check ?\" options={possible_pre_check} onChange={addtempprecheckthen}/>\n                    </div>\n                    <div className=\"col-sm-3 align-items-center \">\n                      <button className=\"btn btn-warning w-100  \" onClick={() => updateprecheckthen()} >\n                        Modifier le precheck\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> ) : null}\n\n\n      {/*End section of the create box, with remove and import button*/}\n      <div className=\"row align-items-center p-2 m-0\">\n        {/*Button to remove the current checklist*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-danger  \" onClick={removechecklist} >\n            Supprimer la checklist\n          </button>\n        </div>\n        {/*Button to import in .json the list of checklist*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-warning  \" onClick={() =>  utils.checklist_tree_to_flat(checklist)}>\n            Sauvegarder la checklist\n          </button>\n        </div>\n        {/*Button to remove the current question*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-danger \" onClick={removequestion}>\n            Supprimer la question\n          </button>\n        </div>\n      </div>\n    </div>\n    )\n}\n\nexport {CreateBox}","import React from \"react\";\n\n/*Component to show the credits of the web app*/\nfunction Credits ({props}) {\n  return (\n    <div className=\"\">\n      <div className=\"card-inv text-center\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title m-0 text-custom\">SLS Checklist App</h5>\n          <p className=\"card-text text-custom m-0\">v0.7</p>\n          <p className=\"card-text text-custom m-0\">Développé par Théo Stassen</p>\n          <p className=\"card-text text-custom\">theo.stassen@protonmail.com</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Credits}","import React from \"react\";\nimport * as utils from \"./utils\";\n\n/*Component for the selection of the current patient\n* -patientList : list of all patients\n* -currentPatient : current patient state variable\n* -setCurrentPatient: current patient set function\n* */\nfunction PatientBox ({props}) {\n\n  let {patientList, currentPatient, setCurrentPatient, setIsDict, setResult, setIsPreCheckDone, forceUpdate} = props\n\n  /*Function to change the current patient to the one with patient_id*/\n  const changecurrentpatient = (patient_id) => {\n    const currentPatient = patientList.filter(elm => elm.id === patient_id)[0]\n    setCurrentPatient(currentPatient)\n    setResult({})\n    let init_dict = {}\n    utils.list_possible_answer.forEach(function (answer){init_dict[answer]={0:true}})\n    setIsDict(init_dict)\n    setIsPreCheckDone([])\n    forceUpdate()\n  }\n\n  /*Return the patient box elements*/\n  return (\n    <div className=\"container iq-card p-2 py-3 \">\n      <div className=\"row align-items-center m-0\">\n        {/*Indication text*/}\n        <div className=\"col-sm-4 align-items-center text-dark\">\n          Patient Actuel :\n        </div>\n        {/*Current patient name*/}\n        <div className=\"col-sm-4 align-items-center \">\n          <div className=\"iq-card bg-primary text-center  m-0\">\n            {currentPatient.firstname}&nbsp;{currentPatient.lastname}\n          </div>\n        </div>\n        {/*Current patient selection dropdown*/}\n        <div className=\"col-sm-4 align-items-center \">\n          <div className=\"dropdown text-center\">\n            <button className=\"btn btn-secondary btn-round dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-toggle=\"dropdown\" aria-expanded=\"false\">\n              Sélectionnez le patient\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {patientList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item \" onClick={() => changecurrentpatient(i.id)}>\n                  {i.firstname}&nbsp;{i.lastname}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {PatientBox}","import * as utils from \"./utils\";\nimport React from \"react\";\n\n/* Component representing a checklist item (a question).\n- init_items : the parent node of the checklist, used when we need to clean the questions after a answer modification\n- item : the current item\n- dicts : the different state dicts\n- forceUpdate : function that force the reload of component if necessary\n- values_filter_cond : function that filter the values by keeping only the values that validates all conditions\n* */\nfunction ChecklistItem({init_items, item, dicts, forceUpdate, values_filter_cond , creationMode, currentId}) {\n\n\n\n  let [isDict, setIsDict, numDict, result, setResult, isPreCheckDone, setIsPreCheckDone, visibleList, setVisibleList] = dicts\n\n  // console.log(item)\n  // console.log(\"isDict\", isDict)\n  // console.log(\"result\", result)\n  // console.log(\"isprecheck\", isPreCheckDone)\n  // console.log(\"numdict\", numDict)\n\n  /* Function triggered when the user click on one answer, we update the isDict and results and clean (remove from isDict and results) questions\n  * that must not be visible anymore, because of there cond's */\n  const handleOnChangeIs = (answer) => {\n    const is_check = !isDict[answer][item.id]\n    const list_other_answer = utils.list_possible_answer.filter(elm => elm !== answer)\n\n    // If is_check = true, it means that the state of the answer uncheck -> check,\n    // so we add in result and clean questions that depends of this item being with another answer (as it is not the case anymore)\n    if (is_check){\n      result[item.id]={name:item.name,answer:answer}\n\n      clean_children_rec(init_items, init_items, item.id,isDict, setIsDict, result, list_other_answer)\n    }\n    // If is_check = false, it means that the state of the answer check -> uncheck,\n    // so we remove in result and clean questions that depends of this item being with this answer (as it is not the case anymore)\n    else{\n      delete result[item.id]\n      clean_children_rec(init_items, init_items, item.id, isDict, setIsDict, result, [answer])\n    }\n    setResult(result)\n    isDict[answer][item.id] = is_check\n    list_other_answer.forEach(function(elm){isDict[elm][item.id]= false})\n    setIsDict(isDict)\n  }\n\n  /*Function triggered where the user enter a text in a text question. We update the result*/\n  const handleOnChangeText = (event) => {\n    const input_text = event.target.value;\n    result[item.id]={name:item.name,answer:input_text}\n    setResult(result)\n  };\n\n  /* If the item as pre check conditions and his precheck as not already been made,\n  * we check the condition in 'pre_check.if' and if it passes, we do as if the 'pre_check.then' answer was clicked\n  */\n\n  if(item.pre_check && !isPreCheckDone.includes(item.id)){\n\n    if (item.pre_check.if.every(function (elm){ return utils.simple_operation(numDict[elm.var],elm.op, elm.val);})){\n\n      handleOnChangeIs(item.pre_check.then); isPreCheckDone.push(item.id); setIsPreCheckDone(isPreCheckDone);\n    }\n  }\n\n  /* Filter (check of the cond's) of the item values (children) */\n  let children = null;\n  let values = null;\n  if (item.values) {\n    values = values_filter_cond(item.values, isDict, numDict, creationMode)\n    values.forEach(value => !visibleList.includes(value.id) && value.check.length ? visibleList.push(value.id) : null)\n  }\n\n  /*We create the children components of the current item*/\n  if (values && values.length) {\n    children = (\n      <ul className=\"mb-0\">\n        {values.map((i, index) => (\n          <ChecklistItem  key={index} init_items={init_items} item={i} dicts={dicts} forceUpdate = {forceUpdate} values_filter_cond={values_filter_cond} creationMode={creationMode} currentId={currentId} />\n        ))}\n      </ul>\n    );\n  }\n\n\n  // console.log(\"Item return\", item)\n  // console.log(\"isDict\", isDict[\"yes\"][10])\n  // console.log(\"result\", result)\n  console.log(result)\n  console.log(visibleList)\n\n  /*We return the different elements of the current item, and also his children*/\n  return (\n    <div className={\"container p-0 mt-3 mx-auto \"}>\n      {/*Current Item*/}\n      <div id={\"question\"+item.id} className={\"row align-items-center m-0 p-0\" + (creationMode && currentId === item.id ? \" border border-danger \" : \" \" )}>\n\n        {/*Item Id*/}\n        <div className=\"col list-group list-group-horizontal m-0 p-0 w-auto\">\n          <div className=\"list-group-item m-0 p-0  bg-info text-center shadow-sm my-auto\" >\n            <h5 className=\"card-body p-auto \">\n              {item.id}\n            </h5>\n          </div>\n\n          {/*Item name*/}\n          <div className=\"list-group-item m-0 p-0 w-100 shadow-sm h-auto text-dark\"  >\n              {item.comment ? (\n                <div className=\"alert alert-light m-0 mt-0 border-0 text-primary my-auto\" role=\"alert\">\n                  {item.comment}\n                </div>\n              ) : null}\n            <div className=\"card-body my-auto\">\n              {item.name}\n            </div>\n            {/*Item comment (above the item name)*/}\n          </div>\n\n        </div>\n\n        {/*Item answers (if any, if not empty col)*/}\n        {item.check.length ? (\n        <div className=\"col-md-auto p-0 pl-3\">\n          <div className=\"list-group list-group-horizontal \">\n            {/*For each possible answer, if in item.check, we put a checkbox*/}\n            {item.check.map((answer, index) => (\n              <label key={index} className={\"list-group-item list-group-item-custom btn m-0\" + (item.color && item.color[index] === 0 ? \" btn-outline-success\" : (item.color && item.color[index] === 1 ? \" btn-outline-danger\" : \" btn-outline-secondary\"))} >\n                <input  type=\"checkbox\"\n                       aria-label=\"Checkbox\"\n                       checked={isDict[answer] && isDict[answer][item.id] ? 1:0}\n                       onChange={function(event) {handleOnChangeIs(answer);forceUpdate()}}\n                />\n                &nbsp;{utils.trad_answer(answer)}\n              </label>\n            ))}\n            {/*If item answers must contain text, put a text input*/}\n            {item.check.includes(\"text\") ? (\n            <div className=\"input-group-prepend\">\n              <div className=\"input-group-text\">\n                  <input\n                    className=\"card w-100 text-custom\"\n                    type = \"text\"\n                    aria-label=\"text input\"\n                    onChange={handleOnChangeText}\n                  />\n              </div>\n            </div>\n            ) : null }\n          </div>\n        </div>\n        ) : <div className=\"col-sm-6\"> {null} </div>}\n      </div>\n      {/*Children of the current item*/}\n      {children}\n    </div>\n  );\n}\n\n/*Function that clean (remove from isDict and results) questions\n  * that must not be visible anymore, because of there cond's.\n  * -We check the current item, remove if necessary from result and isDict\n  * (id indicating what question has been removed, and answers indicating all the answers possibly removed,\n  * so we need to check if the current item was dependent of one of these answers,\n  * -We call the function recursively on each child of the current item\n  * - If the current item as been removed, we call recursively, s\n  * */\nfunction clean_children_rec(init_item, item, id, isDict, setIsDict, result, answers) {\n  let is_remove = false\n  if(item.cond){\n    answers.forEach(function(answer){\n      if(item.cond[answer] && item.cond[answer].includes(id)){\n        utils.list_possible_answer.forEach(function(elm){isDict[elm][item.id]= false})\n        delete result[item.id]\n        is_remove = true\n      }\n    })\n  }\n\n  if (item.values && item.values.length){\n    item.values.forEach( function (value) {\n      clean_children_rec(init_item, value, id, isDict, setIsDict, result, answers)\n    })\n  }\n  if (id !== item.id && is_remove) {\n        clean_children_rec(init_item, init_item, item.id, isDict, setIsDict, result, answers)\n  }\n}\n\nexport {ChecklistItem}","import React from \"react\";\nimport * as utils from \"./utils\";\n\nfunction SectionTitle ({section_title}) {\n\n\n  console.log(section_title)\n  return (\n    <div className=\"card p-2 px-4 mb-2 text-primary shadow-sm border-bottom border-top border-dark\">\n      {section_title}\n    </div>\n  )\n\n}\n\nexport {SectionTitle}","import React from \"react\";\nimport * as utils from \"./utils\";\nimport {bindReporter} from \"web-vitals/dist/modules/lib/bindReporter\";\n\nfunction check_all_question_answered (visibleList, result){\n  return visibleList.every(\n    function (elm){ return result[elm]}\n  )\n}\n\nfunction search_question_not_answered (visibleList, result){\n  for (let i=0; i<visibleList.length;i=i+1){\n    if(!result[visibleList[i]]){\n      return \"question\" + (visibleList[i-1])\n    }\n  }\n  return \"\"\n}\n\nfunction ValidationButton ({visibleList, result, import_csv_result, checklist}) {\n\n\n  console.log(visibleList, result)\n  console.log(check_all_question_answered(visibleList, result))\n  console.log(search_question_not_answered(visibleList,result))\n  return (\n    <div className=\"container  mt-5 text-center\">\n      <a onClick={() => check_all_question_answered(visibleList,result) ? import_csv_result() : null }\n         href={\"#\"+search_question_not_answered(visibleList, result)}\n         className=\"\"\n      >\n        <button className=\"btn btn-warning text-center w-100 shadow\">\n          Valider la checklist\n        </button>\n      </a>\n    </div>\n  )\n\n  // href={\"#\" + !check_all_question_answered(visibleList, result) ? search_question_not_answered(visibleList, result) : \"\"}\n\n}\n\nexport {ValidationButton}","import React, {useState, useReducer} from \"react\";\nimport \"./App.css\";\nimport  * as temp_data from \"./temporary_data.js\";\nimport * as utils from \"./utils.js\";\nimport {AppNavbar} from \"./navbar.js\";\nimport {AppSignature} from \"./signature.js\"\nimport {CreateBox} from \"./creation_box.js\"\nimport {Credits} from \"./credits.js\"\nimport {PatientBox} from \"./patient_box.js\"\nimport {ChecklistItem} from \"./item.js\"\nimport {SectionTitle} from \"./section_title.js\";\nimport {ValidationButton} from \"./validation_button\";\n\n/*Main Function\n* -Declare all the variables needed in different component\n* -Return a combination of different components (Navbar, CreateBox, Credits, PatientBox, ChecklistItem(s), Signature)\n* */\n\nfunction date_to_age (date){\n  let result = date.split(\"/\")\n  let current_year = new Date()\n  return current_year.getFullYear() - result[2]\n}\n\nexport default function App() {\n\n  /*Function needed (for the moment), to force the components to update because they don't*/\n  const [, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  let checklist_list = []\n  for (let i=0;i<temp_data.checklist_list_array.length;i++){\n    checklist_list.push(utils.checklist_flat_to_tree(temp_data.checklist_list_array[i],i))\n  }\n  console.log(checklist_list)\n\n  /*Main state variables :\n  * -checklistId : Id of the current checklist\n  * -checklistList : List containing the different checklists (from backend, will be a database call)\n  * -patientList : List of all the patient (from hospital data, will be a database call)\n  * -checklist : current checklist (the one that is shown) (the structure can be seen in temporary_data.js\n  * -result : dict containing the results of the current checklist check-in\n  * -isPreCheckDone : array containing the id's of the questions for which the precheck as been made\n  * */\n  let [checklistId, setChecklistId] = useState(0)\n  let [checklistList, setChecklistList] = useState(checklist_list)\n  let [patientList, ] = useState(temp_data.patients)\n  let [currentPatient, setCurrentPatient] = useState(patientList[0])\n  let [checklist, setChecklist] = useState(checklistList.filter(e => e.checklist_id === checklistId)[0])\n  let [result, setResult] = useState({})\n  let [visibleList, setVisibleList] = useState([])\n  let [isPreCheckDone, setIsPreCheckDone] = useState([])\n\n  let [currentQuestion, setCurrentQuestion] = useState(checklist && checklist.values.length ? checklist.values[0] : null)\n\n\n  /* Other state variables\n  * -creationMode : bool indicates if we are in creation mode\n  * -creditMode : bool indicates if we are in credit mode\n  * -trimmedCanvasUrl : variable containing the canvas url data of the signature\n  * -sigpad : variable containing the signature pad information*/\n  let [creationMode, setCreationMode] = useState(0)\n  let [creditMode, setCreditMode] = useState(0)\n  let [trimmedCanvasUrl, setTrimmedCanvasUrl] = useState(null)\n  let sigpad = {}\n\n  /* Initial set of isDict state variable\n  * -init_dict : dict containing {0:true} for each possible answer (yes, no, etc), defined in utils.js\n  * -isDict : dict containing a dict for each possible response,\n  * containing the questions id's that have this response checked at this moment*/\n  let init_dict = {}\n  utils.list_possible_answer.forEach(function (answer){init_dict[answer]={0:true}})\n  const [isDict, setIsDict] = useState(init_dict)\n\n  // console.log(\"init_dict\", init_dict)\n\n\n  /* Fill in of numDict, containing all the numerical data (the way current patient info is extracted will be improved)*/\n  let num_values = checklist ? checklist.num_values : []\n  let numDict = {}\n  num_values.forEach(function(elm) {numDict[elm.var] = elm.val})\n\n  for (const [key, value] of Object.entries(currentPatient)) {\n    numDict[key] = value\n  }\n  numDict[\"age\"] = date_to_age(numDict[\"dateofbirth\"])\n\n\n\n  /* Filter (check of the cond's) of the checklist  initial values (i.e. the questions at the first level of the tree)*/\n  let values = null\n  visibleList = []\n  if (checklist && checklist.values) {\n    values = values_filter_cond(checklist.values, isDict, numDict, creationMode)\n    values.forEach(value => visibleList.push(value.id))\n  }\n\n   let dicts = [isDict, setIsDict, numDict, result, setResult,isPreCheckDone, setIsPreCheckDone, visibleList, setVisibleList ]\n\n  /* Function that changes the current checklist to the checklist with checklist_id and resets dicts*/\n  const swapchecklist = (checklist_id) => {\n    setChecklistId(checklist_id);\n    checklist = checklistList.filter(e => e.checklist_id === checklist_id)[0]\n    setChecklist(checklist)\n    setResult({})\n    let init_dict = {}\n    utils.list_possible_answer.forEach(function (answer){init_dict[answer]={0:true}})\n    setIsDict(init_dict)\n    setIsPreCheckDone([])\n    console.log(\"isdict after swapchecklist\", isDict)\n    return checklist\n  }\n\n    /*Create a table containing results and export it as .csv file*/\n  function import_csv_result () {\n    let result_table = [[\"id\", \"name\", \"answer\"]]\n    for (const [key, value] of Object.entries(result)){\n      result_table.push([key, value.name, value.answer])\n    }\n    let csvGenerator = new utils.CsvGenerator(result_table, 'my_csv.csv');\n    csvGenerator.download(true);\n  }\n\n\n  // console.log(\"app\")\n  // console.log(\"isPreCheckDone\", isPreCheckDone)\n  // console.log(\"isDict\", isDict)\n  // console.log(\"result\", result)\n  console.log(result)\n  console.log(visibleList)\n\n  /* Return the different components, depending of the mode.\n  * We define also the background and a hidden bottom navbar to avoid problems with the background limits\n  */\n  return (\n    <div className=\"min-vh-100 content-page iq-bg-info\">\n      <div>\n        {<AppNavbar props = {{setCreationMode, setCreditMode, trimmedCanvasUrl, checklistList, swapchecklist, import_csv_result, result}}/>}\n        {!creditMode ? (\n          <div>\n            {creationMode ?\n              <CreateBox props={{checklist, setChecklist, checklistList, setChecklistList, checklistId, setChecklistId, forceUpdate, setResult, setIsDict, init_dict, setIsPreCheckDone, currentQuestion, setCurrentQuestion}} />\n              :\n              <PatientBox props={{patientList, currentPatient, setCurrentPatient, setIsDict, setResult, setIsPreCheckDone, init_dict, forceUpdate}} />\n            }\n            <div className=\"container p-0 border-bottom border-right border-left border-dark\">\n              {values ? values.map((i, index) => (\n                <div>\n                  {i.section_title ? <SectionTitle section_title={i.section_title} /> : <div className=\"border-top border-dark\"/>}\n                  <div className=\"mb-3 px-3\">\n                    <ChecklistItem key={index} init_items={checklist} item={i} dicts={dicts}\n                                   forceUpdate = {forceUpdate} values_filter_cond={values_filter_cond}\n                                   creationMode={creationMode} currentId = {currentQuestion.id} />\n                  </div>\n                </div>))\n                :\n                null\n              }\n            </div>\n            <ValidationButton visibleList={visibleList} result={result} import_csv_result = {import_csv_result} checklist={checklist}/>\n            {!creationMode ? <AppSignature props = {{sigpad, setTrimmedCanvasUrl}}/> : null}\n\n          </div>\n          )\n          :\n          <Credits props={null}/>\n        }\n      </div>\n      <div>\n        <nav className=\"navbar\">\n          <label className=\"navbar-brand\">{null}</label>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\n/* Filter the values by keeping only the values that validates all conditions\n* We check all the response condition of the item\n* (for ex, if item.cond contains {\"yes\": [1,4]}, we check if isDict[\"yes\"] contains 1 and 4 )\n* + all num conditions\n*/\nfunction values_filter_cond(values, isDict, numDict, creationMode) {\n  console.log(values)\n  // console.log(isDict)\n  return values.filter( item=>\n      Object.keys(item.cond).every(\n        function(answer){\n          return (answer === \"num\" || !item.cond[answer] || item.cond[answer].every(\n            function(elm) {return isDict[answer][elm];}\n          ))\n        }\n      )\n      && (creationMode || item.cond.num.every(\n        function(elm) {\n          return !numDict[elm.var] || utils.simple_operation(numDict[elm.var],elm.op, elm.val) }\n      ))\n    )\n}\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}