{"version":3,"sources":["temporary_data.js","utils.js","navbar.js","signature.js","creation_box.js","credits.js","patient_box.js","item.js","section_title.js","App.js","reportWebVitals.js","index.js"],"names":["checklist_list","checklist_id","id","num_values","values","name","section_title","cond","num","check","pre_check","if","var","op","val","then","comment","patients","list_possible_answer","list_possible_answer_trad","list_possible_num_var","list_possible_num_var_trad","list_possible_op","trad_answer","answer","trad_num_var","num_var","simple_operation","val1","string_op","val2","CsvGenerator","dataArray","fileName","separator","addQuotes","this","getDownloadLink","type","data","map","row","rowData","join","length","btoa","encodeURIComponent","downloadLink","getLinkElement","linkText","linkElement","a","document","createElement","innerHTML","href","download","removeAfterDownload","style","display","body","appendChild","click","removeChild","AppNavbar","props","setCreationMode","setCreditMode","trimmedCanvasUrl","result","checklistList","swapchecklist","deactivatecreditmode","className","onClick","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-current","result_table","Object","entries","key","value","push","utils","downloadImage","role","aria-labelledby","i","index","filename","AppSignature","sigpad","setTrimmedCanvasUrl","canvasProps","ref","dataUrl","getTrimmedCanvas","toDataURL","clear","CreateBox","checklist","setChecklist","setChecklistList","checklistId","setChecklistId","forceUpdate","setResult","setIsDict","init_dict","setIsPreCheckDone","currentQuestion","setCurrentQuestion","useState","currentParentQuestion","setCurrentParentQuestion","currentName","setCurrentName","currentComment","setCurrentComment","tempNums","setTempNums","tempPreCheck","setTempPreCheck","pairIndicator","setPairIndicator","questionList","enumquestions","item","possible_answers","forEach","includes","possible_vars","possible_op","possible_pre_check","reinit_current_question","searchquestion","parent_item","console","log","current_question","removequestion","filter","e","check_id","every","movecurrentquestion_child","currentQuestionCopy","splice","swapchecklist_creation_mode","addtempnumval","event","selectedKey","target","addtempprecheckval","switchpairindicator","n_checklist","new_empty_checklist","addchecklist","last_id","new_empty_question","addnewquestion","onChange","rows","chosen_question_position","findIndex","elm","movecurrentquestion_sibling","selectStyle","options","isMultiSelect","placeholder","selectedOptions","deletecond","addcond","removenum","data-icon","removeprecheck","dataStr","JSON","stringify","b","remove","checklist_to_json","Credits","PatientBox","patientList","currentPatient","setCurrentPatient","firstname","lastname","patient_id","0","changecurrentpatient","ChecklistItem","init_items","dicts","values_filter_cond","creationMode","currentId","isDict","numDict","isPreCheckDone","handleOnChangeIs","is_check","list_other_answer","clean_children_rec","children","checked","input_text","init_item","answers","is_remove","SectionTitle","App","useReducer","x","temp_data","creditMode","date","split","Date","getFullYear","date_to_age","keys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.37d7f12a.chunk.js","sourcesContent":["/* Data that will be obtain by call to backend\n* */\n\n/*Initial checklist list*/\nconst checklist_list = [\n  {\n    checklist_id: 0,\n    id: -1,\n    num_values:[\n    ],\n    values:[\n      {\n        id: 1,\n        name: \"Intubation Difficile ? \",\n        section_title : \"Vérifications concernant l'intubation difficile\",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\",\"no\",\"idk\"],\n        pre_check : {if:[{var:\"difficult_intubation\",op:\"est\",val:\"vrai\"}],then:\"yes\"},\n        values: [\n          {\n            id: 2,\n            name: \"A confirmer l'incubation difficile\",\n            cond: {\"yes\":[], \"no\": [], \"idk\" : [1], num:[]},\n            check : [\"yes\",\"no\"],\n            values: []\n          },\n          {\n            id: 3,\n            name: \"2ème Anesthésiste\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            values: []\n          },\n          {\n            id: 4,\n            name: \"2ème Infirmière\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            values: []\n          },\n          {\n            id: 5,\n            name: \"Matériel\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [],\n            values: [\n              {\n                id: 6,\n                name: \"Glidescope\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                values: []\n              },\n              {\n                id: 7,\n                name: \"Laryngoscope\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                values: []\n              },\n              {\n                id: 8,\n                name: \"Set Trachéo\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                values: []\n              },\n            ]\n          },\n          {\n            id: 9,\n            name: \"Protocole\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            values: []\n          },\n        ]\n      },\n      {\n        id: 10,\n        name: \"Est-elle susceptible d'être enceinte ?\",\n        section_title : \"Vérifications concernant une possible grossesse\",\n        comment: \"(Les données patient nous indiquent que la patiente est âgée entre 15 et 60 ans)\",\n        cond: {\"yes\":[], \"no\":[], num:[{var:\"age\",op:\">\",val:15},{var:\"age\",op:\"<\",val:60}, {var:\"gender\",op:\"=\",val:\"F\"}]},\n        check : [\"yes\",\"no\"],\n        values: [\n          {\n            id: 11,\n            name: \"Arrêt des rêgles depuis ?\",\n            cond: {\"yes\":[10], \"no\":[], num:[]},\n            check : [\"text\"],\n            values: []\n          },\n          {\n            id: 12,\n            name: \"Test disponible ?\",\n            cond: {\"yes\":[10], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            values: [\n              {\n                id: 13,\n                name: \"Négatif ?\",\n                cond: {\"yes\":[12], \"no\":[], num:[]},\n                check : [\"yes\", \"no\"],\n                values: []\n              },\n              {\n                id: 14,\n                name: \"Faire test maintenant ?\",\n                cond: {\"yes\":[], \"no\":[12], num:[]},\n                check : [\"yes\", \"no\"],\n                values: []\n              },\n              {\n                id: 15,\n                name: \"Postposer l'intervention ?\",\n                cond: {\"yes\":[], \"no\":[12], num:[]},\n                check : [\"yes\", \"no\"],\n                values: []\n              },\n            ]\n          },\n        ]\n      },\n      {\n        id: 16,\n        name: \"Le patient est-il diabétique ?\",\n        section_title : \"Vérification concernant le diabète\",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\",\"no\"],\n        pre_check : {if:[{var:\"diabetic\",op:\"est\",val:\"vrai\"}],then:\"yes\"},\n        values: [\n          {\n            id: 17,\n            name: \"Traitement Oral ?\",\n            cond: {\"yes\":[16], \"no\":[], num:[]},\n            check : [\"yes\", \"no\"],\n            values: [\n              {\n                id: 18,\n                name: \"Arrêt des médicaments ?\",\n                cond: {\"yes\":[17], \"no\":[], num:[]},\n                check : [\"yes\", \"no\"],\n                values: []\n              },\n            ]\n          },\n          {\n            id: 19,\n            name: \"Traitement par piqure à insuline ?\",\n            cond: {\"yes\":[16], \"no\":[17], num:[]},\n            check : [\"yes\", \"no\"],\n            values: [\n              {\n                id: 20,\n                name: \"Dernière piqure le ? \",\n                cond : {\"yes\":[19], \"no\":[], num:[]},\n                check: [\"text\"],\n                values: []\n              }\n            ]\n          },\n          {\n            id: 21,\n            name: \"Glycémie à l'arrivée HJ ?\",\n            cond: {\"yes\":[16], \"no\":[], num:[]},\n            check : [\"normal\", \"anormal\"],\n            values: []\n          },\n        ]\n      },\n      {\n        id: 22,\n        name: \"Consentement chirugicaux et anéstésiques de père/mère\",\n        section_title : \"Concernant les consentements parentaux\",\n        comment: \"Enfant de <15 ans, nécessite les consentement des parents\",\n        cond: {\"yes\":[],\"no\":[],num:[{var:\"age\",op:\"<\",val:15}]},\n        check: [],\n        values: [\n          {\n            id: 23,\n            name: \"Consentement chirugical du père\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\"<\",val:15}]},\n            check: [\"yes\", \"no\"],\n            values: []\n          },\n          {\n            id: 24,\n            name: \"Consentement chirurgical de la mère\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\"<\",val:15}]},\n            check: [\"yes\", \"no\"],\n            values: []\n          },\n          {\n            id: 25,\n            name: \"Consentement anestésique du père\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\"<\",val:15}]},\n            check: [\"yes\", \"no\"],\n            values: []\n          },\n          {\n            id: 26,\n            name: \"Consentement anestésique de la mère\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\"<\",val:15}]},\n            check: [\"yes\", \"no\"],\n            values: []\n          },\n        ]\n      },\n      {\n        id: 27,\n        name: \"Check Vernis à ongle\",\n        section_title : \"Checks globaux pour anestésie\",\n        comment: \"Ado/Adulte, nécessite vérification du vernis à ongle\",\n        cond: {\"yes\":[], num:[{var:\"age\",op:\">\",val:10}]},\n        check: [\"ok\", \"not_ok\"],\n        values: []\n      }\n    ]\n  },\n  {\n    checklist_id: 1,\n    id: -1,\n    num_values:[],\n    values:[\n      {\n        id: 1,\n        name: \"Intubation ? \",\n        cond: {\"yes\": [], \"no\": [], num: []},\n        check: [\"yes\", \"no\", \"?\"],\n        pre_check: {if: [{var: \"difficult_intubation\", op: \"est\", val: \"vrai\"}], then: \"yes\"},\n        values: []\n      },\n      {\n        id: 2,\n        name: \"Test ? \",\n        cond: {\"yes\": [], \"no\": [], num: []},\n        check: [\"yes\", \"no\", \"?\"],\n        values: []\n      }\n    ]\n  }\n];\n\n/*List of all patients*/\nconst patients = [\n  {\"id\": 0, \"lastname\": \"Dubois\", \"firstname\": \"Germaine\", \"gender\": \"F\", \"dateofbirth\": \"02/11/1940\", \"diabetic\":\"faux\", \"difficult_intubation\":\"vrai\"  },\n  {\"id\": 1, \"lastname\": \"Vandamme\", \"firstname\": \"Gilbert\", \"gender\": \"M\", \"dateofbirth\": \"08/25/1960\", \"diabetic\":\"vrai\", \"difficult_intubation\":\"vrai\" },\n  {\"id\": 2, \"lastname\": \"Perlot\", \"firstname\": \"Claude\", \"gender\": \"M\", \"dateofbirth\": \"12/16/1975\", \"diabetic\":\"faux\", \"difficult_intubation\":\"faux\" },\n  {\"id\": 3, \"lastname\": \"Boulet\", \"firstname\": \"Arnaud\", \"gender\": \"M\", \"dateofbirth\": \"03/17/1981\", \"diabetic\":\"faux\", \"difficult_intubation\":\"faux\" },\n  {\"id\": 4, \"lastname\": \"Charlier\", \"firstname\": \"Emile\", \"gender\": \"M\", \"dateofbirth\": \"09/19/1953\", \"diabetic\":\"faux\", \"difficult_intubation\":\"vrai\" },\n  {\"id\": 5, \"lastname\": \"Nash\", \"firstname\": \"Emilie\", \"gender\": \"F\", \"dateofbirth\": \"03/30/2015\", \"diabetic\":\"vrai\", \"difficult_intubation\":\"vrai\" },\n  {\"id\": 6, \"lastname\": \"Materne\", \"firstname\": \"Marie\", \"gender\": \"F\", \"dateofbirth\": \"08/23/1982\", \"diabetic\":\"faux\", \"difficult_intubation\":\"faux\" },\n  {\"id\": 7, \"lastname\": \"Bernard\", \"firstname\": \"Virginie\", \"gender\": \"F\", \"dateofbirth\": \"06/03/1986\", \"diabetic\":\"faux\", \"difficult_intubation\":\"faux\" },\n  {\"id\": 8, \"lastname\": \"Lemoine\", \"firstname\": \"Karine\", \"gender\": \"F\", \"dateofbirth\": \"01/25/1977\", \"diabetic\":\"vrai\", \"difficult_intubation\":\"vrai\" },\n]\n\n\nexport {checklist_list, patients}","/*Diverse utility elements*/\n\n\n/*We consider a constant list of all possible answers to a question*/\nconst list_possible_answer = [\"yes\",\"no\",\"idk\",\"ok\",\"not_ok\", \"normal\", \"anormal\"]\nconst list_possible_answer_trad = {\"yes\":\"Oui\",\"no\":\"Non\",\"idk\":\"?\",\"ok\":\"OK\",\"not_ok\":\"Non OK\", \"normal\":\"Normal\", \"anormal\":\"Anormal\",}\n\nconst list_possible_num_var = [\"diabetic\",\"age\",\"yearofbirth\",\"difficult_intubation\", \"gender\"]\nconst list_possible_num_var_trad = {\"diabetic\":\"Diabétique\",\"age\":\"Âge\",\"yearofbirth\":\"Année de naissance\",\"difficult_intubation\":\"Intubation Difficile\", \"gender\":\"Genre\"}\n\nconst list_possible_op = [\"<\",\">\",\"=\"]\n\n\n/*Function to translate an answer into mountable french version*/\nconst trad_answer = (answer) => {\n  return list_possible_answer_trad[answer]\n}\n\nconst trad_num_var = (num_var) => {\n    return list_possible_num_var_trad[num_var]\n}\n\n/*List of possible options (answers), used in the multiselect component to choose the question answers*/\n\n\n/*Function that make the operation of type \"is val1 op val2 ?' with op the operator in string input*/\nconst simple_operation = (val1, string_op, val2) => {\n  switch (string_op) {\n    case \">\" : return val1 > val2;\n    case \"<\" : return val1 < val2;\n    case \"=\" : return val1 === val2 ;\n    case \"est\" : return val1 === val2;\n    default: return true;\n  }\n}\n\n/*Function that take the list of checklist, transform it in json format and export as .json file*/\nconst checklist_to_json = (checklistList) => {\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(checklistList));\n    console.log(dataStr)\n    var b = document.createElement('a');\n    b.href = dataStr ;\n    b.download = \"checklist.json\";\n    document.body.appendChild(b);\n    b.click();\n    b.remove()\n}\n\n/*Function to take a data array and put in a .csv file, with some characteristics*/\nfunction CsvGenerator(dataArray, fileName, separator, addQuotes) {\n    this.dataArray = dataArray;\n    this.fileName = fileName;\n    this.separator = separator || ',';\n    this.addQuotes = !!addQuotes;\n\n    if (this.addQuotes) {\n        this.separator = '\"' + this.separator + '\"';\n    }\n\n    this.getDownloadLink = function () {\n        var separator = this.separator;\n        var addQuotes = this.addQuotes;\n\n        var rows = this.dataArray.map(function (row) {\n            var rowData = row.join(separator);\n\n            if (rowData.length && addQuotes) {\n                return '\"' + rowData + '\"';\n            }\n\n            return rowData;\n        });\n\n        var type = 'data:text/csv;charset=utf-8';\n        var data = rows.join('\\n');\n\n        if (typeof btoa === 'function') {\n            type += ';base64';\n            data = btoa(data);\n        } else {\n            data = encodeURIComponent(data);\n        }\n\n        return this.downloadLink = this.downloadLink || type + ',' + data;\n    };\n\n    this.getLinkElement = function (linkText) {\n        var downloadLink = this.getDownloadLink();\n        var fileName = this.fileName;\n        this.linkElement = this.linkElement || (function() {\n            var a = document.createElement('a');\n            a.innerHTML = linkText || '';\n            a.href = downloadLink;\n            a.download = fileName;\n            return a;\n        }());\n        return this.linkElement;\n    };\n\n    // call with removeAfterDownload = true if you want the link to be removed after downloading\n    this.download = function (removeAfterDownload) {\n        var linkElement = this.getLinkElement();\n        linkElement.style.display = 'none';\n        document.body.appendChild(linkElement);\n        linkElement.click();\n        if (removeAfterDownload) {\n            document.body.removeChild(linkElement);\n        }\n    };\n}\n\n\n\n\nexport {list_possible_answer_trad, list_possible_answer, list_possible_num_var_trad, list_possible_num_var, list_possible_op, trad_answer, trad_num_var, CsvGenerator, simple_operation, checklist_to_json}","import React from \"react\";\nimport * as utils from \"./utils\";\n\n/* Component of the upper navbar of the webpage\n* -setCreationMode: bool indicating if we are in creation mode set function\n* -setCreditMode: bool indicating if we are in credit mode set function\n* -trimmedCanvasUrl: the canvas url data of the signature\n* -result: dict containing the results of the current checklist check-in\n* -checklistList: List containing the different checklists\n* -swapchecklist: function that changes the current checklist\n* */\nfunction AppNavbar ({props}) {\n\n  let {setCreationMode, setCreditMode, trimmedCanvasUrl, result, checklistList, swapchecklist} = props;\n\n  /*Function triggered when we want to download the signature as .png file if there is a canvas url data*/\n  const image_download = () => {\n    if(trimmedCanvasUrl)\n      downloadImage(trimmedCanvasUrl, \"image.png\");\n  }\n\n  /*Create a table containing results and export it as .csv file*/\n  function import_csv_result () {\n    let result_table = [[\"id\", \"name\", \"answer\"]]\n    for (const [key, value] of Object.entries(result)){\n      result_table.push([key, value.name, value.answer])\n    }\n    let csvGenerator = new utils.CsvGenerator(result_table, 'my_csv.csv');\n    csvGenerator.download(true);\n  }\n\n  /*Activate the creation mode*/\n  const activatecreatemode = () => {\n    setCreationMode(1)\n  }\n\n  /*Deactivate the creation mode*/\n  const deactivatecreatemode = () => {\n    setCreationMode(0)\n  }\n\n  /*Activate the credit mode*/\n  const activatecreditmode = () => {\n    setCreditMode(1)\n  }\n\n  /*Deactivate the creation mode*/\n  const deactivatecreditmode = () => {\n    setCreditMode(0)\n  }\n\n  /*Return the different elements of the navbar*/\n  return (\n    <div className=\"iq-top-navbar h-auto \" >\n      <div className=\"iq-navbar-custom py-2\">\n        <nav className=\"navbar navbar-expand-lg navbar-light p-0\">\n          {/*Navbar Title*/}\n          <div className=\"navbar-brand pl-4\">\n            <a href=\"#\" onClick={deactivatecreditmode}>\n              <span>SLS</span>\n            </a>\n          </div>\n          {/*/!*Navbar Toggler button*!/*/}\n          <label className=\"navbar-toggler p-0 m-0\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\"\n                  aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </label>\n          {/*/!*Navbar links*!/*/}\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav  p-2 pl-4\">\n              <label className=\"nav-link active m-0\" aria-current=\"page\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={deactivatecreditmode}>Page d'accueil</label>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={import_csv_result}>Importer la checklist</label>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={image_download}>Importer la signature</label>\n              {/*Navbar checklist selection dropdown link*/}\n              <li className=\"nav-item dropdown\">\n                <label className=\"nav-link dropdown-toggle m-0\" id=\"navbarDropdown\" role=\"button\"\n                   data-toggle=\"dropdown\" aria-expanded=\"false\">\n                  Liste des checklists disponibles\n                </label>\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  {checklistList.map((i, index) => (\n                    <li key={index}><label className=\"dropdown-item m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={() => swapchecklist(i.checklist_id)}>Checklist n°{i.checklist_id}</label></li>\n                  ))}\n                </ul>\n              </li>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\"  onClick={activatecreatemode}>Activer le mode Création</label>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={deactivatecreatemode}>Désactiver le mode Création</label>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={activatecreditmode}>A propos</label>\n            </div>\n          </div>\n        </nav>\n      </div>\n    </div>\n  )\n}\n\n/*Download a data in a file with defined filename*/\nconst downloadImage = function(data, filename) {\n  let a = document.createElement('a');\n  a.href = data;\n  a.download = filename;\n  document.body.appendChild(a);\n  a.click();\n};\n\nexport {AppNavbar}","import SignaturePad from \"react-signature-canvas\";\nimport React from \"react\";\n\n/*Component for the signature pad\n* -sigpad: object representing the signature pad, fill in by the SignaturePad component\n* -setTrimmedCanvasUrl: the canvas url data of the signature set function\n* */\nfunction AppSignature ({props}) {\n\n  let {sigpad, setTrimmedCanvasUrl} = props;\n\n  /*Reinitialize the canvas and sigpad*/\n  const reinit_canvas = () => {\n    sigpad.clear()\n    setTrimmedCanvasUrl(null)\n  }\n\n  /*Import the current sigpad information into canvas url data*/\n  const trim_canvas = () => {\n    var dataUrl = sigpad.getTrimmedCanvas().toDataURL();\n    setTrimmedCanvasUrl(dataUrl);\n  }\n\n  /*Return the signature elements*/\n  return (\n    <div className=\"container iq-card mt-5\">\n      <div className=\"row align-items-center p-0 m-0 h-100\">\n        {/*Information text*/}\n        <div className=\"col-sm-3 m-0 p-0 text-center text-dark\">\n          Veuillez rentrer votre signature :\n        </div>\n        {/*Signature pad component, receiving the signature*/}\n        <div className=\"col m-0 p-0 h-100 py-2 \">\n          <div className=\"container iq-card m-0 bg-light border\">\n            <div className=\"sigContainer\">\n              <SignaturePad canvasProps={{className: \"sigPad\"}}\n                ref={(ref) => { sigpad = ref }} />\n            </div>\n          </div>\n        </div>\n        {/*Validation and Reinitialisation buttons*/}\n        <div className=\"col-sm-3 mx-2 p-0\">\n          {/*Button to validate the current signature and put info into data*/}\n          <div className=\"row align-items-center p-0 m-0 mb-2 px-4\">\n            <button type=\"button\" className=\"btn btn-primary w-100\" onClick={trim_canvas}>\n              Valider la signature\n            </button>\n          </div>\n          {/*Button to clean the current signature canvas and remove info in data*/}\n          <div className=\" row align-items-center p-0 m-0 px-4\">\n            <button type=\"button\" className=\"btn btn-warning text-dark w-100\" onClick={reinit_canvas}>\n              Réinitialiser\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport {AppSignature}","import BootstrapSelect from \"react-bootstrap-select-dropdown\";\nimport * as utils from \"./utils\";\nimport React, {useState} from \"react\";\nimport {list_possible_answer, list_possible_num_var, list_possible_op, trad_answer, trad_num_var, checklist_to_json} from \"./utils\";\n\n/* Component for the creation mode box\n* -checklist: current checklist (state variable)\n* -setChecklist: current checklist set function\n* -swapchecklist: function that changes the current checklist\n* -checklistList : list of checklists (state variable)\n* -setChecklistList : list of checklist set function\n* -checklistId : id of the current checklist (state variables)\n* -setChecklistId : id of the current checklist set function\n* -forceUpdate: function that force the reload of component if necessary\n* */\nfunction CreateBox ({props}) {\n\n  let {checklist, setChecklist, checklistList, setChecklistList, checklistId, setChecklistId, forceUpdate, setResult, setIsDict, init_dict, setIsPreCheckDone, currentQuestion, setCurrentQuestion} = props\n\n  /* State variables used only in creation mode\n  * -currentQuestion : the question currently into creation/modification\n  * -currentParentQuestion : the question that is parent of the current question\n  * -currentName : the current name\n  * -tempNums : the numerical condition values (var, op and val) of the current condition the user is going to add\n  * -tempPreChech : the precheck condition values (var, op, val) and then value of the current precheck the user is going to add\n  */\n\n  let [currentParentQuestion, setCurrentParentQuestion] = useState(checklist)\n  let [currentName, setCurrentName] = useState(checklist && checklist.values.length ? checklist.values[0].name : \" \" )\n  let [currentComment, setCurrentComment] = useState(checklist && checklist.comment ? checklist.comment : null)\n\n  let [tempNums, setTempNums] = useState({})\n  let [tempPreCheck, setTempPreCheck] = useState({})\n\n  let [pairIndicator, setPairIndicator] = useState(0)\n\n\n  // console.log(\"main\", currentQuestion)\n\n  /* Make the complete list of questions of the current checklist*/\n  let questionList = [];\n  function enumquestions (item){\n    if (item.id > 0)\n      questionList.push(item.id)\n    for (const value of item.values){\n      enumquestions(value)\n    }\n  }\n  if (checklist) enumquestions(checklist)\n\n  /*Create a list, usable by the select component, of the possible answer*/\n  let possible_answers = []\n  function construct_possible_answers (){\n    possible_answers = []\n    list_possible_answer.forEach(function(answer){\n      possible_answers.push({\n          \"labelKey\": answer,\n        \"value\": trad_answer(answer),\n        \"isSelected\":currentQuestion.check.includes(answer),\n      })\n    })\n  }\n  if (currentQuestion) construct_possible_answers()\n\n  /*Create a list, usable by the select component, of the possible variables of conditions*/\n  let possible_vars = []\n  function construct_possible_vars (){\n    possible_vars = []\n    list_possible_num_var.forEach(function(num_var){\n      possible_vars.push({\"labelKey\": num_var, \"value\": trad_num_var(num_var)})\n    })\n  }\n  if (currentQuestion) construct_possible_vars()\n\n  /*Create a list, usable by the select component, of the possible operators of conditions*/\n  let possible_op = []\n  function construct_possible_op (){\n    possible_op = []\n    list_possible_op.forEach(function(op){\n      possible_op.push({\"labelKey\": op, \"value\": op})\n    })\n  }\n  if (currentQuestion) construct_possible_op()\n\n  /*Create a list, usable by the select component, of the possible answers of this question*/\n  let possible_pre_check = []\n  function construct_possible_pre_check (){\n    possible_pre_check = []\n    currentQuestion.check.forEach(function(pre_check){\n      possible_pre_check.push({\"labelKey\": pre_check, \"value\": trad_answer(pre_check)})\n    })\n  }\n  if (currentQuestion) construct_possible_pre_check()\n\n\n  // /*Set state variables*/\n  // function set_elements () {\n  //   setCurrentQuestion(currentQuestion)\n  //   setCurrentParentQuestion(currentParentQuestion)\n  //   setChecklist(checklist)\n  //   setChecklistList(checklistList)\n  // }\n\n  /*Reinitialize the current question, which means taking the first question of the current checklist as current question*/\n  function reinit_current_question (checklist) {\n    setCurrentQuestion(checklist && checklist.values.length ? checklist.values[0] : null)\n    setCurrentParentQuestion(checklist)\n    setCurrentName(checklist && checklist.values.length ? checklist.values[0].name : \"\")\n    setCurrentComment(checklist && checklist.values.length ? checklist.values[0].comment : \"\")\n  }\n\n  /*Search for a question (with id) in item and his children, knowing that parent_item is the parent of item. When found, set\n  * the current question to this question (and so for the parent and name)*/\n  function searchquestion (item, parent_item, id) {\n    if (item.id === id){\n      console.log(\"found\", item)\n      currentQuestion = item\n      currentParentQuestion = parent_item\n      setCurrentQuestion(currentQuestion)\n      setCurrentParentQuestion(currentParentQuestion)\n      setCurrentName(currentQuestion.name)\n      setTempNums({})\n      setCurrentComment(currentQuestion.comment)\n      setPairIndicator(!pairIndicator)\n      return currentQuestion\n    }\n    let current_question = null\n    for (const value of item.values){\n      current_question = searchquestion(value,item,id) || current_question;\n    }\n    return current_question\n  }\n\n  /*Remove the current question (by removing the question from children of his parent),\n  * and reset to a new current queston\n  */\n  function removequestion (){\n    if (currentParentQuestion) {\n      currentParentQuestion.values = currentParentQuestion.values.filter(e => e.id !== currentQuestion.id)\n      reinit_current_question(checklist)\n      forceUpdate() // Dont know why the remove question need force update but not remove checklist\n    }\n  }\n\n  /*Add a new question to the checklist. For now we put it as the last children of the checklist item\n  * (the last question at first level of the tree ) and we put basic elements inside\n  */\n  function addnewquestion (){\n    let last_id = questionList.length ? questionList[questionList.length-1] : 0\n    let new_empty_question =\n      {\n        id: last_id+1,\n        name : \"\",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\", \"no\"],\n        values: [],\n      }\n    checklist.values.push(new_empty_question)\n    //set_elements()\n    searchquestion(checklist, null, last_id+1)\n  }\n\n  function check_id(item, id){\n    return item.id === id || (item.values.length && item.values.every(value => check_id(value)))\n  }\n\n  /*Move the current question to another position (the last child of the question with id), we reset the cond for now */\n  function movecurrentquestion_sibling (id){\n    if (!check_id(currentQuestion, id)) {\n      let currentQuestionCopy = {...currentQuestion}\n      removequestion()\n      searchquestion(checklist, null, id)\n      let chosen_question_position = currentParentQuestion.values.findIndex(elm => elm.id === id)\n      currentQuestionCopy.cond = {\"yes\": [], \"no\": [], num: []}\n      currentParentQuestion.values.splice(chosen_question_position + 1, 0, currentQuestionCopy)\n      //set_elements()\n      searchquestion(checklist, null, currentQuestionCopy.id)\n      forceUpdate()\n    }\n  }\n\n  function movecurrentquestion_child (id){\n    if (!check_id(currentQuestion, id)) {\n      let currentQuestionCopy = {...currentQuestion}\n      currentQuestionCopy.cond = {\"yes\":[], \"no\":[], num:[]}\n      removequestion()\n      searchquestion(checklist, null, id)\n      currentQuestion.values.splice(0,0,currentQuestionCopy)\n      //set_elements()\n      searchquestion(checklist, null, currentQuestionCopy.id)\n      forceUpdate()\n    }\n  }\n\n  /*Modify the current name*/\n  const modifyname = (event) => {\n    currentName = event.target.value\n    setCurrentName(currentName)\n  }\n\n  /*Update the current question name*/\n  const updatename = () => {\n    currentQuestion.name = currentName\n    setCurrentQuestion(currentQuestion)\n    forceUpdate()\n  }\n\n    /*Modify the current name*/\n  const modifycomment = (event) => {\n    currentComment = event.target.value\n    setCurrentComment(currentComment)\n  }\n\n  /*Update the current question name*/\n  const updatecomment = () => {\n    if (currentComment)\n      currentQuestion.comment = currentComment\n    else\n      delete currentQuestion.comment\n    forceUpdate()\n  }\n\n  /*Change the check array of the current question, containing the possible answers*/\n  const changecheck = (selectedOptions) => {\n    if (selectedOptions.selectedKey.length){\n      currentQuestion.check = selectedOptions.selectedKey\n      setCurrentQuestion(currentQuestion)\n      console.log(\"test\")\n      switchpairindicator()\n      forceUpdate()\n    }\n  }\n\n  /*Add a checklist (with basic content) to the list of checklist, and switch to this checklist*/\n  const addchecklist = () => {\n    const n_checklist = checklistList.length ? checklistList[checklistList.length-1].checklist_id+1 : 0\n    let new_empty_checklist =\n      {\n        checklist_id: n_checklist,\n        id: -1,\n        num_values: [],\n        values: [\n          {\n            id: 1,\n            name : \"\",\n            check : [\"yes\",\"no\"],\n            cond: {\"yes\":[], \"no\":[], num:[]},\n            values: []\n          }\n        ],\n      }\n    checklistList.push(new_empty_checklist)\n    setChecklistList(checklistList)\n    swapchecklist_creation_mode(n_checklist)\n  }\n\n  /*Remove the current checklist from the list of checklist and take the first checklist still available as current checklist*/\n  const removechecklist = () => {\n    console.log(checklistList, checklistId)\n    checklistList = checklistList.filter(e => e.checklist_id !== checklistId)\n    console.log(checklistList)\n    setChecklistId(checklistList.length ? checklistList[0].checklist_id : \" -\")\n    checklist = checklistList.length ? checklistList[0] : null\n    setChecklist(checklist)\n    setChecklistList(checklistList)\n    reinit_current_question(checklist)\n  }\n\n  /*Function that swap the current checklist and reinitialize the current question*/\n  const swapchecklist_creation_mode = (checklist_id) =>  {\n    setChecklistId(checklist_id);\n    checklist = checklistList.filter(e => e.checklist_id === checklist_id)[0]\n    setChecklist(checklist)\n    setResult({})\n    setIsDict(init_dict)\n    setIsPreCheckDone([]) //Do a warning when switch checklist but seems not causing problem\n    setPairIndicator(!pairIndicator)\n    reinit_current_question(checklist)\n  }\n\n  /*Function that add a  question condition (with it answer and id) to current question*/\n  const addcond = (answer, id) => {\n    if (currentQuestion.cond[answer]) currentQuestion.cond[answer].push(id)\n    else currentQuestion.cond[answer] = [id]\n\n    setCurrentQuestion(currentQuestion)\n    forceUpdate()\n  }\n\n  /*Function that delete a  question condition (with it answer and id) to current question*/\n  const deletecond = (answer, id) => {\n    currentQuestion.cond[answer] = currentQuestion.cond[answer].filter(elm => elm !== id)\n    console.log(currentQuestion)\n    setCurrentQuestion(currentQuestion)\n    //set_elements()\n    forceUpdate()\n  }\n\n  /*Function that update the tempNum.var variable with input*/\n  const addtempnumvar = (selectedOptions) => {\n    if (!tempNums){ tempNums = {}}\n    tempNums = {}\n    tempNums.var = selectedOptions.selectedKey[0]\n    setTempNums(tempNums)\n\n    console.log(\"pairindicator\", pairIndicator)\n    console.log(tempNums)\n    switchpairindicator()\n    forceUpdate()\n  }\n  /*Function that update the tempNum.op variable with input*/\n  const addtempnumop = (selectedOptions) => {\n    if (!tempNums){ tempNums = {}}\n    tempNums.op = selectedOptions.selectedKey[0]\n    setTempNums(tempNums)\n    forceUpdate()\n  }\n    /*Function that update the tempNum.val variable with input*/\n  const addtempnumval = (event) => {\n    if (!tempNums){ tempNums = {}}\n    if(tempNums.var && [\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempNums.var) )\n      tempNums.val = event.selectedKey[0]\n    else\n      tempNums.val = event.target.value\n    setTempNums(tempNums)\n    forceUpdate()\n  }\n\n  /*Function that add a numerical condition (with values contains in tempNum) to currentQuestion*/\n  const addnum = () => {\n    if(tempNums.var && tempNums.val && [\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempNums.var)){\n      currentQuestion.cond.num.push({var: tempNums.var, op: \"est\", val: tempNums.val})\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n    else if (tempNums.var && tempNums.op && tempNums.val) {\n      currentQuestion.cond.num.push({var: tempNums.var, op: tempNums.op, val: tempNums.val})\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n  }\n\n  /*Function that remove a numerical condition of the currentQuestion*/\n  const removenum = (index) => {\n    console.log(\"supprimer\", index)\n    currentQuestion.cond.num.splice(index,1)\n    console.log(currentQuestion.cond.num)\n    setCurrentQuestion(currentQuestion)\n    //set_elements()\n    forceUpdate()\n  }\n\n  /*Function that update the tempPrecheck.var variable with input*/\n  const addtempprecheckvar = (selectedOptions) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck = {}\n    tempPreCheck.var = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    switchpairindicator()\n    forceUpdate()\n  }\n  /*Function that update the tempPrecheck.op variable with input*/\n  const addtempprecheckop = (selectedOptions) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck.op = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n  /*Function that update the tempPrecheck.val variable with input*/\n  const addtempprecheckval = (event) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    if(tempPreCheck.var && [\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempPreCheck.var) )\n      tempPreCheck.val = event.selectedKey[0]\n    else\n      tempPreCheck.val = event.target.value\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n\n    /*Function that update the tempPrecheck.then variable with input*/\n  const addtempprecheckthen = (selectedOptions) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck.then = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n\n\n  /*Function that add a precheck condition (with values contains in tempPreCheck) and precheck then to currentQuestion*/\n  const addprecheck = () => {\n    if(tempPreCheck.var && tempPreCheck.val && tempPreCheck.then &&  [\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempPreCheck.var)){\n      if (!currentQuestion.pre_check)\n        currentQuestion.pre_check = {if:[],then:null}\n      currentQuestion.pre_check.then = tempPreCheck.then\n      currentQuestion.pre_check.if.push({var: tempPreCheck.var, op: \"est\", val: tempPreCheck.val})\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n    else if (tempPreCheck.var && tempPreCheck.op && tempPreCheck.val && tempPreCheck.then) {\n      if (!currentQuestion.pre_check)\n        currentQuestion.pre_check = {if:[],then:null}\n      currentQuestion.pre_check.then = tempPreCheck.then\n      currentQuestion.pre_check.if.push({var: tempPreCheck.var, op: tempPreCheck.op, val: tempPreCheck.val})\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n  }\n\n  const updateprecheckthen = () => {\n    if(currentQuestion.pre_check){\n      currentQuestion.pre_check.then = tempPreCheck.then\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n  }\n\n  /*Function that remove a precheck condition of the currentQuestion*/\n  const removeprecheck = (index) => {\n    console.log(\"supprimer\", index)\n    currentQuestion.pre_check.if.splice(index,1)\n    if (!currentQuestion.pre_check.if.length)\n      currentQuestion.pre_check = null\n    setCurrentQuestion(currentQuestion)\n    //set_elements()\n    forceUpdate()\n  }\n\n  const switchpairindicator = () => {\n    pairIndicator = (pairIndicator + 1)%4\n  }\n\n  /*Return the create box, with all it elements*/\n  return (\n    <div className=\"container iq-card pt-2 border border-dark\">\n\n      {/*Title text*/}\n      <div className=\"iq-card bg-primary text-center mb-2\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title text-white\">Mode Création </h4>\n          <p className=\"card-text  m-0\">Vous pouvez ajouter, supprimer, modifier des checklists et des questions ici.</p>\n          <p className=\"card-text \">La checklist modifiée s'affiche en dessous.</p>\n        </div>\n      </div>\n\n      {/*Question and Checklist selection and show*/}\n      <div className=\"row align-items-center p-0 m-0 pb-2 border-bottom border-\">\n        {/*Checklist selection dropdown*/}\n        <div className=\"col align-items-center \">\n          <div className=\"dropright text-center\">\n            <button className=\"btn btn-info dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-toggle=\"dropdown\" aria-expanded=\"false\">\n              Sélectionnez la checklist\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Add a checklist (and select it)*/}\n              <li><label className=\"dropdown-item \" onClick={function(event){ addchecklist(); forceUpdate()}}>Nouvelle checklist</label></li>\n              {/*Select an existing checklist*/}\n              {checklistList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item \" onClick={function (){swapchecklist_creation_mode(i.checklist_id)}}>\n                  Checklist n°{i.checklist_id}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        {/*Checklist show*/}\n        <div className=\"col align-items-center p-2\">\n          <div className=\"iq-card card-light text-dark text-center shadow-sm mb-0 \">\n            Checklist n°{checklistId}\n          </div>\n        </div>\n        {/*Question show*/}\n        <div className=\"col align-items-center p-2\">\n          <div className=\"iq-card card-light text-dark text-center shadow-sm mb-0\">\n            Question n°{currentQuestion ? currentQuestion.id : \" -\"}\n          </div>\n        </div>\n        {/*Checklist selection dropdown*/}\n        <div className=\"col align-items-center \">\n          <div className=\"dropleft text-center\">\n            <button className=\"btn btn-info dropdown-toggle  \" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-toggle=\"dropdown\" aria-expanded=\"false\">\n              Sélectionnez la question\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Add a question (and select it)*/}\n              <li><label className=\"dropdown-item \" onClick={function(event){ addnewquestion(); forceUpdate()}}>Nouvelle question</label></li>\n              {/*Select an existing checklist*/}\n              {questionList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item \" onClick={function(){searchquestion(checklist, null, i)}}>\n                  Question n°{i}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {currentQuestion ? ( <div>\n        {/*Question Name selection*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark \">\n            Nom de la question :\n          </div>\n          {/*Question name text input */}\n          <div className=\"col-sm-4 align-items-center\">\n            <input className=\"form-control w-100 mb-0\" type = \"text \" aria-label=\"text input\" value={currentName} onChange={modifyname}/>\n          </div>\n          {/*Question name validation button*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center \">\n            <button className=\"btn btn-warning \" onClick={ () => updatename()}>\n              Valider le nom\n            </button>\n          </div>\n        </div>\n\n        {/*Question Comment selection*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark  \">\n            Commentaire (optionnel) de la question :\n          </div>\n          {/*Question comment text input */}\n          <div className=\"col-sm-4 align-items-center \">\n            <textarea className=\"form-control form-control-custom\" id=\"exampleFormControlTextarea1\" rows=\"2\" value={currentComment ? currentComment:\"\"} onChange={modifycomment}/>\n          </div>\n          {/*Question comment validation button*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center\">\n            <button className=\"btn btn-warning \" onClick={function(event){ updatecomment(); forceUpdate()}}>\n              Valider le commentaire\n            </button>\n          </div>\n        </div>\n\n        {/*Question Position (below which question the current question must be put)*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark\">\n            Placer la question à la suite d'une autre :\n          </div>\n          <div className=\"col-sm-4 align-items-center\">\n          </div>\n          {/*Other question as parent selection dropdown*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center\">\n            <div className=\"dropleft text-center\">\n              <button className=\"btn btn-warning dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton1\"\n                      data-toggle=\"dropdown\" aria-expanded=\"false\">\n                Quelle question ?\n              </button>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                {/*Put the question at top level*/}\n                <li><label className=\"dropdown-item \" onClick={() => movecurrentquestion_child(-1)}>\n                  Au début</label>\n                  </li>\n                {/*Put the question at child of another question*/}\n                {questionList.map((i, index) => (\n                  <li key={index}><label className=\"dropdown-item \" onClick={() => movecurrentquestion_sibling(i)}>\n                    Question n°{i}</label>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/*Question situation (child or sibling of the upper question)*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark \">\n            Placer la question comme découlant d'une autre :\n          </div>\n          <div className=\"col-sm-4 align-items-center\">\n          </div>\n          {/*Choice between child and sibling*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center\">\n            <div className=\"dropleft text-center\">\n              <button className=\"btn btn-warning dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton1\"\n                      data-toggle=\"dropdown\" aria-expanded=\"false\">\n                Quelle question ?\n              </button>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                {/*Put the question at top level*/}\n                <li><label className=\"dropdown-item \" onClick={() => movecurrentquestion_child(-1)}>\n                  Au début</label>\n                  </li>\n                {/*Put the question at child of another question*/}\n                {questionList.map((i, index) => (\n                  <li key={index}><label className=\"dropdown-item \" onClick={() => movecurrentquestion_child(i)}>\n                    Question n°{i}</label>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/*(Multi)selection of answers of the current question*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark \">\n            Quelles réponses possibles ? :\n          </div>\n          <div className=\"col-sm-4 align-items-center\">\n          </div>\n          {/*(Multi)Selection dropdown*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center\">\n            <BootstrapSelect key={pairIndicator} className=\" w-100 \" selectStyle =\"btn-warning\" options={possible_answers} isMultiSelect={true} placeholder=\"Aucune\" onChange={changecheck}/>\n          </div>\n        </div>\n\n        {/*Question conditions of the current question (optional part, so it needs to be collapsable)*/}\n        <div className=\"border-bottom m-0 py-2 text-center\">\n          <button className=\"btn btn-secondary m-auto p-2 my-2 \" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseQuestionConditions\"\n                  aria-expanded=\"false\" aria-controls=\"collapseExample\">\n            <i className=\"las la-angle-down\"/> Ajouter/Supprimer des conditions sur les autres questions <i className=\"las la-angle-down\"/>\n          </button>\n          <div className=\"collapse m-0 p-0\" id=\"collapseQuestionConditions\">\n            <div className=\"row align-items-center p-2 m-0\">\n              <div className=\"col-sm-3 align-items-center text-dark \">\n                Quelles conditions sur les réponses ? :\n              </div>\n              <div className=\"col-sm-9 align-items-center\">\n                {utils.list_possible_answer.map((answer, index) => (\n                  <div key={index} className=\"row\">\n                    <div className=\"col align-items-center p-2 my-auto\">\n                      <div className=\"iq-card card-grey text-center shadow-sm m-0 text-dark \">\n                        {trad_answer(answer)}\n                      </div>\n                    </div>\n                    <div className=\"col align-items-center p-2\">\n                      <div className=\"list-group list-group-horizontal m-0\">\n                        {/*For each possible answer, if in item.check, we put a checkbox*/}\n                        {(currentQuestion && currentQuestion.cond[answer]) ? currentQuestion.cond[answer].map( (id, index) => (\n                            <button key={index} className=\" list-group-item list-group-item-custom btn btn-outline-secondary \" type=\"button\" onClick={() => deletecond(answer, id)} >{id} </button>\n                        )): null}\n                      </div>\n\n                    </div>\n                    <div className=\"col align-items-center p-2 my-auto\">\n                      <div className=\"dropleft text-center\">\n                        <button className=\"btn btn-warning dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton1\"\n                                data-toggle=\"dropdown\" aria-expanded=\"false\">\n                          Quelle question ?\n                        </button>\n                        <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                          {questionList.map((id, index) => (\n                            <li key={index}><label className=\"dropdown-item \" onClick={() => addcond(answer, id)}>\n                              Question n°{id}</label>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/*Numerical conditions of the current question*/}\n        <div className=\"border-bottom m-0 py-2 text-center\">\n          <button className=\"btn btn-secondary m-auto p-2 my-2 \" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseNumConditions\"\n                  aria-expanded=\"false\" aria-controls=\"collapseExample\">\n            <i className=\"las la-angle-down\"/> Ajouter/Supprimer des conditions numériques <i className=\"las la-angle-down\"/>\n          </button>\n          <div className=\"collapse m-0 p-0\" id=\"collapseNumConditions\">\n            <div className=\"col align-items-center p-2 m-0\">\n              {/*Current Numerical condition list display*/}\n              {(currentQuestion && currentQuestion.cond.num) ? currentQuestion.cond.num.map( (num, index) => (\n                <div  key={index} className=\"row justify-content-md-center py-2\">\n                  <div className=\"col-sm-3 align-items-center my-auto\">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark \">\n                      {trad_num_var(num.var)}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto \">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark \">\n                      {num.op}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto \">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark\">\n                      {num.val}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto text-center\">\n                    <button className=\"btn btn-danger \" onClick={() => removenum(index)} >\n                      <div data-icon=\"&#xe053;\" className=\"icon mt-1\"/>\n                    </button>\n                  </div>\n                </div>\n              )): null}\n              {/*Add numerical condition section */}\n              <div>\n                <div className=\"row justify-content-md-center py-2\">\n                  <div className=\"col-sm-3 align-items-center my-auto\">\n                    <BootstrapSelect key={pairIndicator} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle variable ?\" options={possible_vars} onChange={addtempnumvar}/>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto\">\n                    {[\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempNums.var) ?\n                      <div>est</div>\n                      :\n                      <BootstrapSelect key={pairIndicator} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quel opérateur ?\" options={possible_op} onChange={addtempnumop}/>\n                    }\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto \">\n                    {[\"diabetic\",\"difficult_intubation\"].includes(tempNums.var) ?\n                      <BootstrapSelect key={tempNums.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle valeur ?\"\n                                     options={[{\"labelKey\": \"vrai\", \"value\": \"Vrai\"},{\"labelKey\": \"faux\", \"value\": \"Faux\"}]  } onChange={addtempnumval}/>\n                      :\n                      <div> {tempNums.var === \"gender\" ?\n                        <BootstrapSelect key={tempNums.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle valeur ?\"\n                                     options={[{\"labelKey\": \"F\", \"value\": \"F\"},{\"labelKey\": \"M\", \"value\": \"M\"}] } onChange={addtempnumval}/>\n                        :\n                        <input type=\"number\" className=\"form-control \" placeholder=\"Quelle valeur ?\" onChange={addtempnumval}/>\n                      } </div>\n                    }\n                  </div>\n                  <div className=\"col-sm-3 align-items-center text-center my-auto\">\n                    <button className=\"btn btn-warning w-100 \" onClick={() => addnum()} >\n                      Valider\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/*Precheck conditions of the current question*/}\n        <div className=\"border-bottom m-0 py-2 text-center\">\n          <button className=\"btn btn-secondary m-auto p-2 my-2 \" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsePreCheck\"\n                  aria-expanded=\"false\" aria-controls=\"collapseExample\">\n            <i className=\"las la-angle-down\"/> Ajouter/Supprimer des conditions pour que la question soit pré-checkée <i className=\"las la-angle-down\"/>\n          </button>\n          <div className=\"collapse m-0 p-0\" id=\"collapsePreCheck\">\n            <div className=\"col align-items-center p-2 m-0\">\n              {/*Current PreCheck condition list (and then value) display*/}\n              {(currentQuestion && currentQuestion.pre_check) ? currentQuestion.pre_check.if.map( (pre_check, index) => (\n                <div  key={index} className=\"row justify-content-md-center py-2\">\n                  <div className=\"col-sm-3 align-items-center my-auto\">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark \">\n                      {trad_num_var(pre_check.var)}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto \">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark\">\n                      {pre_check.op}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto \">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark\">\n                      {pre_check.val}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto text-center\">\n                    <button className=\"btn btn-danger \" onClick={() => removeprecheck(index)} >\n                      <div data-icon=\"&#xe053;\" className=\"icon mt-1\"/>\n                    </button>\n                  </div>\n                </div>\n              )): null}\n              {(currentQuestion && currentQuestion.pre_check) ? (\n                <div className=\"row justify-content-md-center py-2\">\n                  <div className=\"col-sm-2 align-items-center my-auto \">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark\">\n                      {trad_answer(currentQuestion.pre_check.then)}\n                    </div>\n                  </div>\n                </div>\n              ): null}\n\n\n              {/*Add PreCheck condition and then value section*/}\n              <div>\n                {/*Same problem than with other (multi) bootstrap select, must see if another solution. If we switch between checklist 0 question 1 and checklist 1 question 1, problem stay*/}\n                <div>\n                  <div className=\"row justify-content-md-center py-2\">\n                    <div className=\"col-sm-3 align-items-center my-auto\">\n                      <BootstrapSelect key={pairIndicator} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle variable ?\" options={possible_vars} onChange={addtempprecheckvar}/>\n                    </div>\n                    <div className=\"col-sm-3 align-items-center my-auto \">\n                      {[\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempPreCheck.var) ?\n                        <div>est</div>\n                        :\n                        <BootstrapSelect key={pairIndicator} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quel opérateur ?\" options={possible_op} onChange={addtempprecheckop}/>\n                      }\n                    </div>\n                    <div className=\"col-sm-3 align-items-center my-auto\">\n                      {[\"diabetic\",\"difficult_intubation\"].includes(tempPreCheck.var) ?\n                        <BootstrapSelect key={tempPreCheck.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle valeur ?\"\n                                       options={[{\"labelKey\": \"vrai\", \"value\": \"Vrai\"},{\"labelKey\": \"faux\", \"value\": \"Faux\"}]  } onChange={addtempprecheckval}/>\n                        :\n                        <div> {tempPreCheck.var === \"gender\" ?\n                          <BootstrapSelect key={tempPreCheck.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle valeur ?\"\n                                       options={[{\"labelKey\": \"F\", \"value\": \"F\"},{\"labelKey\": \"M\", \"value\": \"M\"}] } onChange={addtempprecheckval}/>\n                          :\n                          <input type=\"number\" className=\"form-control \" placeholder=\"Quelle valeur ?\" onChange={addtempprecheckval}/>\n                        } </div>\n                      }\n                    </div>\n                    <div className=\"col-sm-3 align-items-center text-center my-auto\">\n                      <button className=\"btn btn-warning w-100  \" onClick={() => addprecheck()} >\n                        Valider\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"row justify-content-md-center py-2\">\n                    <div className=\"col-sm-3 align-items-center my-auto \">\n                      <BootstrapSelect key={tempPreCheck.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quel pre-check ?\" options={possible_pre_check} onChange={addtempprecheckthen}/>\n                    </div>\n                    <div className=\"col-sm-3 align-items-center \">\n                      <button className=\"btn btn-warning w-100  \" onClick={() => updateprecheckthen()} >\n                        Modifier le precheck\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> ) : null}\n\n\n      {/*End section of the create box, with remove and import button*/}\n      <div className=\"row align-items-center p-2 m-0\">\n        {/*Button to remove the current checklist*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-danger  \" onClick={removechecklist} >\n            Supprimer la checklist\n          </button>\n        </div>\n        {/*Button to import in .json the list of checklist*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-warning  \" onClick={() => checklist_to_json(checklistList)}>\n            Sauvegarder la liste de checklists\n          </button>\n        </div>\n        {/*Button to remove the current question*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-danger \" onClick={removequestion}>\n            Supprimer la question\n          </button>\n        </div>\n      </div>\n    </div>\n    )\n}\n\nexport {CreateBox}","import React from \"react\";\n\n/*Component to show the credits of the web app*/\nfunction Credits ({props}) {\n  return (\n    <div className=\"\">\n      <div className=\"card-inv text-center\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title m-0 text-custom\">SLS Checklist App</h5>\n          <p className=\"card-text text-custom m-0\">v0.6.1</p>\n          <p className=\"card-text text-custom m-0\">Développé par Théo Stassen</p>\n          <p className=\"card-text text-custom\">theo.stassen@protonmail.com</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Credits}","import React from \"react\";\nimport * as utils from \"./utils\";\n\n/*Component for the selection of the current patient\n* -patientList : list of all patients\n* -currentPatient : current patient state variable\n* -setCurrentPatient: current patient set function\n* */\nfunction PatientBox ({props}) {\n\n  let {patientList, currentPatient, setCurrentPatient, setIsDict, setResult, setIsPreCheckDone, forceUpdate} = props\n\n  /*Function to change the current patient to the one with patient_id*/\n  const changecurrentpatient = (patient_id) => {\n    const currentPatient = patientList.filter(elm => elm.id === patient_id)[0]\n    setCurrentPatient(currentPatient)\n    setResult({})\n    let init_dict = {}\n    utils.list_possible_answer.forEach(function (answer){init_dict[answer]={0:true}})\n    setIsDict(init_dict)\n    setIsPreCheckDone([])\n    forceUpdate()\n  }\n\n  /*Return the patient box elements*/\n  return (\n    <div className=\"container iq-card p-2 py-3 \">\n      <div className=\"row align-items-center m-0\">\n        {/*Indication text*/}\n        <div className=\"col-sm-4 align-items-center text-dark\">\n          Patient Actuel :\n        </div>\n        {/*Current patient name*/}\n        <div className=\"col-sm-4 align-items-center \">\n          <div className=\"iq-card bg-primary text-center  m-0\">\n            {currentPatient.firstname}&nbsp;{currentPatient.lastname}\n          </div>\n        </div>\n        {/*Current patient selection dropdown*/}\n        <div className=\"col-sm-4 align-items-center \">\n          <div className=\"dropdown text-center\">\n            <button className=\"btn btn-secondary btn-round dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-toggle=\"dropdown\" aria-expanded=\"false\">\n              Sélectionnez le patient\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {patientList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item \" onClick={() => changecurrentpatient(i.id)}>\n                  {i.firstname}&nbsp;{i.lastname}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {PatientBox}","import * as utils from \"./utils\";\nimport React from \"react\";\n\n/* Component representing a checklist item (a question).\n- init_items : the parent node of the checklist, used when we need to clean the questions after a answer modification\n- item : the current item\n- dicts : the different state dicts\n- forceUpdate : function that force the reload of component if necessary\n- values_filter_cond : function that filter the values by keeping only the values that validates all conditions\n* */\nfunction ChecklistItem({init_items, item, dicts, forceUpdate, values_filter_cond , creationMode, currentId}) {\n\n  let [isDict, setIsDict, numDict, result, setResult, isPreCheckDone, setIsPreCheckDone] = dicts\n\n  // console.log(item)\n  // console.log(\"isDict\", isDict)\n  // console.log(\"result\", result)\n  // console.log(\"isprecheck\", isPreCheckDone)\n  // console.log(\"numdict\", numDict)\n\n  /* Function triggered when the user click on one answer, we update the isDict and results and clean (remove from isDict and results) questions\n  * that must not be visible anymore, because of there cond's */\n  const handleOnChangeIs = (answer) => {\n    const is_check = !isDict[answer][item.id]\n    const list_other_answer = utils.list_possible_answer.filter(elm => elm !== answer)\n\n    // If is_check = true, it means that the state of the answer uncheck -> check,\n    // so we add in result and clean questions that depends of this item being with another answer (as it is not the case anymore)\n    if (is_check){\n      result[item.id]={name:item.name,answer:answer}\n\n      clean_children_rec(init_items, init_items, item.id,isDict, setIsDict, result, list_other_answer)\n    }\n    // If is_check = false, it means that the state of the answer check -> uncheck,\n    // so we remove in result and clean questions that depends of this item being with this answer (as it is not the case anymore)\n    else{\n      delete result[item.id]\n      clean_children_rec(init_items, init_items, item.id, isDict, setIsDict, result, [answer])\n    }\n    setResult(result)\n    isDict[answer][item.id] = is_check\n    list_other_answer.forEach(function(elm){isDict[elm][item.id]= false})\n    setIsDict(isDict)\n  }\n\n  /*Function triggered where the user enter a text in a text question. We update the result*/\n  const handleOnChangeText = (event) => {\n    const input_text = event.target.value;\n    result[item.id]={name:item.name,answer:input_text}\n    setResult(result)\n  };\n\n  /* If the item as pre check conditions and his precheck as not already been made,\n  * we check the condition in 'pre_check.if' and if it passes, we do as if the 'pre_check.then' answer was clicked\n  */\n\n  if(item.pre_check && !isPreCheckDone.includes(item.id)){\n\n    if (item.pre_check.if.every(function (elm){ return utils.simple_operation(numDict[elm.var],elm.op, elm.val);})){\n\n      handleOnChangeIs(item.pre_check.then); isPreCheckDone.push(item.id); setIsPreCheckDone(isPreCheckDone);\n    }\n  }\n\n  /* Filter (check of the cond's) of the item values (children) */\n  let children = null;\n  let values = null;\n  if (item.values)\n    values = values_filter_cond(item.values, isDict, numDict, creationMode)\n\n  /*We create the children components of the current item*/\n  if (values && values.length) {\n    children = (\n      <ul className=\"mb-0\">\n        {values.map((i, index) => (\n          <ChecklistItem  key={index} init_items={init_items} item={i} dicts={dicts} forceUpdate = {forceUpdate} values_filter_cond={values_filter_cond} creationMode={creationMode} currentId={currentId} />\n        ))}\n      </ul>\n    );\n  }\n\n\n  // console.log(\"Item return\", item)\n  // console.log(\"isDict\", isDict[\"yes\"][10])\n  // console.log(\"result\", result)\n\n  /*We return the different elements of the current item, and also his children*/\n  return (\n    <div className={\"container p-0 mt-3 mx-auto \"}>\n      {/*Current Item*/}\n      <div className={\"row align-items-center m-0 p-0\" + (creationMode && currentId === item.id ? \" border border-danger \" : \" \" )}>\n\n        {/*Item Id*/}\n        <div className=\"col list-group list-group-horizontal m-0 p-0 w-auto\">\n          <div className=\"list-group-item m-0 p-0  bg-info text-center shadow-sm my-auto\" >\n            <h5 className=\"card-body p-auto \">\n              {item.id}\n            </h5>\n          </div>\n\n          {/*Item name*/}\n          <div className=\"list-group-item m-0 p-0 w-100 shadow-sm h-auto text-dark\"  >\n              {item.comment ? (\n                <div className=\"alert alert-light m-0 mt-0 border-0 text-primary my-auto\" role=\"alert\">\n                  {item.comment}\n                </div>\n              ) : null}\n            <div className=\"card-body my-auto\">\n              {item.name}\n            </div>\n            {/*Item comment (above the item name)*/}\n          </div>\n\n        </div>\n\n        {/*Item answers (if any, if not empty col)*/}\n        {item.check.length ? (\n        <div className=\"col-md-auto p-0 pl-3\">\n          <div className=\"list-group list-group-horizontal \">\n            {/*For each possible answer, if in item.check, we put a checkbox*/}\n            {utils.list_possible_answer.map((answer, index) => (\n              item.check.includes(answer) ? (\n                <label key={index} className={\"list-group-item list-group-item-custom btn m-0\" + (index === 0 ? \" btn-outline-success\" : (index === 1 ? \" btn-outline-danger\" : \" btn-outline-secondary\"))} >\n                  <input  type=\"checkbox\"\n                         aria-label=\"Checkbox\"\n                         checked={isDict[answer][item.id] ? 1:0}\n                         onChange={function(event) {handleOnChangeIs(answer);forceUpdate()}}\n                  />\n                  &nbsp;{utils.trad_answer(answer)}\n                </label>\n              ) : null\n            ))}\n            {/*If item answers must contain text, put a text input*/}\n            {item.check.includes(\"text\") ? (\n            <div className=\"input-group-prepend\">\n              <div className=\"input-group-text\">\n                  <input\n                    className=\"card w-100 text-custom\"\n                    type = \"text\"\n                    aria-label=\"text input\"\n                    onChange={handleOnChangeText}\n                  />\n              </div>\n            </div>\n            ) : null }\n          </div>\n        </div>\n        ) : <div className=\"col-sm-6\"> {null} </div>}\n      </div>\n      {/*Children of the current item*/}\n      {children}\n    </div>\n  );\n}\n\n/*Function that clean (remove from isDict and results) questions\n  * that must not be visible anymore, because of there cond's.\n  * -We check the current item, remove if necessary from result and isDict\n  * (id indicating what question has been removed, and answers indicating all the answers possibly removed,\n  * so we need to check if the current item was dependent of one of these answers,\n  * -We call the function recursively on each child of the current item\n  * - If the current item as been removed, we call recursively, s\n  * */\nfunction clean_children_rec(init_item, item, id, isDict, setIsDict, result, answers) {\n  let is_remove = false\n  if(item.cond){\n    answers.forEach(function(answer){\n      if(item.cond[answer] && item.cond[answer].includes(id)){\n        utils.list_possible_answer.forEach(function(elm){isDict[elm][item.id]= false})\n        delete result[item.id]\n        is_remove = true\n      }\n    })\n  }\n\n  if (item.values && item.values.length){\n    item.values.forEach( function (value) {\n      clean_children_rec(init_item, value, id, isDict, setIsDict, result, answers)\n    })\n  }\n  if (id !== item.id && is_remove) {\n        clean_children_rec(init_item, init_item, item.id, isDict, setIsDict, result, answers)\n  }\n}\n\nexport {ChecklistItem}","import React from \"react\";\nimport * as utils from \"./utils\";\n\nfunction SectionTitle ({section_title}) {\n\n\n  console.log(section_title)\n  return (\n    <div className=\"card p-2 px-4 mb-2 text-primary shadow-sm border-bottom border-top border-dark\">\n      {section_title}\n    </div>\n  )\n\n}\n\nexport {SectionTitle}","import React, {useState, useReducer} from \"react\";\nimport \"./App.css\";\nimport  * as temp_data from \"./temporary_data.js\";\nimport * as utils from \"./utils.js\";\nimport {AppNavbar} from \"./navbar.js\";\nimport {AppSignature} from \"./signature.js\"\nimport {CreateBox} from \"./creation_box.js\"\nimport {Credits} from \"./credits.js\"\nimport {PatientBox} from \"./patient_box.js\"\nimport {ChecklistItem} from \"./item.js\"\nimport {SectionTitle} from \"./section_title.js\";\n\n/*Main Function\n* -Declare all the variables needed in different component\n* -Return a combination of different components (Navbar, CreateBox, Credits, PatientBox, ChecklistItem(s), Signature)\n* */\n\nfunction date_to_age (date){\n  let result = date.split(\"/\")\n  let current_year = new Date()\n  return current_year.getFullYear() - result[2]\n}\n\nexport default function App() {\n\n  /*Function needed (for the moment), to force the components to update because they don't*/\n  const [, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  /*Main state variables :\n  * -checklistId : Id of the current checklist\n  * -checklistList : List containing the different checklists (from backend, will be a database call)\n  * -patientList : List of all the patient (from hospital data, will be a database call)\n  * -checklist : current checklist (the one that is shown) (the structure can be seen in temporary_data.js\n  * -result : dict containing the results of the current checklist check-in\n  * -isPreCheckDone : array containing the id's of the questions for which the precheck as been made\n  * */\n  let [checklistId, setChecklistId] = useState(0)\n  let [checklistList, setChecklistList] = useState(temp_data.checklist_list)\n  let [patientList, ] = useState(temp_data.patients)\n  let [currentPatient, setCurrentPatient] = useState(patientList[0])\n  let [checklist, setChecklist] = useState(checklistList.filter(e => e.checklist_id === checklistId)[0])\n  let [result, setResult] = useState({})\n  let [isPreCheckDone, setIsPreCheckDone] = useState([])\n\n  let [currentQuestion, setCurrentQuestion] = useState(checklist && checklist.values.length ? checklist.values[0] : null)\n\n  /* Other state variables\n  * -creationMode : bool indicates if we are in creation mode\n  * -creditMode : bool indicates if we are in credit mode\n  * -trimmedCanvasUrl : variable containing the canvas url data of the signature\n  * -sigpad : variable containing the signature pad information*/\n  let [creationMode, setCreationMode] = useState(0)\n  let [creditMode, setCreditMode] = useState(0)\n  let [trimmedCanvasUrl, setTrimmedCanvasUrl] = useState(null)\n  let sigpad = {}\n\n  /* Initial set of isDict state variable\n  * -init_dict : dict containing {0:true} for each possible answer (yes, no, etc), defined in utils.js\n  * -isDict : dict containing a dict for each possible response,\n  * containing the questions id's that have this response checked at this moment*/\n  let init_dict = {}\n  utils.list_possible_answer.forEach(function (answer){init_dict[answer]={0:true}})\n  const [isDict, setIsDict] = useState(init_dict)\n\n  // console.log(\"init_dict\", init_dict)\n\n\n  /* Fill in of numDict, containing all the numerical data (the way current patient info is extracted will be improved)*/\n  let num_values = checklist ? checklist.num_values : []\n  let numDict = {}\n  num_values.forEach(function(elm) {numDict[elm.var] = elm.val})\n\n  for (const [key, value] of Object.entries(currentPatient)) {\n    numDict[key] = value\n  }\n  numDict[\"age\"] = date_to_age(numDict[\"dateofbirth\"])\n\n  let dicts = [isDict, setIsDict, numDict, result, setResult,isPreCheckDone, setIsPreCheckDone ]\n\n  /* Filter (check of the cond's) of the checklist  initial values (i.e. the questions at the first level of the tree)*/\n  let values = null\n  if (checklist && checklist.values)\n    values = values_filter_cond(checklist.values, isDict, numDict, creationMode)\n\n  /* Function that changes the current checklist to the checklist with checklist_id and resets dicts*/\n  const swapchecklist = (checklist_id) => {\n    setChecklistId(checklist_id);\n    checklist = checklistList.filter(e => e.checklist_id === checklist_id)[0]\n    setChecklist(checklist)\n    setResult({})\n    let init_dict = {}\n    utils.list_possible_answer.forEach(function (answer){init_dict[answer]={0:true}})\n    setIsDict(init_dict)\n    setIsPreCheckDone([])\n    console.log(\"isdict after swapchecklist\", isDict)\n    return checklist\n  }\n\n  // console.log(\"app\")\n  // console.log(\"isPreCheckDone\", isPreCheckDone)\n  // console.log(\"isDict\", isDict)\n  // console.log(\"result\", result)\n  console.log(values)\n\n  /* Return the different components, depending of the mode.\n  * We define also the background and a hidden bottom navbar to avoid problems with the background limits\n  */\n  return (\n    <div className=\"min-vh-100 content-page iq-bg-info\">\n      <div>\n        {<AppNavbar props = {{setCreationMode, setCreditMode, trimmedCanvasUrl, result, checklistList, swapchecklist}}/>}\n        {!creditMode ? (\n          <div>\n            {creationMode ?\n              <CreateBox props={{checklist, setChecklist, checklistList, setChecklistList, checklistId, setChecklistId, forceUpdate, setResult, setIsDict, init_dict, setIsPreCheckDone, currentQuestion, setCurrentQuestion}} />\n              :\n              <PatientBox props={{patientList, currentPatient, setCurrentPatient, setIsDict, setResult, setIsPreCheckDone, init_dict, forceUpdate}} />\n            }\n            <div className=\"container p-0 border-bottom border-right border-left border-dark\">\n              {values ? values.map((i, index) => (\n                <div>\n                  {i.section_title ? <SectionTitle section_title={i.section_title} /> : <div className=\"border-top border-dark\"/>}\n                  <div className=\"mb-3 px-3\"><ChecklistItem key={index} init_items={checklist} item={i} dicts={dicts} forceUpdate = {forceUpdate} values_filter_cond={values_filter_cond} creationMode={creationMode} currentId = {currentQuestion.id} /></div>\n                </div>))\n                :\n                null\n              }\n            </div>\n            {!creationMode ? <AppSignature props = {{sigpad, setTrimmedCanvasUrl}}/> : null}\n          </div>\n          )\n          :\n          <Credits props={null}/>\n        }\n      </div>\n      <div>\n        <nav className=\"navbar\">\n          <label className=\"navbar-brand\">{null}</label>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\n/* Filter the values by keeping only the values that validates all conditions\n* We check all the response condition of the item\n* (for ex, if item.cond contains {\"yes\": [1,4]}, we check if isDict[\"yes\"] contains 1 and 4 )\n* + all num conditions\n*/\nfunction values_filter_cond(values, isDict, numDict, creationMode) {\n  // console.log(values)\n  // console.log(isDict)\n  return values.filter( item=>\n      Object.keys(item.cond).every(\n        function(answer){\n          return (answer === \"num\" || !item.cond[answer] || item.cond[answer].every(\n            function(elm) {return isDict[answer][elm];}\n          ))\n        }\n      )\n      && (creationMode || item.cond.num.every(\n        function(elm) {\n          return !numDict[elm.var] || utils.simple_operation(numDict[elm.var],elm.op, elm.val) }\n      ))\n    )\n}\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}