{"version":3,"sources":["temporary_data.js","utils.js","navbar.js","signature.js","creation_box.js","credits.js","patient_box.js","item.js","App.js","reportWebVitals.js","index.js"],"names":["checklist_list","checklist_id","id","num_values","var","val","values","name","cond","num","check","pre_check","if","op","then","comment","patients","gender","yearofbirth","list_possible_answer","list_possible_answer_trad","list_possible_num_var","list_possible_num_var_trad","list_possible_op","trad_answer","answer","trad_num_var","num_var","simple_operation","val1","string_op","val2","CsvGenerator","dataArray","fileName","separator","addQuotes","this","getDownloadLink","type","data","map","row","rowData","join","length","btoa","encodeURIComponent","downloadLink","getLinkElement","linkText","linkElement","a","document","createElement","innerHTML","href","download","removeAfterDownload","style","display","body","appendChild","click","removeChild","AppNavbar","props","setCreationMode","setCreditMode","trimmedCanvasUrl","result","checklistList","swapchecklist","deactivatecreditmode","className","onClick","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","result_table","Object","entries","key","value","push","utils","downloadImage","role","aria-labelledby","i","filename","AppSignature","sigpad","setTrimmedCanvasUrl","canvasProps","ref","dataUrl","getTrimmedCanvas","toDataURL","clear","CreateBox","checklist","setChecklist","setChecklistList","checklistId","setChecklistId","forceUpdate","useState","currentQuestion","setCurrentQuestion","currentParentQuestion","setCurrentParentQuestion","currentName","setCurrentName","currentComment","setCurrentComment","tempNums","setTempNums","tempPreCheck","setTempPreCheck","console","log","questionList","enumquestions","item","possible_answers","forEach","includes","possible_vars","possible_op","possible_pre_check","set_elements","reinit_current_question","searchquestion","parent_item","removequestion","filter","e","movecurrentquestion","currentQuestionCopy","changecheck","selectedOptions","selectedKey","swapchecklist_creation_mode","addtempnumvar","addtempnumop","addtempnumval","event","target","addtempprecheckvar","addtempprecheckop","addtempprecheckval","addtempprecheckthen","n_checklist","new_empty_checklist","addchecklist","last_id","new_empty_question","addnewquestion","onChange","rows","index","new_position","splice","changepositionquestion","elm","options","isMultiSelect","placeholder","onClose","deletecond","addcond","removenum","selectStyle","removeprecheck","dataStr","JSON","stringify","b","remove","Credits","PatientBox","patientList","currentPatient","setCurrentPatient","patient_id","changecurrentpatient","ChecklistItem","init_items","dicts","values_filter_cond","creationMode","isDict","setIsDict","numDict","setResult","isPreCheckDone","setIsPreCheckDone","handleOnChangeIs","is_check","list_other_answer","clean_children_rec","every","children","checked","input_text","init_item","answers","is_remove","App","useReducer","x","temp_data","creditMode","init_dict","0","keys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c122f8a1.chunk.js","sourcesContent":["/* Data that will be obtain by call to backend\n* */\n\n/*Initial checklist list*/\nconst checklist_list = [\n  {\n    checklist_id: 0,\n    id: -1,\n    num_values:[\n      {var:\"difficult_intubation\", val:1},\n      {var:\"diabetic\", val:1},\n    ],\n    values:[\n      {\n        id: 1,\n        name: \"Intubation Difficile ? \",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\",\"no\",\"idk\"],\n        pre_check : {if:[{var:\"difficult_intubation\",op:\"=\",val:1}],then:\"yes\"},\n        values: [\n          {\n            id: 2,\n            name: \"A confirmer l'incubation difficile\",\n            cond: {\"yes\":[], \"no\": [], \"idk\" : [1], num:[]},\n            check : [\"yes\",\"no\"],\n            values: []\n          },\n          {\n            id: 3,\n            name: \"2ème Anesthésiste\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            values: []\n          },\n          {\n            id: 4,\n            name: \"2ème Infirmière\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            values: []\n          },\n          {\n            id: 5,\n            name: \"Matériel\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [],\n            values: [\n              {\n                id: 6,\n                name: \"Glidescope\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                values: []\n              },\n              {\n                id: 7,\n                name: \"Laryngoscope\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                values: []\n              },\n              {\n                id: 8,\n                name: \"Set Trachéo\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                values: []\n              },\n            ]\n          },\n          {\n            id: 9,\n            name: \"Protocole\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            values: []\n          },\n        ]\n      },\n      {\n        id: 10,\n        name: \"Est-elle susceptible d'être enceinte ?\",\n        comment: \"(Les données patient nous indiquent que la patiente est âgée entre 15 et 60 ans)\",\n        cond: {\"yes\":[], \"no\":[], num:[{var:\"yearofbirth\",op:\">\",val:1960}, {var:\"gender\",op:\"=\",val:\"F\"}]},\n        check : [\"yes\",\"no\"],\n        values: [\n          {\n            id: 11,\n            name: \"Arrêt des rêgles depuis ?\",\n            cond: {\"yes\":[10], \"no\":[], num:[]},\n            check : [\"text\"],\n            values: []\n          },\n          {\n            id: 12,\n            name: \"Test disponible ?\",\n            cond: {\"yes\":[10], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            values: [\n              {\n                id: 13,\n                name: \"Négatif ?\",\n                cond: {\"yes\":[12], \"no\":[], num:[]},\n                check : [\"yes\", \"no\"],\n                values: []\n              },\n              {\n                id: 14,\n                name: \"Faire test maintenant ?\",\n                cond: {\"yes\":[], \"no\":[12], num:[]},\n                check : [\"yes\", \"no\"],\n                values: []\n              },\n              {\n                id: 15,\n                name: \"Postposer l'intervention ?\",\n                cond: {\"yes\":[], \"no\":[12], num:[]},\n                check : [\"yes\", \"no\"],\n                values: []\n              },\n            ]\n          },\n        ]\n      },\n      {\n        id: 16,\n        name: \"Le patient est-il diabétique ?\",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\",\"no\"],\n        pre_check : {if:[{var:\"diabetic\",op:\"=\",val:1}],then:\"yes\"},\n        values: [\n          {\n            id: 17,\n            name: \"Traitement Oral ?\",\n            cond: {\"yes\":[16], \"no\":[], num:[]},\n            check : [\"yes\", \"no\"],\n            values: [\n              {\n                id: 18,\n                name: \"Arrêt des médicaments ?\",\n                cond: {\"yes\":[17], \"no\":[], num:[]},\n                check : [\"yes\", \"no\"],\n                values: []\n              }\n            ]\n          },\n          {\n            id: 19,\n            name: \"Traitement par piqure à insuline ?\",\n            cond: {\"yes\":[16], \"no\":[17], num:[]},\n            check : [\"yes\", \"no\"],\n            values: [\n              {\n                id: 20,\n                name: \"Dernière piqure le ? \",\n                cond : {\"yes\":[19], \"no\":[], num:[]},\n                check: [\"text\"],\n                values: []\n              }\n            ]\n          },\n        ]\n      }\n    ]\n  },\n  {\n    checklist_id: 1,\n    id: -1,\n    num_values:[\n      {var:\"Intubation_difficile\", val:1},\n      {var:\"Diabétique\", val:1},\n    ],\n    values:[\n      {\n        id: 1,\n        name: \"Intubation ? \",\n        cond: {\"yes\": [], \"no\": [], num: []},\n        check: [\"yes\", \"no\", \"?\"],\n        pre_check: {if: [{var: \"Intubation_difficile\", op: \"=\", val: 1}], then: \"yes\"},\n        values: []\n      },\n      {\n        id: 2,\n        name: \"Test ? \",\n        cond: {\"yes\": [], \"no\": [], num: []},\n        check: [\"yes\", \"no\", \"?\"],\n        values: []\n      }\n    ]\n  }\n];\n\n/*List of all patients*/\nconst patients = [\n  {id: 0, name: \"Jean Dupont\", gender: \"M\", yearofbirth: 1970},\n  {id: 1, name: \"Robert Edwards\", gender: \"M\", yearofbirth: 1998},\n  {id: 2, name: \"Luc Monjeau\", gender: \"M\", yearofbirth: 1965},\n  {id: 3, name: \"Eglantine Racine\", gender: \"F\", yearofbirth: 1987},\n  {id: 4, name: \"Georgette Cailot\", gender: \"F\", yearofbirth: 1941}\n]\n\n\nexport {checklist_list, patients}","/*Diverse utility elements*/\n\n\n/*We consider a constant list of all possible answers to a question*/\nconst list_possible_answer = [\"yes\",\"no\",\"idk\",\"ok\",\"not_ok\"]\nconst list_possible_answer_trad = {\"yes\":\"Oui\",\"no\":\"Non\",\"idk\":\"?\",\"ok\":\"OK\",\"not_ok\":\"Non OK\"}\n\nconst list_possible_num_var = [\"diabetic\",\"age\",\"yearofbirth\",\"difficult_intubation\", \"gender\"]\nconst list_possible_num_var_trad = {\"diabetic\":\"Diabétique\",\"age\":\"Âge\",\"yearofbirth\":\"Année de naissance\",\"difficult_intubation\":\"Intubation Difficile\", \"gender\":\"Genre\"}\n\nconst list_possible_op = [\"<\",\">\",\"=\"]\n\n\n/*Function to translate an answer into mountable french version*/\nconst trad_answer = (answer) => {\n  return list_possible_answer_trad[answer]\n}\n\nconst trad_num_var = (num_var) => {\n    return list_possible_num_var_trad[num_var]\n}\n\n/*List of possible options (answers), used in the multiselect component to choose the question answers*/\n\n\n/*Function that make the operation of type \"is val1 op val2 ?' with op the operator in string input*/\nconst simple_operation = (val1, string_op, val2) => {\n  switch (string_op) {\n    case \">\" : return val1 > val2;\n    case \"<\" : return val1 < val2;\n    case \"=\" : return val1 === val2 ;\n    default: return true;\n  }\n}\n\n/*Function that take the list of checklist, transform it in json format and export as .json file*/\nconst checklist_to_json = (checklistList) => {\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(checklistList));\n    console.log(dataStr)\n    var b = document.createElement('a');\n    b.href = dataStr ;\n    b.download = \"checklist.json\";\n    document.body.appendChild(b);\n    b.click();\n    b.remove()\n}\n\n/*Function to take a data array and put in a .csv file, with some characteristics*/\nfunction CsvGenerator(dataArray, fileName, separator, addQuotes) {\n    this.dataArray = dataArray;\n    this.fileName = fileName;\n    this.separator = separator || ',';\n    this.addQuotes = !!addQuotes;\n\n    if (this.addQuotes) {\n        this.separator = '\"' + this.separator + '\"';\n    }\n\n    this.getDownloadLink = function () {\n        var separator = this.separator;\n        var addQuotes = this.addQuotes;\n\n        var rows = this.dataArray.map(function (row) {\n            var rowData = row.join(separator);\n\n            if (rowData.length && addQuotes) {\n                return '\"' + rowData + '\"';\n            }\n\n            return rowData;\n        });\n\n        var type = 'data:text/csv;charset=utf-8';\n        var data = rows.join('\\n');\n\n        if (typeof btoa === 'function') {\n            type += ';base64';\n            data = btoa(data);\n        } else {\n            data = encodeURIComponent(data);\n        }\n\n        return this.downloadLink = this.downloadLink || type + ',' + data;\n    };\n\n    this.getLinkElement = function (linkText) {\n        var downloadLink = this.getDownloadLink();\n        var fileName = this.fileName;\n        this.linkElement = this.linkElement || (function() {\n            var a = document.createElement('a');\n            a.innerHTML = linkText || '';\n            a.href = downloadLink;\n            a.download = fileName;\n            return a;\n        }());\n        return this.linkElement;\n    };\n\n    // call with removeAfterDownload = true if you want the link to be removed after downloading\n    this.download = function (removeAfterDownload) {\n        var linkElement = this.getLinkElement();\n        linkElement.style.display = 'none';\n        document.body.appendChild(linkElement);\n        linkElement.click();\n        if (removeAfterDownload) {\n            document.body.removeChild(linkElement);\n        }\n    };\n}\n\n\n\n\nexport {list_possible_answer_trad, list_possible_answer, list_possible_num_var_trad, list_possible_num_var, list_possible_op, trad_answer, trad_num_var, CsvGenerator, simple_operation, checklist_to_json}","import React from \"react\";\nimport * as utils from \"./utils\";\n\n/* Component of the upper navbar of the webpage\n* -setCreationMode: bool indicating if we are in creation mode set function\n* -setCreditMode: bool indicating if we are in credit mode set function\n* -trimmedCanvasUrl: the canvas url data of the signature\n* -result: dict containing the results of the current checklist check-in\n* -checklistList: List containing the different checklists\n* -swapchecklist: function that changes the current checklist\n* */\nfunction AppNavbar ({props}) {\n\n  let {setCreationMode, setCreditMode, trimmedCanvasUrl, result, checklistList, swapchecklist} = props;\n\n  /*Function triggered when we want to download the signature as .png file if there is a canvas url data*/\n  const image_download = () => {\n    if(trimmedCanvasUrl)\n      downloadImage(trimmedCanvasUrl, \"image.png\");\n  }\n\n  /*Create a table containing results and export it as .csv file*/\n  function import_csv_result () {\n    let result_table = [[\"id\", \"name\", \"answer\"]]\n    for (const [key, value] of Object.entries(result)){\n      result_table.push([key, value.name, value.answer])\n    }\n    let csvGenerator = new utils.CsvGenerator(result_table, 'my_csv.csv');\n    csvGenerator.download(true);\n  }\n\n  /*Activate the creation mode*/\n  const activatecreatemode = () => {\n    setCreationMode(1)\n  }\n\n  /*Deactivate the creation mode*/\n  const deactivatecreatemode = () => {\n    setCreationMode(0)\n  }\n\n  /*Activate the credit mode*/\n  const activatecreditmode = () => {\n    setCreditMode(1)\n  }\n\n  /*Deactivate the creation mode*/\n  const deactivatecreditmode = () => {\n    setCreditMode(0)\n  }\n\n  /*Return the different elements of the navbar*/\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light border-bottom border-light shadow-sm mb-4\">\n      <div className=\"container-fluid\">\n        {/*Navbar Title*/}\n        <a className=\"navbar-brand\" href=\"#\" onClick={deactivatecreditmode}><text className=\"text-custom text-title\">SLS</text></a>\n        {/*Navbar Toggler button*/}\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\"\n                aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        {/*Navbar links*/}\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <div className=\"navbar-nav\">\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\"><text className=\"text-custom\" onClick={deactivatecreditmode}>Page d'accueil</text></a>\n            <a className=\"nav-link\" href=\"#\" onClick={import_csv_result}><text className=\"text-custom\">Importer la checklist</text></a>\n            <a className=\"nav-link\" href=\"#\" onClick={image_download}><text className=\"text-custom\">Importer la signature</text></a>\n            {/*Navbar checklist selection dropdown link*/}\n            <li className=\"nav-item dropdown\">\n              <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\n                 data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                <text className=\"text-custom\">Liste des checklists disponibles</text>\n              </a>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                {checklistList.map(i => (\n                  <li><a className=\"dropdown-item\" href=\"#\" onClick={() => swapchecklist(i.checklist_id)}><text className=\"text-custom\">Checklist n°{i.checklist_id}</text></a></li>\n                ))}\n              </ul>\n            </li>\n            <a className=\"nav-link\" href=\"#\" onClick={activatecreatemode}><text className=\"text-custom\">Activer le mode Création</text></a>\n            <a className=\"nav-link\" href=\"#\" onClick={deactivatecreatemode}><text className=\"text-custom\">Désactiver le mode Création</text></a>\n            <a className=\"nav-link\" href=\"#\" onClick={activatecreditmode}><text className=\"text-custom\">A propos</text></a>\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\n/*Download a data in a file with defined filename*/\nconst downloadImage = function(data, filename) {\n  let a = document.createElement('a');\n  a.href = data;\n  a.download = filename;\n  document.body.appendChild(a);\n  a.click();\n};\n\nexport {AppNavbar}","import SignaturePad from \"react-signature-canvas\";\nimport React from \"react\";\n\n/*Component for the signature pad\n* -sigpad: object representing the signature pad, fill in by the SignaturePad component\n* -setTrimmedCanvasUrl: the canvas url data of the signature set function\n* */\nfunction AppSignature ({props}) {\n\n  let {sigpad, setTrimmedCanvasUrl} = props;\n\n  /*Reinitialize the canvas and sigpad*/\n  const reinit_canvas = () => {\n    sigpad.clear()\n    setTrimmedCanvasUrl(null)\n  }\n\n  /*Import the current sigpad information into canvas url data*/\n  const trim_canvas = () => {\n    var dataUrl = sigpad.getTrimmedCanvas().toDataURL();\n    setTrimmedCanvasUrl(dataUrl);\n  }\n\n  /*Return the signature elements*/\n  return (\n    <div className=\"container mt-5 mx-auto p-0 container-custom\">\n      <div className=\"row align-items-center p-0 m-0 h-100\">\n        {/*Information text*/}\n        <div className=\"col-sm-3 m-0 p-0 text-center\">\n          <div className=\"card card-grey shadow-sm mx-4\" >\n            <div className=\"card-body\">\n              <text className=\"text-custom\">Veuillez rentrer votre signature : </text>\n            </div>\n          </div>\n        </div>\n        {/*Signature pad component, receiving the signature*/}\n        <div className=\"col m-0 p-0 h-100 \">\n          <div className=\"sigContainer\">\n            <SignaturePad canvasProps={{className: \"sigPad\"}}\n              ref={(ref) => { sigpad = ref }} />\n          </div>\n        </div>\n        {/*Validation and Reinitialisation buttons*/}\n        <div className=\"col-md-auto mx-2 p-0\">\n          {/*Button to validate the current signature and put info into data*/}\n          <div className=\"row align-items-center p-0 m-0 w-100 mb-2\">\n            <button type=\"button\" className=\"btn btn-val shadow-sm\">\n              <text className=\"text-custom\" onClick={trim_canvas}>Valider la signature</text>\n            </button>\n          </div>\n          {/*Button to clean the current signature canvas and remove info in data*/}\n          <div className=\" row align-items-center p-0 m-0 h-100\">\n            <button type=\"button\" className=\"btn btn-change shadow-sm\">\n            <text className=\"text-custom\" onClick={reinit_canvas}>Réinitialiser</text>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport {AppSignature}","import BootstrapSelect from \"react-bootstrap-select-dropdown\";\nimport * as utils from \"./utils\";\nimport React, {useState} from \"react\";\nimport {list_possible_answer, list_possible_num_var, list_possible_op, trad_answer, trad_num_var} from \"./utils\";\n\n/* Component for the creation mode box\n* -checklist: current checklist (state variable)\n* -setChecklist: current checklist set function\n* -swapchecklist: function that changes the current checklist\n* -checklistList : list of checklists (state variable)\n* -setChecklistList : list of checklist set function\n* -checklistId : id of the current checklist (state variables)\n* -setChecklistId : id of the current checklist set function\n* -forceUpdate: function that force the reload of component if necessary\n* */\nfunction CreateBox ({props}) {\n\n  let {checklist, setChecklist, swapchecklist, checklistList, setChecklistList, checklistId, setChecklistId, forceUpdate} = props\n\n  /* State variables used only in creation mode\n  * -currentQuestion : the question currently into creation/modification\n  * -currentParentQuestion : the question that is parent of the current question\n  * -currentName : the current name\n  * -tempNums : the numerical condition values (var, op and val) of the current condition the user is going to add\n  * -tempPreChech : the precheck condition values (var, op, val) and then value of the current precheck the user is going to add\n  */\n  let [currentQuestion, setCurrentQuestion] = useState(checklist.values[0])\n  let [currentParentQuestion, setCurrentParentQuestion] = useState(checklist)\n  let [currentName, setCurrentName] = useState(checklist.values[0].name)\n  let [currentComment, setCurrentComment] = useState(checklist.comment ? checklist.comment : null)\n\n  let [tempNums, setTempNums] = useState({})\n  let [tempPreCheck, setTempPreCheck] = useState({})\n\n\n  console.log(\"main\", currentQuestion)\n\n  /* Make the complete list of questions of the current checklist*/\n  let questionList = [];\n  function enumquestions (item){\n    if (item.id > 0)\n      questionList.push(item.id)\n    for (const value of item.values){\n      enumquestions(value)\n    }\n  }\n  enumquestions(checklist)\n\n  /*Create a list, usable by the select component, of the possible answer*/\n  let possible_answers = []\n  function construct_possible_answers (){\n    possible_answers = []\n    list_possible_answer.forEach(function(answer){\n      possible_answers.push({\"labelKey\": answer, \"value\": trad_answer(answer), \"isSelected\":currentQuestion.check.includes(answer)})\n    })\n  }\n  construct_possible_answers()\n\n  /*Create a list, usable by the select component, of the possible variables of conditions*/\n  let possible_vars = []\n  function construct_possible_vars (){\n    possible_vars = []\n    list_possible_num_var.forEach(function(num_var){\n      possible_vars.push({\"labelKey\": num_var, \"value\": trad_num_var(num_var)})\n    })\n  }\n  construct_possible_vars()\n\n  /*Create a list, usable by the select component, of the possible operators of conditions*/\n  let possible_op = []\n  function construct_possible_op (){\n    possible_op = []\n    list_possible_op.forEach(function(op){\n      possible_op.push({\"labelKey\": op, \"value\": op})\n    })\n  }\n  construct_possible_op()\n\n  /*Create a list, usable by the select component, of the possible answers of this question*/\n  let possible_pre_check = []\n  function construct_possible_pre_check (){\n    possible_pre_check = []\n    currentQuestion.check.forEach(function(pre_check){\n      possible_pre_check.push({\"labelKey\": pre_check, \"value\": trad_answer(pre_check)})\n    })\n  }\n  construct_possible_pre_check()\n\n\n  /*Set state variables*/\n  function set_elements () {\n    setCurrentQuestion(currentQuestion)\n    setCurrentParentQuestion(currentParentQuestion)\n    setChecklist(checklist)\n    setChecklistList(checklistList)\n  }\n\n  /*Reinitialize the current question, which means taking the first question of the current checklist as current question*/\n  function reinit_current_question (checklist) {\n    setCurrentQuestion(checklist.values[0])\n    setCurrentParentQuestion(checklist)\n    setCurrentName(checklist.values[0].name)\n  }\n\n  /*Search for a question (with id) in item and his children, knowing that parent_item is the parent of item. When found, set\n  * the current question to this question (and so for the parent and name)*/\n  function searchquestion (item, parent_item, id) {\n    if (item.id === id){\n      console.log(\"found\", item)\n      currentQuestion = item\n      currentParentQuestion = parent_item\n      setCurrentQuestion(currentQuestion)\n      setCurrentParentQuestion(currentParentQuestion)\n      setCurrentName(currentQuestion.name)\n      setTempNums({})\n    }\n    for (const value of item.values){\n      searchquestion(value,item,id);\n    }\n  }\n\n  /*Remove the current question (by removing the question from children of his parent),\n  * and reset to a new current queston\n  */\n  function removequestion (){\n    currentParentQuestion.values = currentParentQuestion.values.filter(e => e.id !== currentQuestion.id)\n    set_elements()\n    reinit_current_question(checklist)\n  }\n\n  /*Add a new question to the checklist. For now we put it as the last children of the checklist item\n  * (the last question at first level of the tree ) and we put basic elements inside\n  */\n  function addnewquestion (){\n    let last_id = questionList[questionList.length-1]\n    let new_empty_question =\n      {\n        id: last_id+1,\n        name : \"Nom vide\",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\", \"no\"],\n        values: [],\n      }\n    checklist.values.push(new_empty_question)\n    set_elements()\n    searchquestion(checklist, null, last_id+1)\n  }\n\n  /*Move the current question to another position (the last child of the question with id), we reset the cond for now */\n  function movecurrentquestion (id){\n    let currentQuestionCopy = {...currentQuestion}\n    currentQuestionCopy.cond = {\"yes\":[id], \"no\":[], num:[]}\n    removequestion()\n    searchquestion(checklist, null, id)\n    currentQuestion.values.push(currentQuestionCopy)\n    set_elements()\n    searchquestion(checklist, null, currentQuestionCopy.id)\n    forceUpdate()\n  }\n\n  /*Change the position of the current question, between it siblings*/\n  function changepositionquestion (new_position){\n     let currentQuestionCopy = {...currentQuestion}\n     removequestion()\n    searchquestion(checklist, null, currentParentQuestion.id)\n    currentQuestion.values.splice(new_position,0,currentQuestionCopy)\n    set_elements()\n    searchquestion(checklist, null, currentQuestionCopy.id)\n    forceUpdate()\n  }\n\n  /*Modify the current name*/\n  const modifyname = (event) => {\n    currentName = event.target.value\n    setCurrentName(currentName)\n  }\n\n  /*Update the current question name*/\n  const updatename = () => {\n    currentQuestion.name = currentName\n    set_elements()\n  }\n\n    /*Modify the current name*/\n  const modifycomment = (event) => {\n    currentComment = event.target.value\n    setCurrentComment(currentComment)\n  }\n\n  /*Update the current question name*/\n  const updatecomment = () => {\n    if (currentComment)\n      currentQuestion.comment = currentComment\n    else\n      delete currentQuestion.comment\n    set_elements()\n  }\n\n  /*Change the check array of the current question, containing the possible answers*/\n  const changecheck = (selectedOptions) => {\n    if (selectedOptions.selectedKey.length){\n      currentQuestion.check = selectedOptions.selectedKey\n      setCurrentQuestion(currentQuestion)\n    }\n  }\n\n  /*Add a checklist (with basic content) to the list of checklist, and switch to this checklist*/\n  const addchecklist = () => {\n    const n_checklist = checklistList[checklistList.length-1].checklist_id+1\n    let new_empty_checklist =\n      {\n        checklist_id: n_checklist,\n        id: -1,\n        num_values: [],\n        values: [\n          {\n            id: 1,\n            name : \"Vide\",\n            check : [\"yes\",\"no\"],\n            cond: {\"yes\":[], \"no\":[], num:[]},\n            values: []\n          }\n        ],\n      }\n    checklistList.push(new_empty_checklist)\n    setChecklistList(checklistList)\n    swapchecklist_creation_mode(n_checklist)\n  }\n\n  /*Remove the current checklist from the list of checklist and take the first checklist still available as current checklist*/\n  const removechecklist = () => {\n    console.log(checklistList, checklistId)\n    checklistList = checklistList.filter(e => e.checklist_id !== checklistId)\n    console.log(checklistList)\n    setChecklistId(checklistList[0].checklist_id)\n    checklist = checklistList[0]\n    set_elements()\n    reinit_current_question(checklist)\n  }\n\n  /*Function that swap the current checklist and reinitialize the current question*/\n  const swapchecklist_creation_mode = (checklist_id) =>  {\n    checklist = swapchecklist(checklist_id)\n    reinit_current_question(checklist)\n    forceUpdate()\n  }\n\n  /*Function that add a  question condition (with it answer and id) to current question*/\n  const addcond = (answer, id) => {\n    currentQuestion.cond[answer].push(id)\n    setCurrentQuestion(currentQuestion)\n    set_elements()\n    forceUpdate()\n  }\n\n  /*Function that delete a  question condition (with it answer and id) to current question*/\n  const deletecond = (answer, id) => {\n    currentQuestion.cond[answer] = currentQuestion.cond[answer].filter(elm => elm !== id)\n    console.log(currentQuestion)\n    setCurrentQuestion(currentQuestion)\n    set_elements()\n    forceUpdate()\n  }\n\n  /*Function that update the tempNum.var variable with input*/\n  const addtempnumvar = (selectedOptions) => {\n    if (!tempNums){ tempNums = {}}\n    tempNums.var = selectedOptions.selectedKey[0]\n    setTempNums(tempNums)\n    forceUpdate()\n  }\n  /*Function that update the tempNum.op variable with input*/\n  const addtempnumop = (selectedOptions) => {\n    if (!tempNums){ tempNums = {}}\n    tempNums.op = selectedOptions.selectedKey[0]\n    setTempNums(tempNums)\n    forceUpdate()\n  }\n    /*Function that update the tempNum.val variable with input*/\n  const addtempnumval = (event) => {\n    if (!tempNums){ tempNums = {}}\n    tempNums.val = event.target.value\n    setTempNums(tempNums)\n    forceUpdate()\n  }\n\n  /*Function that add a numerical condition (with values contains in tempNum) to currentQuestion*/\n  const addnum = () => {\n    if (tempNums.var && tempNums.op && tempNums.val) {\n      currentQuestion.cond.num.push({var: tempNums.var, op: tempNums.op, val: tempNums.val})\n      setCurrentQuestion(currentQuestion)\n      set_elements()\n      forceUpdate()\n    }\n  }\n\n  /*Function that remove a numerical condition of the currentQuestion*/\n  const removenum = (index) => {\n    console.log(\"supprimer\", index)\n    currentQuestion.cond.num.splice(index,1)\n    console.log(currentQuestion.cond.num)\n    setCurrentQuestion(currentQuestion)\n    set_elements()\n    forceUpdate()\n  }\n\n  /*Function that update the tempPrecheck.var variable with input*/\n  const addtempprecheckvar = (selectedOptions) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck.var = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n  /*Function that update the tempPrecheck.op variable with input*/\n  const addtempprecheckop = (selectedOptions) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck.op = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n  /*Function that update the tempPrecheck.val variable with input*/\n  const addtempprecheckval = (event) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck.val = event.target.value\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n\n    /*Function that update the tempPrecheck.then variable with input*/\n  const addtempprecheckthen = (selectedOptions) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck.then = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n\n  /*Function that add a precheck condition (with values contains in tempPreCheck) and precheck then to currentQuestion*/\n  const addprecheck = () => {\n    if (tempPreCheck.var && tempPreCheck.op && tempPreCheck.val && tempPreCheck.then) {\n      if (!currentQuestion.pre_check)\n        currentQuestion.pre_check = {if:[],then:null}\n      currentQuestion.pre_check.then = tempPreCheck.then\n      currentQuestion.pre_check.if.push({var: tempPreCheck.var, op: tempPreCheck.op, val: tempPreCheck.val})\n      setCurrentQuestion(currentQuestion)\n      set_elements()\n      forceUpdate()\n    }\n  }\n\n  /*Function that remove a precheck condition of the currentQuestion*/\n  const removeprecheck = (index) => {\n    console.log(\"supprimer\", index)\n    currentQuestion.pre_check.if.splice(index,1)\n    if (!currentQuestion.pre_check.if.length)\n      currentQuestion.pre_check = null\n    console.log(currentQuestion.cond.num)\n    setCurrentQuestion(currentQuestion)\n    set_elements()\n    forceUpdate()\n  }\n\n\n  /*Return the create box, with all it elements*/\n  return (\n    <div className=\"container p-2 container-custom border border-2 shadow-sm\">\n\n      {/*Title text*/}\n      <div className=\"card card-grey text-center mb-2 \">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\"><text className=\"text-custom\">Mode Création </text></h5>\n          <p className=\"card-text text-custom m-0\">Vous pouvez ajouter, supprimer, modifier des checklists et des questions ici.</p>\n          <p className=\"card-text text-custom\">La checklist modifiée s'affiche en dessous.</p>\n        </div>\n      </div>\n\n      {/*Question and Checklist selection and show*/}\n      <div className=\"row align-items-center p-0 m-0 pb-2 border-bottom border-\">\n        {/*Checklist selection dropdown*/}\n        <div className=\"col align-items-center \">\n          <div className=\"dropdown text-center\">\n            <button className=\"btn btn-val dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              <text className=\"text-custom\"> Sélectionnez la checklist</text>\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Add a checklist (and select it)*/}\n              <li><a className=\"dropdown-item\" href=\"#\" onClick={function(event){ addchecklist(); forceUpdate()}}><text className=\"text-custom\">Nouvelle checklist</text></a></li>\n              {/*Select an existing checklist*/}\n              {checklistList.map(i => (\n                <li><a className=\"dropdown-item\" href=\"#\" onClick={() => swapchecklist_creation_mode(i.checklist_id)}>\n                  <text className=\"text-custom\">Checklist n°{i.checklist_id}</text></a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        {/*Checklist show*/}\n        <div className=\"col align-items-center p-2\">\n          <div className=\"card card-grey text-center shadow-sm\">\n            <text className=\"text-custom\">Checklist n°{checklistId} </text>\n          </div>\n        </div>\n        {/*Question show*/}\n        <div className=\"col align-items-center p-2\">\n          <div className=\"card card-grey text-center shadow-sm\">\n            <text className=\"text-custom\">Question n°{currentQuestion.id}</text>\n          </div>\n        </div>\n        {/*Checklist selection dropdown*/}\n        <div className=\"col align-items-center \">\n          <div className=\"dropdown text-center\">\n            <button className=\"btn btn-val dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              <text className=\"text-custom \"> Sélectionnez la question</text>\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Add a question (and select it)*/}\n              <li><a className=\"dropdown-item\" href=\"#\" onClick={function(event){ addnewquestion(); forceUpdate()}}><text className=\"text-custom\">Nouvelle question</text></a></li>\n              {/*Select an existing checklist*/}\n              {questionList.map(i => (\n                <li><a className=\"dropdown-item\" href=\"#\" onClick={function(){searchquestion(checklist, null, i)}}>\n                  <text className=\"text-custom\">Question n°{i}</text></a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {/*Question Name selection*/}\n      <div className=\"row align-items-center p-2 m-0 border-bottom\">\n        {/*Information text*/}\n        <div className=\"col-sm-4 align-items-center \">\n          <text className=\"text-custom\"> Nom de la question : </text>\n        </div>\n        {/*Question name text input */}\n        <div className=\"col-sm-4 align-items-center\">\n          <input className=\"card w-100 text-custom\" type = \"text \" aria-label=\"text input\" value={currentName} onChange={modifyname}/>\n        </div>\n        {/*Question name validation button*/}\n        <div className=\"col-sm-4 align-items-center p-0 text-center\">\n          <button className=\"btn btn-change\" >\n            <text className=\"text-custom\" onClick={function(event){ updatename(); forceUpdate()}}>Valider le nom</text>\n          </button>\n        </div>\n      </div>\n\n      {/*Question Comment selection*/}\n      <div className=\"row align-items-center p-2 m-0 border-bottom\">\n        {/*Information text*/}\n        <div className=\"col-sm-4 align-items-center \">\n          <text className=\"text-custom\"> Commentaire (optionnel) de la question : </text>\n        </div>\n        {/*Question comment text input */}\n        <div className=\"col-sm-4 align-items-center\">\n          <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"2\" value={currentComment} onChange={modifycomment}/>\n        </div>\n        {/*Question comment validation button*/}\n        <div className=\"col-sm-4 align-items-center p-0 text-center\">\n          <button className=\"btn btn-change\" onClick={function(event){ updatecomment(); forceUpdate()}}>\n            <text className=\"text-custom\" >Valider le commentaire</text>\n          </button>\n        </div>\n      </div>\n\n      {/*Question Position (at which question the current question must be put as last child ?)*/}\n      <div className=\"row align-items-center p-2 m-0 border-bottom\">\n        {/*Information text*/}\n        <div className=\"col-sm-4 align-items-center\">\n          <text className=\"text-custom\">Souhaitez vous placer la question à la suite d'une autre ? : </text>\n        </div>\n        <div className=\"col-sm-4 align-items-center\">\n        </div>\n        {/*Other question as parent selection dropdown*/}\n        <div className=\"col-sm-4 align-items-center p-0 text-center\">\n          <div className=\"dropdown text-center\">\n            <button className=\"btn btn-change dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              <text className=\"text-custom\"> A la suite de quelle question ?</text>\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Put the question at top level*/}\n              <li><a className=\"dropdown-item\" href=\"#\" onClick={() => movecurrentquestion(-1)}>\n                  <text className=\"text-custom\">Aucune</text></a>\n                </li>\n              {/*Put the question at child of another question*/}\n              {questionList.map(i => (\n                <li><a className=\"dropdown-item\" href=\"#\" onClick={() => movecurrentquestion(i)}>\n                  <text className=\"text-custom\">Question n°{i}</text></a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {/*Question position (between it siblings)*/}\n      <div className=\"row align-items-center p-2 m-0 border-bottom\">\n        {/*Information text*/}\n        <div className=\"col-sm-4 align-items-center\">\n          <text className=\"text-custom\">Sélectionnez la position de la question : </text>\n        </div>\n        <div className=\"col-sm-4 align-items-center\">\n        </div>\n        {/*Position of question selection dropdown*/}\n        <div className=\"col-sm-4 align-items-center p-0 text-center\">\n          <div className=\"dropdown text-center\">\n            <button className=\"btn btn-change dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              <text className=\"text-custom\"> Quelle position ?</text>\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Put the question at this position*/}\n              {currentParentQuestion.values.map((value, index) => (\n                <li><a className=\"dropdown-item\" href=\"#\" onClick={() => changepositionquestion(index)}>\n                  <text className=\"text-custom\">Question n°{value.id}</text></a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {/*(Multi)selection of answers of the current question*/}\n      <div className=\"row align-items-center p-2 m-0 border-bottom\">\n        {/*Information text*/}\n        <div className=\"col-sm-4 align-items-center\">\n          <text className=\"text-custom\">Quelles réponses possibles ? : </text>\n        </div>\n        <div className=\"col-sm-4 align-items-center\">\n        </div>\n        {/*(Multi)Selection dropdown\n        -> For now, the only solution i found to have the dropdown reset correctly when question switch is have one separate dropdown for each question, but only one shown\n        -> clearly not optimal (but big problem when doing the simple way : the current selection of answers is not reset when question switch and component update -> very annoying*/}\n        <div className=\"col-sm-4 align-items-center p-0 text-center\">\n          {questionList.map(elm => (\n            elm === currentQuestion.id ? <BootstrapSelect options={possible_answers} isMultiSelect={true} placeholder=\"Aucune\" onChange={changecheck} onClose={forceUpdate}/>: null\n          ))}\n          {/*Simple way*/}\n          {/*<BootstrapSelect options={possible_options} isMultiSelect={true} placeholder=\"Aucune\" onChange={changecheck} onClose={forceUpdate}/>*/}\n        </div>\n      </div>\n\n      {/*Question conditions of the current question (optional part, so it needs to be collapsable)*/}\n      <div className=\"border-bottom m-0 p-0 text-center\">\n        <button className=\"btn btn-change m-auto p-2 my-2\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseQuestionConditions\"\n                aria-expanded=\"false\" aria-controls=\"collapseExample\">\n          <text className=\"text-custom\"> <i className=\"fas fa-caret-down\"/>Ajouter/Supprimer des conditions sur les autres questions <i className=\"fas fa-caret-down\"/> </text>\n        </button>\n        <div className=\"collapse m-0 p-0\" id=\"collapseQuestionConditions\">\n          <div className=\"row align-items-center p-2 m-0\">\n            <div className=\"col-sm-3 align-items-center\">\n              <text className=\"text-custom\">Quelles conditions sur les réponses ? : </text>\n            </div>\n            <div className=\"col-sm-9 align-items-center\">\n              {utils.list_possible_answer.map(answer => (\n                <div className=\"row\">\n                  <div className=\"col align-items-center p-2 my-auto\">\n                    <div className=\"card card-grey text-center shadow-sm m-0 \">\n                      <text className=\"text-custom\">{trad_answer(answer)}</text>\n                    </div>\n                  </div>\n                  <div className=\"col align-items-center p-2\">\n                    <div className=\"input-group m-0\">\n                      {/*For each possible answer, if in item.check, we put a checkbox*/}\n                      {currentQuestion.cond[answer] ? currentQuestion.cond[answer].map( id => (\n                        <div className=\"input-group-prepend\">\n                          <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => deletecond(answer, id)} ><text className=\"text-custom\">{id}</text> </button>\n                        </div>\n                      )): null}\n                    </div>\n\n                  </div>\n                  <div className=\"col align-items-center p-2\">\n                    <div className=\"dropdown text-center\">\n                      <button className=\"btn btn-change dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\"\n                              data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        <text className=\"text-custom\"> Quelle question ?</text>\n                      </button>\n                      <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                        {questionList.map((id, index) => (\n                          <li><a className=\"dropdown-item\" href=\"#\" onClick={() => addcond(answer, id)}>\n                            <text className=\"text-custom\">Question n°{id}</text></a>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/*Numerical conditions of the current question*/}\n      <div className=\"border-bottom m-0 p-0 text-center\">\n        <button className=\"btn btn-change m-auto p-2 my-2\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseNumConditions\"\n                aria-expanded=\"false\" aria-controls=\"collapseExample\">\n          <text className=\"text-custom\"><i className=\"fas fa-caret-down\"/> Ajouter/Supprimer des conditions numériques <i className=\"fas fa-caret-down\"/> </text>\n        </button>\n        <div className=\"collapse m-0 p-0\" id=\"collapseNumConditions\">\n          <div className=\"col align-items-center p-2 m-0 border-bottom\">\n            {/*Current Numerical condition list display*/}\n            {currentQuestion.cond.num ? currentQuestion.cond.num.map( (num, index) => (\n              <div className=\"row justify-content-md-center py-2\">\n                <div className=\"col-sm-2 align-items-center my-auto\">\n                  <div className=\"card card-grey shadow-sm text-center\">\n                    <text className=\"text-custom\">{trad_num_var(num.var)}</text>\n                  </div>\n                </div>\n                <div className=\"col-sm-2 align-items-center my-auto \">\n                  <div className=\"card card-grey shadow-sm text-center\">\n                    <text className=\"text-custom\">{num.op}</text>\n                  </div>\n                </div>\n                <div className=\"col-sm-2 align-items-center my-auto \">\n                  <div className=\"card card-grey shadow-sm text-center\">\n                    <text className=\"text-custom\">{num.val}</text>\n                  </div>\n                </div>\n                <div className=\"col-sm-2 align-items-center my-auto text-center\">\n                  <button className=\"btn btn-delete\" onClick={() => removenum(index)} >\n                    <div className=\"text-custom\" ><i className=\"fas fa-trash\"/></div>\n                  </button>\n                </div>\n              </div>\n            )): null}\n            {/*Add numerical condition section */}\n            <div>\n              {/*Same problem than with other (multi) bootstrap select, must see if another solution. If we switch between checklist 0 question 1 and checklist 1 question 1, problem stay*/}\n              {questionList.map(elm => (\n                elm === currentQuestion.id ? (\n                  <div className=\"row justify-content-md-center py-2\">\n                    <div className=\"col-sm-2 align-items-center \">\n                      <BootstrapSelect className=\"w-100 text-custom\" selectStyle=\"btn btn-light border\" placeholder=\"Quelle variable ?\" options={possible_vars} onChange={addtempnumvar}/>\n                    </div>\n                    <div className=\"col-sm-2 align-items-center \">\n                      <BootstrapSelect className=\"w-100 text-custom\" selectStyle=\"btn btn-light border\" placeholder=\"Quel opérateur ?\" options={possible_op} onChange={addtempnumop}/>\n                    </div>\n                    <div className=\"col-sm-2 align-items-center \">\n                      <input type=\"number\" className=\"form-control text-custom\" placeholder=\"Quelle valeur ?\" onChange={addtempnumval}/>\n                    </div>\n                    <div className=\"col-sm-2 align-items-center text-center\">\n                      <button className=\"btn btn-change w-100 \" onClick={() => addnum()} >\n                        <div className=\"text-custom\" >Valider</div>\n                      </button>\n                    </div>\n                  </div>)\n                  : null ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/*Precheck conditions of the current question*/}\n      <div className=\"border-bottom m-0 p-0 text-center\">\n        <button className=\"btn btn-change m-auto p-2 my-2\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapsePreCheck\"\n                aria-expanded=\"false\" aria-controls=\"collapseExample\">\n          <text className=\"text-custom\"><i className=\"fas fa-caret-down\"/> Ajouter/Supprimer des conditions pour que la question soit pré-checkée<i className=\"fas fa-caret-down\"/> </text>\n        </button>\n        <div className=\"collapse m-0 p-0\" id=\"collapsePreCheck\">\n          <div className=\"col align-items-center p-2 m-0 border-bottom\">\n            {/*Current PreCheck condition list (and then value) display*/}\n            {currentQuestion.pre_check ? currentQuestion.pre_check.if.map( (pre_check, index) => (\n              <div className=\"row justify-content-md-center py-2\">\n                <div className=\"col-sm-2 align-items-center my-auto\">\n                  <div className=\"card card-grey shadow-sm text-center\">\n                    <text className=\"text-custom\">{trad_num_var(pre_check.var)}</text>\n                  </div>\n                </div>\n                <div className=\"col-sm-2 align-items-center my-auto \">\n                  <div className=\"card card-grey shadow-sm text-center\">\n                    <text className=\"text-custom\">{pre_check.op}</text>\n                  </div>\n                </div>\n                <div className=\"col-sm-2 align-items-center my-auto \">\n                  <div className=\"card card-grey shadow-sm text-center\">\n                    <text className=\"text-custom\">{pre_check.val}</text>\n                  </div>\n                </div>\n                <div className=\"col-sm-2 align-items-center my-auto text-center\">\n                  <button className=\"btn btn-delete\" onClick={() => removeprecheck(index)} >\n                    <div className=\"text-custom\" ><i className=\"fas fa-trash\"/></div>\n                  </button>\n                </div>\n              </div>\n            )): null}\n            {currentQuestion.pre_check ? (\n              <div className=\"row justify-content-md-center py-2\">\n                <div className=\"col-sm-2 align-items-center my-auto \">\n                  <div className=\"card card-grey shadow-sm text-center\">\n                    <text className=\"text-custom\">{trad_answer(currentQuestion.pre_check.then)}</text>\n                  </div>\n                </div>\n              </div>\n            ): null}\n\n\n            {/*Add PreCheck condition and then value section*/}\n            <div>\n              {/*Same problem than with other (multi) bootstrap select, must see if another solution. If we switch between checklist 0 question 1 and checklist 1 question 1, problem stay*/}\n              {questionList.map(elm => (\n                elm === currentQuestion.id ? (\n                  <div>\n                    <div className=\"row justify-content-md-center py-2\">\n                      <div className=\"col-sm-2 align-items-center \">\n                        <BootstrapSelect className=\"w-100 text-custom\" selectStyle=\"btn btn-light border\" placeholder=\"Quelle variable ?\" options={possible_vars} onChange={addtempprecheckvar}/>\n                      </div>\n                      <div className=\"col-sm-2 align-items-center \">\n                        <BootstrapSelect className=\"w-100 text-custom\" selectStyle=\"btn btn-light border\" placeholder=\"Quel opérateur ?\" options={possible_op} onChange={addtempprecheckop}/>\n                      </div>\n                      <div className=\"col-sm-2 align-items-center \">\n                        <input type=\"number\" className=\"form-control text-custom\" placeholder=\"Quelle valeur ?\" onChange={addtempprecheckval}/>\n                      </div>\n                      <div className=\"col-sm-2 align-items-center text-center\">\n                        <button className=\"btn btn-change w-100 \" onClick={() => addprecheck()} >\n                          <div className=\"text-custom\" >Valider</div>\n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"row justify-content-md-center py-2\">\n                      <div className=\"col-sm-2 align-items-center \">\n                        <BootstrapSelect className=\"w-100 text-custom\" selectStyle=\"btn btn-light border\" placeholder=\"Quel pre-check ?\" options={possible_pre_check} onChange={addtempprecheckthen}/>\n                      </div>\n                    </div>\n                  </div>\n                  )\n                  : null ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      {/*End section of the create box, with remove and import button*/}\n      <div className=\"row align-items-center p-2 m-0\">\n        {/*Button to remove the current checklist*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-change \" >\n            <text className=\"text-custom\" onClick={function(event){ removechecklist(); forceUpdate()}}>Supprimer la checklist</text>\n          </button>\n        </div>\n        {/*Button to import in .json the list of checklist*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-change \" >\n            <text className=\"text-custom\" onClick={() => utils.checklist_to_json(checklistList)}>Sauvegarder la liste de checklists</text>\n          </button>\n        </div>\n        {/*Button to remove the current question*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-change \" >\n            <text className=\"text-custom\" onClick={function(event){ removequestion(); forceUpdate()}}>Supprimer la question</text>\n          </button>\n        </div>\n      </div>\n    </div>\n    )\n}\n\nexport {CreateBox}","import React from \"react\";\n\n/*Component to show the credits of the web app*/\nfunction Credits ({props}) {\n    return (\n    <div className=\"card-inv text-center position-absolute top-50 start-50 translate-middle\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title m-0\"><text className=\"text-custom\">SLS Checklist App</text></h5>\n        <p className=\"card-text text-custom m-0\">v0.5</p>\n        <p className=\"card-text text-custom m-0\">Développé par Théo Stassen</p>\n        <p className=\"card-text text-custom\">theo.stassen@protonmail.com</p>\n      </div>\n    </div>\n  )\n}\n\nexport {Credits}","import React from \"react\";\n\n/*Component for the selection of the current patient\n* -patientList : list of all patients\n* -currentPatient : current patient state variable\n* -setCurrentPatient: current patient set function\n* */\nfunction PatientBox ({props}) {\n\n  let {patientList, currentPatient, setCurrentPatient} = props\n\n  /*Function to change the current patient to the one with patient_id*/\n  const changecurrentpatient = (patient_id) => {\n    const currentPatient = patientList.filter(elm => elm.id === patient_id)[0]\n    setCurrentPatient(currentPatient)\n  }\n\n  /*Return the patient box elements*/\n  return (\n    <div className=\"container p-2 container-custom border border-2 shadow-sm\">\n      <div className=\"row align-items-center p-2 m-0\">\n        {/*Indication text*/}\n        <div className=\"col-sm-4 align-items-center \">\n          <text className=\"text-custom\"> Patient Actuel : </text>\n        </div>\n        {/*Current patient name*/}\n        <div className=\"col-sm-4 align-items-center \">\n          <div className=\"card card-grey text-center shadow-sm\">\n            <text className=\"text-custom\">{currentPatient.name}</text>\n          </div>\n        </div>\n        {/*Current patient selection dropdown*/}\n        <div className=\"col-sm-4 align-items-center \">\n          <div className=\"dropdown text-center\">\n            <button className=\"btn btn-val dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              <text className=\"text-custom\"> Sélectionnez le patient</text>\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {patientList.map(i => (\n                <li><a className=\"dropdown-item\" href=\"#\" onClick={() => changecurrentpatient(i.id)}>\n                  <text className=\"text-custom\">{i.name}</text></a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {PatientBox}","import * as utils from \"./utils\";\nimport React from \"react\";\n\n/* Component representing a checklist item (a question).\n- init_items : the parent node of the checklist, used when we need to clean the questions after a answer modification\n- item : the current item\n- dicts : the different state dicts\n- forceUpdate : function that force the reload of component if necessary\n- values_filter_cond : function that filter the values by keeping only the values that validates all conditions\n* */\nfunction ChecklistItem({init_items, item, dicts, forceUpdate, values_filter_cond , creationMode}) {\n\n  let [isDict, setIsDict, numDict, result, setResult, isPreCheckDone, setIsPreCheckDone] = dicts\n\n  /* Function triggered when the user click on one answer, we update the isDict and results and clean (remove from isDict and results) questions\n  * that must not be visible anymore, because of there cond's */\n  const handleOnChangeIs = (answer) => {\n    const is_check = !isDict[answer][item.id]\n    const list_other_answer = utils.list_possible_answer.filter(elm => elm !== answer)\n\n    // If is_check = true, it means that the state of the answer uncheck -> check,\n    // so we add in result and clean questions that depends of this item being with another answer (as it is not the case anymore)\n    if (is_check){\n      result[item.id]={name:item.name,answer:answer}\n\n      clean_children_rec(init_items, init_items, item.id,isDict, setIsDict, result, list_other_answer)\n    }\n    // If is_check = false, it means that the state of the answer check -> uncheck,\n    // so we remove in result and clean questions that depends of this item being with this answer (as it is not the case anymore)\n    else{\n      delete result[item.id]\n      clean_children_rec(init_items, init_items, item.id, isDict, setIsDict, result, [answer])\n    }\n    setResult(result)\n    isDict[answer][item.id] = is_check\n    list_other_answer.forEach(function(elm){isDict[elm][item.id]= false})\n    setIsDict(isDict)\n  }\n\n  /*Function triggered where the user enter a text in a text question. We update the result*/\n  const handleOnChangeText = (event) => {\n    const input_text = event.target.value;\n    result[item.id]={name:item.name,answer:input_text}\n    setResult(result)\n  };\n\n  /* If the item as pre check conditions and his precheck as not already been made,\n  * we check the condition in 'pre_check.if' and if it passes, we do as if the 'pre_check.then' answer was clicked\n  */\n  if(item.pre_check && !isPreCheckDone.includes(item.id)){\n    if (item.pre_check.if.every(function (item){ return utils.simple_operation(numDict[item.var],item.op, item.val);})){\n      handleOnChangeIs(item.pre_check.then); isPreCheckDone.push(item.id); setIsPreCheckDone(isPreCheckDone);\n    }\n  }\n\n  /* Filter (check of the cond's) of the item values (children) */\n  let children = null;\n  let values = null;\n  if (item.values)\n    values = values_filter_cond(item.values, isDict, numDict, creationMode)\n\n  /*We create the children components of the current item*/\n  if (values && values.length) {\n    children = (\n      <ul className=\"mb-0\">\n        {values.map(i => (\n          <ChecklistItem init_items={init_items} item={i} dicts={dicts} forceUpdate = {forceUpdate} values_filter_cond={values_filter_cond}/>\n        ))}\n      </ul>\n    );\n  }\n\n  /*We return the different elements of the current item, and also his children*/\n  return (\n    <div className=\"container m-0 mt-3 p-0 mx-auto\">\n      {/*Current Item*/}\n      <div className=\"row align-items-center m-0 p-0\">\n\n        {/*Item Id*/}\n        <div className=\"col-sm-1 m-0 p-0 w-auto\">\n          <div className=\"card card-grey text-center w-100 shadow-sm\" >\n            <div className=\"card-body\">\n              <text>{item.id}</text>\n            </div>\n          </div>\n        </div>\n\n        {/*Item body*/}\n        <div className=\"col m-0 p-0 \">\n          {/*Item comment (above the item name)*/}\n          {item.comment ? (\n            <div className=\"alert alert-info m-0 mt-0 align- shadow-sm\" role=\"alert\">\n              <p className=\"mb-0\"> <text className=\"text-custom\">{item.comment}</text> </p>\n            </div>\n            ) : null\n          }\n          {/*Item name*/}\n          <div className=\"card w-100 shadow-sm\" >\n            <div className=\"card-body\">\n              <text className=\"text-custom\">{item.name}</text>\n            </div>\n          </div>\n        </div>\n\n        {/*Item answers (if any, if not empty col)*/}\n        {item.check.length ? (\n        <div className=\"col-md-auto\">\n          <div className=\"input-group \">\n            {/*For each possible answer, if in item.check, we put a checkbox*/}\n            {utils.list_possible_answer.map(answer => (\n              item.check.includes(answer) ? (\n              <div className=\"input-group-prepend \">\n                <div className=\"input-group-text shadow\">\n                  <text className=\"text-custom\">\n                    <input type=\"checkbox\"\n                           aria-label=\"Checkbox\"\n                           checked={isDict[answer][item.id]}\n                           onChange={function(event){handleOnChangeIs(answer); forceUpdate()}}\n                    />\n                      &nbsp;{utils.trad_answer(answer)}\n                  </text>\n                </div>\n              </div>\n              ) : null\n            ))}\n            {/*If item answers must contain text, put a text input*/}\n            {item.check.includes(\"text\") ? (\n            <div className=\"input-group-prepend\">\n              <div className=\"input-group-text\">\n                  <input type = \"text\"\n                         aria-label=\"text input\"\n                         onChange={handleOnChangeText}\n                  />\n              </div>\n            </div>\n            ) : null }\n          </div>\n        </div>\n        ) : <div className=\"col-sm-8\"> {null} </div>}\n      </div>\n      {/*Children of the current item*/}\n      {children}\n    </div>\n  );\n}\n\n/*Function that clean (remove from isDict and results) questions\n  * that must not be visible anymore, because of there cond's.\n  * -We check the current item, remove if necessary from result and isDict\n  * (id indicating what question has been removed, and answers indicating all the answers possibly removed,\n  * so we need to check if the current item was dependent of one of these answers,\n  * -We call the function recursively on each child of the current item\n  * - If the current item as been removed, we call recursively, s\n  * */\nfunction clean_children_rec(init_item, item, id, isDict, setIsDict, result, answers) {\n  let is_remove = false\n  if(item.cond){\n    answers.forEach(function(answer){\n      if(item.cond[answer] && item.cond[answer].includes(id)){\n        utils.list_possible_answer.forEach(function(elm){isDict[elm][item.id]= false})\n        delete result[item.id]\n        is_remove = true\n      }\n    })\n  }\n\n  if (item.values && item.values.length){\n    item.values.forEach( function (value) {\n      clean_children_rec(init_item, value, id, isDict, setIsDict, result, answers)\n    })\n  }\n  if (id !== item.id && is_remove) {\n        clean_children_rec(init_item, init_item, item.id, isDict, setIsDict, result, answers)\n  }\n}\n\nexport {ChecklistItem}","import React, {useState, useReducer} from \"react\";\nimport \"./App.css\";\nimport  * as temp_data from \"./temporary_data.js\";\nimport * as utils from \"./utils.js\";\nimport {AppNavbar} from \"./navbar.js\";\nimport {AppSignature} from \"./signature.js\"\nimport {CreateBox} from \"./creation_box.js\"\nimport {Credits} from \"./credits.js\"\nimport {PatientBox} from \"./patient_box.js\"\nimport {ChecklistItem} from \"./item.js\"\n\n/*Main Function\n* -Declare all the variables needed in different component\n* -Return a combination of different components (Navbar, CreateBox, Credits, PatientBox, ChecklistItem(s), Signature)\n* */\nexport default function App() {\n\n  /*Function needed (for the moment), to force the components to update because they don't*/\n  const [, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  /*Main state variables :\n  * -checklistId : Id of the current checklist\n  * -checklistList : List containing the different checklists (from backend, will be a database call)\n  * -patientList : List of all the patient (from hospital data, will be a database call)\n  * -checklist : current checklist (the one that is shown) (the structure can be seen in temporary_data.js\n  * -result : dict containing the results of the current checklist check-in\n  * -isPreCheckDone : array containing the id's of the questions for which the precheck as been made\n  * */\n  let [checklistId, setChecklistId] = useState(0)\n  let [checklistList, setChecklistList] = useState(temp_data.checklist_list)\n  let [patientList, setPatientList] = useState(temp_data.patients)\n  let [currentPatient, setCurrentPatient] = useState(patientList[0])\n  let [checklist, setChecklist] = useState(checklistList.filter(e => e.checklist_id === checklistId)[0])\n  let [result, setResult] = useState({})\n  let [isPreCheckDone, setIsPreCheckDone] = useState([])\n\n  /* Other state variables\n  * -creationMode : bool indicates if we are in creation mode\n  * -creditMode : bool indicates if we are in credit mode\n  * -trimmedCanvasUrl : variable containing the canvas url data of the signature\n  * -sigpad : variable containing the signature pad information*/\n  let [creationMode, setCreationMode] = useState(0)\n  let [creditMode, setCreditMode] = useState(0)\n  let [trimmedCanvasUrl, setTrimmedCanvasUrl] = useState(null)\n  let sigpad = {}\n\n  /* Initial set of isDict state variable\n  * -init_dict : dict containing {0:true} for each possible answer (yes, no, etc), defined in utils.js\n  * -isDict : dict containing a dict for each possible response,\n  * containing the questions id's that have this response checked at this moment*/\n  let init_dict = {}\n  utils.list_possible_answer.forEach(function (answer){init_dict[answer]={0:true}})\n  const [isDict, setIsDict] = useState(init_dict)\n\n\n  /* Fill in of numDict, containing all the numerical data (the way current patient info is extracted will be improved)*/\n  let num_values = checklist.num_values\n  let numDict = {}\n  num_values.forEach(function(elm) {numDict[elm.var] = elm.val})\n  numDict[\"yearofbirth\"] = currentPatient.yearofbirth\n  numDict[\"gender\"] = currentPatient.gender\n\n  let dicts = [isDict, setIsDict, numDict, result, setResult,isPreCheckDone, setIsPreCheckDone ]\n\n  /* Filter (check of the cond's) of the checklist  initial values (i.e. the questions at the first level of the tree)*/\n  let values = null\n  if (checklist.values)\n    values = values_filter_cond(checklist.values, isDict, numDict, creationMode)\n\n  /* Function that changes the current checklist to the checklist with checklist_id and resets dicts*/\n  const swapchecklist = (checklist_id) => {\n    setChecklistId(checklist_id);\n    checklist = checklistList.filter(e => e.checklist_id === checklist_id)[0]\n    setChecklist(checklist)\n    setResult({})\n    setIsDict(init_dict)\n    setIsPreCheckDone([])\n    return checklist\n  }\n\n  /* Return the different components, depending of the mode.\n  * We define also the background and a hidden bottom navbar to avoid problems with the background limits\n  */\n  return (\n    <div>\n      <div className=\"bg-color-custom min-vh-100\">\n        {<AppNavbar props = {{setCreationMode, setCreditMode, trimmedCanvasUrl, result, checklistList, swapchecklist}}/>}\n        {!creditMode ? (\n          <div>\n            {creationMode ?\n              <CreateBox props={{checklist, setChecklist, swapchecklist, checklistList, setChecklistList, checklistId, setChecklistId, forceUpdate}} />\n              :\n              <PatientBox props={{patientList, currentPatient, setCurrentPatient}} />\n            }\n            {values ? values.map(i => (\n              <ChecklistItem init_items={checklist} item={i} dicts={dicts} forceUpdate = {forceUpdate} values_filter_cond={values_filter_cond} creationMode={creationMode} />))\n              :\n              null\n            }\n            {!creationMode ? <AppSignature props = {{sigpad, setTrimmedCanvasUrl}}/> : null}\n          </div>\n          )\n          :\n          <Credits props={null}/>\n        }\n      </div>\n      <div>\n        <nav className=\"navbar navbar-hidden\">\n          <a className=\"navbar-brand\" href=\"#\">{null}</a>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\n/* Filter the values by keeping only the values that validates all conditions\n* We check all the response condition of the item\n* (for ex, if item.cond contains {\"yes\": [1,4]}, we check if isDict[\"yes\"] contains 1 and 4 )\n* + all num conditions\n*/\nfunction values_filter_cond(values, isDict, numDict, creationMode) {\n  return values.filter( item=>\n      Object.keys(item.cond).every(\n        function(answer){\n          return (answer === \"num\" || !item.cond[answer] || item.cond[answer].every(\n            function(elm) {return isDict[answer][elm];}\n          ))\n        }\n      )\n      && (creationMode || item.cond.num.every(\n        function(elm) {\n          return !numDict[elm.var] || utils.simple_operation(numDict[elm.var],elm.op, elm.val) }\n      ))\n    )\n}\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}