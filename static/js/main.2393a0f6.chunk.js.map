{"version":3,"sources":["temporary_data.js","utils.js","navbar.js","signature.js","creation_box.js","credits.js","patient_box.js","item.js","section_title.js","validation_button.js","alerts_box.js","title.js","App.js","reportWebVitals.js","index.js"],"names":["checklist_arrays","checklist_list","checklist_id","name","person","patients","lists","lists_trad","alerts","list_possible_answer","list_possible_answer_trad","list_possible_num_var","list_possible_num_var_trad","list_possible_op","trad_answer","answer","trad_num_var","num_var","simple_operation","val1","string_op","val2","CsvGenerator","dataArray","fileName","separator","addQuotes","this","getDownloadLink","type","data","map","row","rowData","join","length","btoa","encodeURIComponent","downloadLink","getLinkElement","linkText","linkElement","a","document","createElement","innerHTML","href","download","removeAfterDownload","style","display","body","appendChild","click","removeChild","checklist_tree_to_flat","checklist_tree","checklist_array","checklist_tree_to_flat_rec","console","log","checklist","dataStr","JSON","stringify","b","remove","checklist_to_json","item","array","parent_id","position","id","cond","push","comment","section_title","check","color","pre_check","i","values","checklist_flat_to_tree","checklist_flat_to_tree_rec","num_values","child_array","filter","elm","sort","new_item","parse","AppNavbar","props","setCreationMode","setCreditMode","trimmedCanvasUrl","checklistList","swapchecklist","import_csv_result","reset","forceUpdate","deactivatecreditmode","result","className","onClick","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-current","downloadImage","role","aria-labelledby","index","filename","AppSignature","sigpad","setTrimmedCanvasUrl","canvasProps","ref","dataUrl","getTrimmedCanvas","toDataURL","clear","CreateBox","setChecklist","checklistId","setChecklistList","setChecklistId","currentQuestion","setResult","setIsDict","init_dict","setIsPreCheckDone","setCurrentQuestion","useState","currentParentQuestion","setCurrentParentQuestion","currentName","setCurrentName","currentComment","setCurrentComment","currentSectionTitle","setCurrentSectionTitle","tempNums","setTempNums","then","tempPreCheck","setTempPreCheck","pairIndicator","setPairIndicator","isAltAnswers","setIsAltAnswers","questionList","enumquestions","possible_answers","possible_answers_single","alt_possible_answers","forEach","includes","possible_vars","possible_vars_extended","question","possible_op","op","possible_pre_check","possible_lists","searchquestion","parent_item","current_question","removequestion","e","reinit_current_question","check_id","every","value","movecurrentquestion_child","currentQuestionCopy","num","splice","Object","keys","temp","changecheck","selectedOptions","selectedKey","current_colors","concat","Array","fill","switchpairindicator","addtempnumval","event","var","val","target","addtempprecheckval","axios","get","response","addchecklist","last_id","new_empty_question","addnewquestion","onChange","rows","chosen_question_position","findIndex","movecurrentquestion_sibling","selectStyle","options","isMultiSelect","placeholder","data-icon","split","utils","color_id","indexOf","changecolor","deletecond","addcond","removenum","if","pre_checks","index1","index2","removeprecheck","Number","isInteger","Credits","PatientBox","patientList","currentPatient","setCurrentPatient","firstname","lastname","patient_id","0","changecurrentpatient","ChecklistItem","init_items","dicts","values_filter_cond","creationMode","currentId","warningId","precheckMode","isDict","numDict","isPreCheckDone","visibleList","isOther","setIsOther","handleOnChangeIs","is_check","list_other_answer","clean_children_rec","elms","some","children","checked","input_text","list_possible_answers","temp_data","create_possible_list_answers","input_answer","selectedValue","init_item","answers","is_remove","SectionTitle","ValidationButton","setWarningId","search_question_not_answered","is_set","visibleListsorted","elm1","elm2","AlertsBox","list_alert","half","Math","ceil","first_half_list","slice","second_half_list","alert","gravity","question_id","info","data-dismiss","Title","App","useReducer","x","useEffect","init_checklist","setVisibleList","creditMode","entries","key","date","Date","getFullYear","date_to_age","init_dict_","current_creation_mode","result_table","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0MAmXMA,G,OAAmB,CACvB,CACE,CACE,OACA,SACA,cACA,aACA,YACA,kBACA,SACA,UACA,UACA,eAEF,CACE,EACA,6BACC,EACD,EACA,KACA,wDACA,8BACA,qBACA,UACA,kFAEF,CACE,EACA,wCACA,EACA,EACA,KACA,KACA,wCACA,eACA,QACA,MAEF,CACE,EACA,4BACA,EACA,EACA,KACA,KACA,+BACA,eACA,QACA,MAEF,CACE,EACA,0BACA,EACA,EACA,KACA,KACA,+BACA,eACA,QACA,MAEF,CACE,EACA,gBACA,EACA,EACA,KACA,KACA,+BACA,KACA,KACA,MAEF,CACE,EACA,eACA,EACA,EACA,KACA,KACA,+BACA,eACA,QACA,MAEF,CACE,EACA,iBACA,EACA,EACA,KACA,KACA,+BACA,eACA,QACA,MAEF,CACE,EACA,mBACA,EACA,EACA,KACA,KACA,+BACA,eACA,QACA,MAEF,CACE,EACA,cACA,EACA,EACA,KACA,KACA,+BACA,eACA,QACA,MAEF,CACE,GACA,gDACC,EACD,EACA,8FACA,uDACA,iIACA,eACA,QACA,MAEF,CACE,GACA,oCACA,GACA,EACA,KACA,KACA,gCACA,WACA,KACA,MAEF,CACE,GACA,sBACA,GACA,EACA,KACA,KACA,gCACA,eACA,QACA,MAEF,CACE,GACA,iBACA,GACA,EACA,KACA,KACA,gCACA,eACA,QACA,MAEF,CACE,GACA,4BACA,GACA,EACA,KACA,KACA,gCACA,eACA,QACA,MAEF,CACE,GACA,gCACA,GACA,EACA,KACA,KACA,gCACA,eACA,QACA,MAEF,CACE,GACA,uCACC,EACD,EACA,KACA,8CACA,8BACA,eACA,QACA,sEAEF,CACE,GACA,sBACA,GACA,EACA,KACA,KACA,gCACA,eACA,QACA,MAEF,CACE,GACA,kCACA,GACA,EACA,KACA,KACA,gCACA,eACA,QACA,MAEF,CACE,GACA,0CACA,GACA,EACA,KACA,KACA,kCACA,eACA,QACA,MAEF,CACE,GACA,6BACA,GACA,EACA,KACA,KACA,gCACA,WACA,KACA,MAEF,CACE,GACA,wCACA,GACA,EACA,KACA,KACA,gCACA,uBACA,QACA,MAEF,CACE,GACA,uEACC,EACD,EACA,iEACA,kDACA,6DACA,KACA,KACA,MAEF,CACE,GACA,uCACA,GACA,EACA,KACA,KACA,qDACA,eACA,QACA,MAEF,CACE,GACA,2CACA,GACA,EACA,KACA,KACA,qDACA,eACA,QACA,MAEF,CACE,GACA,2CACA,GACA,EACA,KACA,KACA,qDACA,eACA,QACA,MAEF,CACE,GACA,8CACA,GACA,EACA,KACA,KACA,qDACA,eACA,QACA,MAEF,CACE,GACA,8BACC,EACD,EACA,0GACA,4CACA,qDACA,kBACA,QACA,MAEF,CACE,GACA,iCACA,GACA,EACA,KACA,KACA,qDACA,kBACA,QACA,MAEF,CACE,GACA,iCACA,GACA,EACA,KACA,KACA,qDACA,kBACA,QACA,MAEF,CACE,GACA,6BACC,EACD,EACA,qHACA,+CACA,sBACA,eACA,QACA,MAEF,CACE,GACA,4BACA,GACA,EACA,KACA,KACA,wBACA,eACA,QACA,wEAEF,CACE,GACA,kCACA,GACA,EACA,KACA,KACA,wBACA,eACA,QACA,MAEF,CACE,GACA,cACA,GACA,EACA,KACA,KACA,wBACA,kBACA,QACA,MAEF,CACE,GACA,yBACA,GACA,EACA,KACA,KACA,gCACA,eACA,QACA,wEAEF,CACE,GACA,mCACA,GACA,EACA,KACA,KACA,wBACA,eACA,QACA,MAEF,CACE,GACA,cACA,GACA,EACA,KACA,KACA,wBACA,kBACA,QACA,MAEF,CACE,GACA,mBACA,GACA,EACA,KACA,KACA,gCACA,eACA,QACA,wEAEF,CACE,GACA,QACA,GACA,EACA,KACA,KACA,wBACA,eACA,QACA,MAEF,CACE,GACA,cACA,GACA,EACA,KACA,KACA,wBACA,kBACA,QACA,MAEF,CACE,GACA,gCACA,GACA,EACA,KACA,KACA,wCACA,WACA,QACA,OAeJ,CACE,CACE,OACA,SACA,cACA,aACA,YACA,kBACA,SACA,UACA,UACA,eAEF,CACE,EACA,6BACC,EACD,EACA,KACA,KACA,8BACA,qBACA,UACA,mFAGJ,CACE,CACE,OACA,SACA,cACA,aACA,YACA,kBACA,SACA,UACA,UACA,eAEF,CACE,EACA,0BACC,EACD,EACA,KACA,KACA,8BACA,eACA,UACA,MAEF,CACE,EACA,kCACC,EACD,EACA,KACA,mEACA,8BACA,eACA,QACA,MAEF,CACE,EACA,uDACC,EACD,EACA,KACA,KACA,8BACA,gBACA,cACA,MAEF,CACE,EACA,aACC,EACD,EACA,KACA,KACA,8BACA,0BACA,QACA,MAEF,CACE,EACA,mCACC,EACD,EACA,KACA,KACA,8BACA,oBACA,UACA,MAEF,CACE,EACA,0CACC,EACD,EACA,KACA,KACA,8BACA,oBACA,UACA,MAEF,CACE,EACA,gDACC,EACD,EACA,KACA,KACA,8BACA,oBACA,UACA,MAEF,CACE,EACA,0FACC,EACD,EACA,KACA,KACA,8BACA,kBACA,QACA,MAEF,CACE,EACA,4CACC,EACD,EACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,wDACC,EACD,EACA,KACA,KACA,8BACA,wBACA,cACA,MAEF,CACE,GACA,yEACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,qCACC,EACD,GACA,KACA,KACA,8BACA,oBACA,QACA,MAEF,CACE,GACA,0BACC,EACD,GACA,KACA,qBACA,8BACA,eACA,QACA,MAEF,CACE,GACA,iCACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,gBACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,qDACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,iCACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,wBACC,EACD,GACA,KACA,wCACA,8BACA,oBACA,UACA,MAEF,CACE,GACA,kBACC,EACD,GACA,KACA,KACA,8BACA,uBACA,UACA,MAEF,CACE,GACA,kBACC,EACD,GACA,KACA,KACA,8BACA,oBACA,UACA,MAEF,CACE,GACA,kBACC,EACD,GACA,KACA,KACA,8BACA,2BACA,QACA,MAEF,CACE,GACA,oCACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,0DACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,mBACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,sCACC,EACD,GACA,KACA,KACA,8BACA,oBACA,UACA,MAEF,CACE,GACA,SACC,EACD,GACA,KACA,sEACA,8BACA,WACA,QACA,OAGJ,CACE,CACE,OACA,SACA,cACA,aACA,YACA,kBACA,SACA,UACA,UACA,eAEF,CACE,EACA,0BACC,EACD,EACA,KACA,KACA,8BACA,eACA,UACA,MAEF,CACE,EACA,kCACC,EACD,EACA,KACA,8CACA,8BACA,eACA,QACA,MAEF,CACE,EACA,uDACC,EACD,EACA,KACA,KACA,8BACA,gBACA,cACA,MAEF,CACE,EACA,mCACC,EACD,EACA,KACA,KACA,8BACA,oBACA,UACA,MAEF,CACE,EACA,yCACC,EACD,EACA,KACA,KACA,8BACA,oBACA,UACA,MAEF,CACE,EACA,gDACC,EACD,EACA,KACA,KACA,8BACA,oBACA,UACA,MAEF,CACE,EACA,2FACC,EACD,EACA,KACA,KACA,8BACA,kBACA,QACA,MAEF,CACE,EACA,kDACC,EACD,EACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,EACA,wDACC,EACD,EACA,KACA,KACA,8BACA,wBACA,YACA,MAEF,CACE,GACA,yEACC,EACD,EACA,KACA,KACA,8BACA,mBACA,UACA,MAEF,CACE,GACA,qCACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,kBACC,EACD,GACA,KACA,KACA,8BACA,oBACA,QACA,MAEF,CACE,GACA,0BACC,EACD,GACA,KACA,qBACA,8BACA,eACA,QACA,MAEF,CACE,GACA,kCACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,gBACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,sDACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,iCACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,wBACC,EACD,GACA,KACA,0CACA,8BACA,oBACA,UACA,MAEF,CACE,GACA,kBACC,EACD,GACA,KACA,KACA,8BACA,uBACA,QACA,MAEF,CACE,GACA,kBACC,EACD,GACA,KACA,KACA,8BACA,oBACA,UACA,MAEF,CACE,GACA,kBACC,EACD,GACA,KACA,KACA,8BACA,2BACA,QACA,MAEF,CACE,GACA,oCACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,0DACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,mBACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,sCACC,EACD,GACA,KACA,KACA,8BACA,oBACA,UACA,MAEF,CACE,GACA,SACC,EACD,GACA,KACA,mDACA,8BACA,WACA,QACA,OAGJ,CACE,CACE,OACA,SACA,cACA,aACA,YACA,kBACA,SACA,UACA,UACA,eAEF,CACE,EACA,6BACC,EACD,EACA,KACA,KACA,8BACA,WACA,UACA,kFAEF,CACE,EACA,YACC,EACD,EACA,KACA,KACA,8BACA,WACA,QACA,MAEF,CACE,EACA,kCACC,EACD,EACA,KACA,mEACA,8BACA,oBACA,UACA,MAEF,CACE,EACA,wCACC,EACD,EACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,EACA,sCACC,EACD,EACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,EACA,wBACC,EACD,EACA,KACA,KACA,8BACA,wBACA,cACA,MAEF,CACE,EACA,6BACC,EACD,EACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,EACA,+DACC,EACD,EACA,KACA,KACA,8BACA,oBACA,UACA,MAEF,CACE,EACA,sCACC,EACD,EACA,KACA,KACA,8BACA,oBACA,UACA,MAEF,CACE,GACA,WACC,EACD,EACA,KACA,KACA,8BACA,WACA,QACA,MAEF,CACE,GACA,+DACC,EACD,GACA,KACA,oBACA,8BACA,eACA,QACA,MAEF,CACE,GACA,iBACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,oBACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,gBACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,6CACC,EACD,GACA,KACA,KACA,8BACA,oBACA,UACA,MAEF,CACE,GACA,oDACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,uGACC,EACD,GACA,KACA,6BACA,8BACA,eACA,QACA,MAEF,CACE,GACA,mKACC,EACD,GACA,KACA,KACA,8BACA,eACA,QACA,MAEF,CACE,GACA,sBACC,EACD,GACA,KACA,qBACA,8BACA,WACA,QACA,MAEF,CACE,GACA,qBACC,EACD,GACA,KACA,KACA,8BACA,WACA,QACA,MAEF,CACE,GACA,yBACC,EACD,GACA,KACA,KACA,8BACA,WACA,QACA,SAKAC,EAAiB,CACrB,CAACC,aAAc,EAAGC,KAAM,cACxB,CAACD,aAAc,EAAGC,KAAM,WACxB,CAACD,aAAc,EAAGC,KAAM,mBAAiBC,OAAQ,2CACjD,CAACF,aAAc,EAAGC,KAAM,qBAAsBC,OAAQ,oCACtD,CAACF,aAAc,EAAGC,KAAM,qCAAgCC,OAAQ,iEAK5DC,EAAW,CACf,CAAC,GAAM,EAAG,SAAY,SAAU,UAAa,WAAY,OAAU,IAAK,YAAe,aAAc,SAAW,OAAQ,qBAAuB,QAC/I,CAAC,GAAM,EAAG,SAAY,WAAY,UAAa,UAA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","file":"static/js/main.2393a0f6.chunk.js","sourcesContent":["/* Data that will be obtain by call to backend\n* */\n\n/*Initial checklist list*/\nconst checklist_trees = [\n  {\n    checklist_id: 0,\n    id: -1,\n    num_values:[],\n    values:[\n      {\n        id: 1,\n        name: \"Intubation Difficile ? \",\n        section_title : \"Vérifications concernant l'intubation difficile\",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\",\"no\",\"idk\"],\n        color : [0,1,2],\n        pre_check : {if:[{var:\"difficult_intubation\",op:\"est\",val:\"vrai\"}],then:\"yes\"},\n        values: [\n          {\n            id: 2,\n            name: \"A confirmer l'incubation difficile\",\n            cond: {\"yes\":[], \"no\": [], \"idk\" : [1], num:[]},\n            check : [\"yes\",\"no\"],\n            color : [1,0],\n            values: []\n          },\n          {\n            id: 3,\n            name: \"2ème Anesthésiste\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            color : [1,0],\n            values: []\n          },\n          {\n            id: 4,\n            name: \"2ème Infirmière\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            color : [0,1],\n            values: []\n          },\n          {\n            id: 5,\n            name: \"Matériel\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [],\n            values: [\n              {\n                id: 6,\n                name: \"Glidescope\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 7,\n                name: \"Laryngoscope\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 8,\n                name: \"Set Trachéo\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                color : [0,1],\n                values: []\n              },\n            ]\n          },\n          {\n            id: 9,\n            name: \"Protocole\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            color : [0,1],\n            values: []\n          },\n        ]\n      },\n      {\n        id: 10,\n        name: \"Est-elle susceptible d'être enceinte ?\",\n        section_title : \"Vérifications concernant une possible grossesse\",\n        comment: \"(Les données patient nous indiquent que la patiente est âgée entre 15 et 60 ans)\",\n        cond: {\"yes\":[], \"no\":[], num:[{var:\"age\",op:\">\",val:15},{var:\"age\",op:\"<\",val:60}, {var:\"gender\",op:\"=\",val:\"F\"}]},\n        check : [\"yes\",\"no\"],\n        color : [0,1],\n        values: [\n          {\n            id: 11,\n            name: \"Arrêt des rêgles depuis ?\",\n            cond: {\"yes\":[10], \"no\":[], num:[]},\n            check : [\"text\"],\n            values: []\n          },\n          {\n            id: 12,\n            name: \"Test disponible ?\",\n            cond: {\"yes\":[10], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            color : [0,1],\n            values: [\n              {\n                id: 13,\n                name: \"Négatif ?\",\n                cond: {\"yes\":[12], \"no\":[], num:[]},\n                check : [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 14,\n                name: \"Faire test maintenant ?\",\n                cond: {\"yes\":[], \"no\":[12], num:[]},\n                check : [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 15,\n                name: \"Postposer l'intervention ?\",\n                cond: {\"yes\":[], \"no\":[12], num:[]},\n                check : [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n            ]\n          },\n        ]\n      },\n      {\n        id: 16,\n        name: \"Le patient est-il diabétique ?\",\n        section_title : \"Vérification concernant le diabète\",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\",\"no\"],\n        color : [0,1],\n        pre_check : {if:[{var:\"diabetic\",op:\"est\",val:\"vrai\"}],then:\"yes\"},\n        values: [\n          {\n            id: 17,\n            name: \"Traitement Oral ?\",\n            cond: {\"yes\":[16], \"no\":[], num:[]},\n            check : [\"yes\", \"no\"],\n            color : [0,1],\n            values: [\n              {\n                id: 18,\n                name: \"Arrêt des médicaments ?\",\n                cond: {\"yes\":[17], \"no\":[], num:[]},\n                check : [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n            ]\n          },\n          {\n            id: 19,\n            name: \"Traitement par piqure à insuline ?\",\n            cond: {\"yes\":[16], \"no\":[17], num:[]},\n            check : [\"yes\", \"no\"],\n            color : [0,1],\n            values: [\n              {\n                id: 20,\n                name: \"Dernière piqure le ? \",\n                cond : {\"yes\":[19], \"no\":[], num:[]},\n                check: [\"text\"],\n                values: []\n              }\n            ]\n          },\n          {\n            id: 21,\n            name: \"Glycémie à l'arrivée HJ ?\",\n            cond: {\"yes\":[16], \"no\":[], num:[]},\n            check : [\"normal\", \"anormal\"],\n            color : [0,1],\n            values: []\n          },\n        ]\n      },\n      {\n        id: 22,\n        name: \"Consentement chirugicaux et anéstésiques de père/mère\",\n        section_title : \"Concernant les consentements parentaux\",\n        comment: \"Enfant de <15 ans, nécessite les consentement des parents\",\n        cond: {\"yes\":[],\"no\":[],num:[{var:\"age\",op:\"<\",val:15}]},\n        check: [],\n        values: [\n          {\n            id: 23,\n            name: \"Consentement chirugical du père\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\"<\",val:15}]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: []\n          },\n          {\n            id: 24,\n            name: \"Consentement chirurgical de la mère\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\"<\",val:15}]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: []\n          },\n          {\n            id: 25,\n            name: \"Consentement anestésique du père\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\"<\",val:15}]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: []\n          },\n          {\n            id: 26,\n            name: \"Consentement anestésique de la mère\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\"<\",val:15}]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: []\n          },\n        ]\n      },\n      {\n        id: 27,\n        name: \"Checks vernis à ongle\",\n        section_title : \"Checks généraux pour anestésie\",\n        comment: \"Ado/Adulte, nécessite vérification du vernis à ongle et des prothèses auditives/dentaires\",\n        cond: {\"yes\":[], num:[{var:\"age\",op:\">\",val:10}]},\n        check: [\"ok\", \"not_ok\"],\n        color : [0,1],\n        values: [\n          {\n            id: 28,\n            name: \"Check Prothèses dentaires\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\">\",val:10}]},\n            check: [\"ok\", \"not_ok\"],\n            color : [0,1],\n            values: []\n          },\n          {\n            id: 29,\n            name: \"Check Prothèses auditives\",\n            cond: {\"yes\":[], num:[{var:\"age\",op:\">\",val:10}]},\n            check: [\"ok\", \"not_ok\"],\n            color : [0,1],\n            values: []\n          },\n        ]\n      },\n      {\n        id: 30,\n        name: \"Maladie transmissible ?\",\n        section_title : \"Vérifications maladadies transmissibles\",\n        comment : \"Si oui, l'information sera considérée dans les checklists suivantes (accueil du bloc, salle de réveil)\",\n        cond: {\"yes\":[], num:[]},\n        check: [\"yes\", \"no\"],\n        color : [0,1],\n        values: [\n          {\n            id: 31,\n            name: \"Par voie aérienne ? \",\n            cond: {\"yes\":[30], num:[]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: [\n              {\n                id: 32,\n                name : \"EPI (Masque FFP2, Visière)\",\n                cond : {\"yes\":[31], num:[]},\n                check: [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 33,\n                name : \"Protocole\",\n                cond : {\"yes\":[31], num:[]},\n                check: [\"ok\", \"not_ok\"],\n                color : [0,1],\n                values: []\n              }\n            ]\n          },\n          {\n            id: 34,\n            name: \"Par voie sanguine ? \",\n            cond: {\"yes\":[30], \"no\":[31], num:[]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: [\n              {\n                id: 35,\n                name : \"EPI (Gants, blouses, lunettes)\",\n                cond : {\"yes\":[34], num:[]},\n                check: [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 36,\n                name : \"Protocole\",\n                cond : {\"yes\":[34], num:[]},\n                check: [\"ok\", \"not_ok\"],\n                color : [0,1],\n                values: []\n              }\n            ]\n          },\n          {\n            id: 37,\n            name: \"Par contact ? \",\n            cond: {\"yes\":[30], \"no\":[31,34], num:[]},\n            check: [\"yes\", \"no\"],\n            color : [0,1],\n            values: [\n              {\n                id: 38,\n                name : \"EPI\",\n                cond : {\"yes\":[37], num:[]},\n                check: [\"yes\", \"no\"],\n                color : [0,1],\n                values: []\n              },\n              {\n                id: 39,\n                name : \"Protocole\",\n                cond : {\"yes\":[37], num:[]},\n                check: [\"ok\", \"not_ok\"],\n                color : [0,1],\n                values: []\n              }\n            ]\n          },\n        ]\n      }\n    ]\n  },\n  {\n    checklist_id: 1,\n    id: -1,\n    num_values:[],\n    values:[\n      {\n        id: 1,\n        name: \"Intubation ? \",\n        cond: {\"yes\": [], \"no\": [], num: []},\n        check: [\"yes\", \"no\", \"?\"],\n        color: [0,1,2],\n        pre_check: {if: [{var: \"difficult_intubation\", op: \"est\", val: \"vrai\"}], then: \"yes\"},\n        values: []\n      },\n      {\n        id: 2,\n        name: \"Test ? \",\n        cond: {\"yes\": [], \"no\": [], num: []},\n        check: [\"yes\", \"no\", \"?\"],\n        color: [0,1,2],\n        values: []\n      }\n    ]\n  }\n];\n\nconst checklist_arrays = [\n  [\n    [\n      '\"id\"',\n      '\"name\"',\n      '\"parent_id\"',\n      '\"position\"',\n      '\"comment\"',\n      '\"section_title\"',\n      '\"cond\"',\n      '\"check\"',\n      '\"color\"',\n      '\"pre_check\"'\n    ],\n    [\n      1,\n      '\"Intubation Difficile ? \"',\n      -1,\n      0,\n      null,\n      '\"Vérifications concernant l\\'intubation difficile\"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"idk\"]',\n      '[0,1,2]',\n      '{\"if\":[[{\"var\":\"difficult_intubation\",\"op\":\"est\",\"val\":\"vrai\"}]],\"then\":\"yes\"}'\n    ],\n    [\n      2,\n      '\"A confirmer l\\'incubation difficile\"',\n      1,\n      0,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"idk\":[1],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[1,0]',\n      null\n    ],\n    [\n      3,\n      '\"2ème Anesthésiste\"',\n      1,\n      1,\n      null,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[1,0]',\n      null\n    ],\n    [\n      4,\n      '\"2ème Infirmière\"',\n      1,\n      2,\n      null,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      5,\n      '\"Matériel\"',\n      1,\n      3,\n      null,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[]',\n      null,\n      null\n    ],\n    [\n      6,\n      '\"Glidescope\"',\n      5,\n      0,\n      null,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      7,\n      '\"Laryngoscope\"',\n      5,\n      1,\n      null,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      8,\n      '\"Set Trachéo\"',\n      5,\n      2,\n      null,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      9,\n      '\"Protocole\"',\n      1,\n      4,\n      null,\n      null,\n      '{\"yes\":[1],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      10,\n      '\"Est-elle susceptible d\\'être enceinte ?\"',\n      -1,\n      1,\n      '\"(Les données patient nous indiquent que la patiente est âgée entre 15 et 60 ans)\"',\n      '\"Vérifications concernant une possible grossesse\"',\n      '{\"yes\":[],\"no\":[],\"num\":[{\"var\":\"age\",\"op\":\">\",\"val\":15},{\"var\":\"age\",\"op\":\"<\",\"val\":60},{\"var\":\"gender\",\"op\":\"=\",\"val\":\"F\"}]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      11,\n      '\"Arrêt des rêgles depuis ?\"',\n      10,\n      0,\n      null,\n      null,\n      '{\"yes\":[10],\"no\":[],\"num\":[]}',\n      '[\"text\"]',\n      null,\n      null\n    ],\n    [\n      12,\n      '\"Test disponible ?\"',\n      10,\n      1,\n      null,\n      null,\n      '{\"yes\":[10],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      13,\n      '\"Négatif ?\"',\n      12,\n      0,\n      null,\n      null,\n      '{\"yes\":[12],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      14,\n      '\"Faire test maintenant ?\"',\n      12,\n      1,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[12],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      15,\n      '\"Postposer l\\'intervention ?\"',\n      12,\n      2,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[12],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      16,\n      '\"Le patient est-il diabétique ?\"',\n      -1,\n      2,\n      null,\n      '\"Vérifications concernant le diabète\"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      '{\"if\":[[{\"var\":\"diabetic\",\"op\":\"est\",\"val\":\"vrai\"}]],\"then\":\"yes\"}'\n    ],\n    [\n      17,\n      '\"Traitement Oral ?\"',\n      16,\n      0,\n      null,\n      null,\n      '{\"yes\":[16],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      18,\n      '\"Arrêt des médicaments ?\"',\n      17,\n      0,\n      null,\n      null,\n      '{\"yes\":[17],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      19,\n      '\"Traitement par piqure à insuline ?\"',\n      16,\n      1,\n      null,\n      null,\n      '{\"yes\":[16],\"no\":[17],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      20,\n      '\"Dernière piqure le ? \"',\n      19,\n      0,\n      null,\n      null,\n      '{\"yes\":[19],\"no\":[],\"num\":[]}',\n      '[\"text\"]',\n      null,\n      null\n    ],\n    [\n      21,\n      '\"Glycémie à l\\'arrivée HJ ?\"',\n      16,\n      2,\n      null,\n      null,\n      '{\"yes\":[16],\"no\":[],\"num\":[]}',\n      '[\"normal\",\"anormal\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      22,\n      '\"Consentement chirugicaux et anéstésiques de père/mère\"',\n      -1,\n      3,\n      '\"Enfant de <15 ans, nécessite les consentement des parents\"',\n      '\"Vérifications concernant les consentements\"',\n      '{\"yes\":[],\"no\":[],\"num\":[{\"var\":\"age\",\"op\":\"<\",\"val\":15}]}',\n      '[]',\n      null,\n      null\n    ],\n    [\n      23,\n      '\"Consentement chirugical du père\"',\n      22,\n      0,\n      null,\n      null,\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\"<\",\"val\":15}]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      24,\n      '\"Consentement chirurgical de la mère\"',\n      22,\n      1,\n      null,\n      null,\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\"<\",\"val\":15}]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      25,\n      '\"Consentement anestésique du père\"',\n      22,\n      2,\n      null,\n      null,\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\"<\",\"val\":15}]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      26,\n      '\"Consentement anestésique de la mère\"',\n      22,\n      3,\n      null,\n      null,\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\"<\",\"val\":15}]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      27,\n      '\"Checks vernis à ongle\"',\n      -1,\n      4,\n      '\"Ado/Adulte, nécessite vérification du vernis à ongle et des prothèses auditives/dentaires\"',\n      '\"Checks généraux pour anestésie\"',\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\">\",\"val\":10}]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      28,\n      '\"Check Prothèses dentaires\"',\n      27,\n      0,\n      null,\n      null,\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\">\",\"val\":10}]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      29,\n      '\"Check Prothèses auditives\"',\n      27,\n      1,\n      null,\n      null,\n      '{\"yes\":[],\"num\":[{\"var\":\"age\",\"op\":\">\",\"val\":10}]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      30,\n      '\"Maladie transmissible ?\"',\n      -1,\n      5,\n      '\"Si oui, l\\'information sera considérée dans les checklists suivantes (accueil du bloc, salle de réveil)\"',\n      '\"Vérifications maladadies transmissibles\"',\n      '{\"yes\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      31,\n      '\"Par voie aérienne ? \"',\n      30,\n      0,\n      null,\n      null,\n      '{\"yes\":[30],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      '{\"if\":[[{\"val\":\"yes\",\"var\":34},{\"val\":\"yes\",\"var\":37}]],\"then\":\"no\"}'\n    ],\n    [\n      32,\n      '\"EPI (Masque FFP2, Visière)\"',\n      31,\n      0,\n      null,\n      null,\n      '{\"yes\":[31],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      33,\n      '\"Protocole\"',\n      31,\n      1,\n      null,\n      null,\n      '{\"yes\":[31],\"num\":[]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      34,\n      '\"Par voie sanguine ? \"',\n      30,\n      1,\n      null,\n      null,\n      '{\"yes\":[30],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      '{\"if\":[[{\"val\":\"yes\",\"var\":31},{\"val\":\"yes\",\"var\":37}]],\"then\":\"no\"}'\n    ],\n    [\n      35,\n      '\"EPI (Gants, blouses, lunettes)\"',\n      34,\n      0,\n      null,\n      null,\n      '{\"yes\":[34],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      36,\n      '\"Protocole\"',\n      34,\n      1,\n      null,\n      null,\n      '{\"yes\":[34],\"num\":[]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      37,\n      '\"Par contact ? \"',\n      30,\n      2,\n      null,\n      null,\n      '{\"yes\":[30],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      '{\"if\":[[{\"var\":31,\"val\":\"yes\"},{\"val\":\"yes\",\"var\":34}]],\"then\":\"no\"}'\n    ],\n    [\n      38,\n      '\"EPI\"',\n      37,\n      0,\n      null,\n      null,\n      '{\"yes\":[37],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      39,\n      '\"Protocole\"',\n      37,\n      1,\n      null,\n      null,\n      '{\"yes\":[37],\"num\":[]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      40,\n      '\"Autre moyen de transmission\"',\n      30,\n      3,\n      null,\n      null,\n      '{\"yes\":[30],\"no\":[31,34,37],\"num\":[]}',\n      '[\"text\"]',\n      '[0,1]',\n      null\n    ],\n    // [\n    //   40,\n    //   '\"Médicament\"',\n    //   -1,\n    //   6,\n    //   null,\n    //   null,\n    //   '{\"yes\":[],\"num\":[]}',\n    //   '[\"list_meds\"]',\n    //   '[]',\n    //   null\n    // ]\n  ],\n  [\n    [\n      '\"id\"',\n      '\"name\"',\n      '\"parent_id\"',\n      '\"position\"',\n      '\"comment\"',\n      '\"section_title\"',\n      '\"cond\"',\n      '\"check\"',\n      '\"color\"',\n      '\"pre_check\"'\n    ],\n    [\n      1,\n      '\"Intubation Difficile ? \"',\n      -1,\n      0,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"idk\"]',\n      '[0,1,2]',\n      '{\"if\":[[{\"var\":\"difficult_intubation\",\"op\":\"est\",\"val\":\"vrai\"}]],\"then\":\"yes\"}'\n    ],\n  ],\n  [\n    [\n      '\"id\"',\n      '\"name\"',\n      '\"parent_id\"',\n      '\"position\"',\n      '\"comment\"',\n      '\"section_title\"',\n      '\"cond\"',\n      '\"check\"',\n      '\"color\"',\n      '\"pre_check\"'\n    ],\n    [\n      1,\n      '\"Intervention urgente\"',\n      -1,\n      0,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[1,0,2]',\n      null\n    ],\n    [\n      2,\n      '\"Dossier infirmier présent\"',\n      -1,\n      1,\n      null,\n      '\"Infirmière de l\\'unité de soin qui prépare le patient\"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      3,\n      '\"Patient (A=conscient, B=inconscient, C=dément)\"',\n      -1,\n      2,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"a\",\"b\",\"c\"]',\n      '[2,2,2,2,2]',\n      null\n    ],\n    [\n      4,\n      '\"Patient\"',\n      -1,\n      3,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"list_patient-states\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      5,\n      '\"Le patient décline son nom\"',\n      -1,\n      4,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      6,\n      '\"Le patient décline son prénom \"',\n      -1,\n      5,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      7,\n      '\"Le patient décline sa date de naissance\"',\n      -1,\n      6,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      8,\n      '\"Vérifier la concordance entre le dossier et le bracelet d\\'identité du patient\"',\n      -1,\n      7,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      9,\n      '\"Consentement du patient/parent <18 ans\"',\n      -1,\n      8,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      10,\n      '\"Le patient décline le côté à opérer\"',\n      -1,\n      9,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"left\",\"right\",\"na\"]',\n      '[2,2,2,2,2]',\n      null\n    ],\n    [\n      11,\n      '\"L\\'infirmière vérifie dans le dossier le type d\\'intervention\"',\n      -1,\n      10,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      12,\n      '\"Maladies transmissibles connues\"',\n      -1,\n      11,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"list_diseases\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      13,\n      '\"Patient(e) à jeun\"',\n      -1,\n      12,\n      null,\n      '\"À vérifier\"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      14,\n      '\"Vernis à ongle ôté\"',\n      -1,\n      13,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      15,\n      '\"A uriné\"',\n      -1,\n      14,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      16,\n      '\"Proth. dentaire/auditives/lentilles ôtées\"',\n      -1,\n      15,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      17,\n      '\"Bijoux/piercings ôtés\"',\n      -1,\n      16,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      18,\n      '\"Médicamenteuses\"',\n      -1,\n      17,\n      null,\n      '\"Le patient déclare ses allergies\"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      19,\n      '\"Lesquelles ?\"',\n      -1,\n      18,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"list_alergy-meds\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      20,\n      '\"Alimentaires\"',\n      -1,\n      19,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      21,\n      '\"Lesquelles ?\"',\n      -1,\n      20,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"list_alergy-aliments\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      22,\n      '\"Hygiène du patient correcte\"',\n      -1,\n      21,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      23,\n      '\"Propreté et intégrité du site opératoire\"',\n      -1,\n      22,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      24,\n      '\"Dépilation\"',\n      -1,\n      23,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      25,\n      '\"Présence de bas de contention\"',\n      -1,\n      24,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      26,\n      '\"Nom\"',\n      -1,\n      25,\n      null,\n      '\"Infirmière de l\\'US qui a préparé le patient pour le BO \"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"text\"]',\n      '[0,1]',\n      null\n    ]\n  ],\n  [\n    [\n      '\"id\"',\n      '\"name\"',\n      '\"parent_id\"',\n      '\"position\"',\n      '\"comment\"',\n      '\"section_title\"',\n      '\"cond\"',\n      '\"check\"',\n      '\"color\"',\n      '\"pre_check\"'\n    ],\n    [\n      1,\n      '\"Intervention Urgente\"',\n      -1,\n      0,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[1,0,2]',\n      null\n    ],\n    [\n      2,\n      '\"Dossier infirmier présent\"',\n      -1,\n      1,\n      null,\n      '\"Infirmière BO qui accueille le patient\"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      3,\n      '\"Patient (A=conscient, B=inconscient, C=dément)\"',\n      -1,\n      2,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"a\",\"b\",\"c\"]',\n      '[2,2,2,2,2]',\n      null\n    ],\n    [\n      4,\n      '\"Le patient décline son nom\"',\n      -1,\n      3,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      5,\n      '\"Le patient décline son prénom\"',\n      -1,\n      4,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      6,\n      '\"Le patient décline sa date de naissance\"',\n      -1,\n      5,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      7,\n      '\"Vérifier la concordance entre le dossier et le bracelet d\\'identité du patient \"',\n      -1,\n      6,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"ok\",\"not_ok\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      8,\n      '\"Consentement du patient/d\\'un parent <18 ans\"',\n      -1,\n      7,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      9,\n      '\"Le patient décline le côté à opérer\"',\n      -1,\n      8,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"left\",\"right\",\"na\"]',\n      '[2,2,2,2]',\n      null\n    ],\n    [\n      10,\n      '\"L\\'infirmière vérifie dans le dossier le type d\\'intervention\"',\n      -1,\n      9,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"ok\", \"not_ok\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      11,\n      '\"Maladies transmissibles connues\"',\n      -1,\n      10,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[1,0]',\n      null\n    ],\n    [\n      12,\n      '\"Lesquelles ?\"',\n      -1,\n      11,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"list_diseases\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      13,\n      '\"Patient(e) à jeun\"',\n      -1,\n      12,\n      null,\n      '\"À vérifier\"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      14,\n      '\"Vernis à ongles ôté\"',\n      -1,\n      13,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      15,\n      '\"A uriné\"',\n      -1,\n      14,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      16,\n      '\"Proth. dentaires/auditives/lentilles ôtées\"',\n      -1,\n      15,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      17,\n      '\"Bijoux/piercings ôtés\"',\n      -1,\n      16,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      18,\n      '\"Médicamenteuses\"',\n      -1,\n      17,\n      null,\n      '\"Le patient déclare ses allergies :\"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[1,0,2]',\n      null\n    ],\n    [\n      19,\n      '\"Lesquelles ?\"',\n      -1,\n      18,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"list_alergy-meds\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      20,\n      '\"Alimentaires\"',\n      -1,\n      19,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[1,0,2]',\n      null\n    ],\n    [\n      21,\n      '\"Lesquelles ?\"',\n      -1,\n      20,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"list_alergy-aliments\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      22,\n      '\"Hygiène du patient correcte\"',\n      -1,\n      21,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      23,\n      '\"Propreté et intégrité du site opératoire\"',\n      -1,\n      22,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      24,\n      '\"Dépilation\"',\n      -1,\n      23,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      25,\n      '\"Présence de bas de contention\"',\n      -1,\n      24,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      26,\n      '\"Nom\"',\n      -1,\n      25,\n      null,\n      '\"Infirmière qui accueille le patient au BO :\"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"text\"]',\n      '[0,1]',\n      null\n    ]\n  ],\n  [\n    [\n      '\"id\"',\n      '\"name\"',\n      '\"parent_id\"',\n      '\"position\"',\n      '\"comment\"',\n      '\"section_title\"',\n      '\"cond\"',\n      '\"check\"',\n      '\"color\"',\n      '\"pre_check\"'\n    ],\n    [\n      1,\n      '\"Date de l\\'intervention\"',\n      -1,\n      0,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"text\"]',\n      '[0,1,2]',\n      '{\"if\":[[{\"var\":\"difficult_intubation\",\"op\":\"est\",\"val\":\"vrai\"}]],\"then\":\"yes\"}'\n    ],\n    [\n      2,\n      '\"Salle \"',\n      -1,\n      1,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"text\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      3,\n      '\"Présentation des perso...\"',\n      -1,\n      2,\n      null,\n      '\"Chirurgien / Inf. circul. / Instrumentaliste / Anesthésiste\"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      4,\n      '\"Vérification identité du....\"',\n      -1,\n      3,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      5,\n      '\"Rappel de l\\'intitulé de l...\"',\n      -1,\n      4,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      6,\n      '\"Site opératoire\"',\n      -1,\n      5,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"left\",\"right\",\"na\"]',\n      '[2,2,2,2,2]',\n      null\n    ],\n    [\n      7,\n      '\"Maladies transmissibles\"',\n      -1,\n      6,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[1,0]',\n      null\n    ],\n    [\n      8,\n      '\"Risque de perte sanguine... Si oui, des poches de sang...\"',\n      -1,\n      7,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[1,0,2]',\n      null\n    ],\n    [\n      9,\n      '\"Vérif. administr. AB Prophyl.\"',\n      -1,\n      8,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[0,1,2]',\n      null\n    ],\n    [\n      10,\n      '\"Heure\"',\n      -1,\n      9,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"text\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      11,\n      '\"Matériel d\\'anesthésie disponible / ordre de marche\"',\n      -1,\n      10,\n      null,\n      '\"Anésthesiste\"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      12,\n      '\"Respirateur\"',\n      -1,\n      11,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      13,\n      '\"Oxym. de pouls\"',\n      -1,\n      12,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      14,\n      '\"Monitoring\"',\n      -1,\n      13,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      15,\n      '\"Difficultés airways et/ou intubation\"',\n      -1,\n      14,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\",\"na\"]',\n      '[1,0,2]',\n      null\n    ],\n    [\n      16,\n      '\"Si oui, glydescope ou équivalent présent\"',\n      -1,\n      15,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      17,\n      '\"Matériel pour l\\'infirmière circulante disponible et en ordre de marche (laryngoscope, ...)\"',\n      -1,\n      16,\n      null,\n      '\"Infirmière circulante\"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      18,\n      '\"La stérilité du matériel disposable et non disposable a été vérifiée (résultats des indicateurs + vérification date péremption)\"',\n      -1,\n      17,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"yes\",\"no\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      19,\n      '\"Induction - Nom \"',\n      -1,\n      18,\n      null,\n      '\"Anesthésistes\"',\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"text\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      20,\n      '\"Réveil - Nom\"',\n      -1,\n      19,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"text\"]',\n      '[0,1]',\n      null\n    ],\n    [\n      21,\n      '\"Si changement - Nom\"',\n      -1,\n      20,\n      null,\n      null,\n      '{\"yes\":[],\"no\":[],\"num\":[]}',\n      '[\"text\"]',\n      '[0,1]',\n      null\n    ]\n  ]\n]\n\nconst checklist_list = [\n  {checklist_id: 0, name: \"Principale\"},\n  {checklist_id: 1, name: \"Seconde\"},\n  {checklist_id: 2, name: \"Unité de soin\", person: \"Inf. de l'US qui prépare le patient \"},\n  {checklist_id: 3, name: \"Accueil Patient BO\", person: \"Inf. BO qui accueille le patient\"},\n  {checklist_id: 4, name: \"Avant Induction Anésthésique\", person: \"Chirurgien/Inf. \\n Circul./Instrumentiste/Anésthésiste\"}\n]\n\n\n/*List of all patients*/\nconst patients = [\n  {\"id\": 0, \"lastname\": \"Dubois\", \"firstname\": \"Germaine\", \"gender\": \"F\", \"dateofbirth\": \"02/11/1940\", \"diabetic\":\"faux\", \"difficult_intubation\":\"vrai\"  },\n  {\"id\": 1, \"lastname\": \"Vandamme\", \"firstname\": \"Gilbert\", \"gender\": \"M\", \"dateofbirth\": \"08/25/1960\", \"diabetic\":\"vrai\", \"difficult_intubation\":\"vrai\" },\n  {\"id\": 2, \"lastname\": \"Perlot\", \"firstname\": \"Claude\", \"gender\": \"M\", \"dateofbirth\": \"12/16/1975\", \"diabetic\":\"faux\", \"difficult_intubation\":\"faux\" },\n  {\"id\": 3, \"lastname\": \"Boulet\", \"firstname\": \"Arnaud\", \"gender\": \"M\", \"dateofbirth\": \"03/17/1981\", \"diabetic\":\"faux\", \"difficult_intubation\":\"faux\" },\n  {\"id\": 4, \"lastname\": \"Charlier\", \"firstname\": \"Emile\", \"gender\": \"M\", \"dateofbirth\": \"09/19/1953\", \"diabetic\":\"faux\", \"difficult_intubation\":\"vrai\" },\n  {\"id\": 5, \"lastname\": \"Nash\", \"firstname\": \"Emilie\", \"gender\": \"F\", \"dateofbirth\": \"03/30/2015\", \"diabetic\":\"vrai\", \"difficult_intubation\":\"vrai\" },\n  {\"id\": 6, \"lastname\": \"Materne\", \"firstname\": \"Marie\", \"gender\": \"F\", \"dateofbirth\": \"08/23/1982\", \"diabetic\":\"faux\", \"difficult_intubation\":\"faux\" },\n  {\"id\": 7, \"lastname\": \"Bernard\", \"firstname\": \"Virginie\", \"gender\": \"F\", \"dateofbirth\": \"06/03/1986\", \"diabetic\":\"faux\", \"difficult_intubation\":\"faux\" },\n  {\"id\": 8, \"lastname\": \"Lemoine\", \"firstname\": \"Karine\", \"gender\": \"F\", \"dateofbirth\": \"01/25/1977\", \"diabetic\":\"vrai\", \"difficult_intubation\":\"vrai\" },\n]\n\nconst lists = {\n  \"meds\": [\"Mc\",\"Lis\",\"Kl\",\"Eft\", \"Aucun\"],\n  \"diseases\": [\"Covid\",\"Grippe\",\"Pneumonie\", \"Aucune\"],\n  \"patient-states\" : [\"Conscient\",\"Inconscient\",\"Dément\"],\n  \"alergy-meds\" : [\"Latex\",\"Peniciline\",\"Insuline\", \"Ibuprofène\", \"Aucune\"],\n  \"alergy-aliments\" : [\"Gluten\",\"Lactose\",\"Arachides\", \"Aucune\"]\n}\n\nconst lists_trad = {\"meds\":\"Médicaments\", \"diseases\":\"Maladies\", \"patient-states\":\"Etats Patients\", \"alergy-meds\":\"Allergies Médicamenteuses\", \"alergy-aliments\":\"Allergies Alimentaires\"}\n\nconst alerts = [\n  {\"id\":0, \"question_id\":1, \"info\": \"Réponse précedente problèmatique\", \"gravity\":0},\n  {\"id\":1, \"question_id\":6, \"info\": \"Réponse précedente positive, mais nécessite recheck\", \"gravity\":1},\n  {\"id\":2, \"question_id\":28, \"info\": \"Réponse précedente positive, mais nécessite recheck\",\"gravity\":1},\n  {\"id\":3, \"question_id\":30, \"info\": \"Réponse précedente problèmatique\",\"gravity\":2}\n]\n\nexport {checklist_trees, checklist_arrays, checklist_list, patients, lists, lists_trad, alerts}","/*Diverse utility elements*/\nimport { Series, DataFrame } from 'pandas-js';\n\n\n\n/*We consider a constant list of all possible answers to a question*/\nconst list_possible_answer = [\"yes\",\"no\",\"idk\",\"ok\",\"not_ok\", \"normal\", \"anormal\",  \"left\", \"right\",\"na\", \"a\", \"b\", \"c\", \"text\", \"list\"]\nconst list_possible_answer_trad = {\"yes\":\"Oui\",\"no\":\"Non\",\"idk\":\"?\",\"ok\":\"OK\",\"not_ok\":\"Non OK\",\n  \"normal\":\"Normal\", \"anormal\":\"Anormal\", \"na\": \"N.A.\", \"left\": \"Gauche\", \"right\": \"Droite\", \"a\":\"A\", \"b\":\"B\", \"c\":\"C\", \"text\":\"Texte\", \"list\":\"Liste\"}\n\nconst list_possible_num_var = [\"diabetic\",\"age\",\"yearofbirth\",\"difficult_intubation\", \"gender\"]\nconst list_possible_num_var_trad = {\"diabetic\":\"Diabétique\",\"age\":\"Âge\",\"yearofbirth\":\"Année de naissance\",\"difficult_intubation\":\"Intubation Difficile\", \"gender\":\"Genre\"}\n\nconst list_possible_op = [\"<\",\">\",\"=\"]\n\n\n/*Function to translate an answer into mountable french version*/\nconst trad_answer = (answer) => {\n  return list_possible_answer_trad[answer]\n}\n\nconst trad_num_var = (num_var) => {\n    return list_possible_num_var_trad[num_var]\n}\n\n/*List of possible options (answers), used in the multiselect component to choose the question answers*/\n\n\n/*Function that make the operation of type \"is val1 op val2 ?' with op the operator in string input*/\nconst simple_operation = (val1, string_op, val2) => {\n  switch (string_op) {\n    case \">\" : return val1 > val2;\n    case \"<\" : return val1 < val2;\n    case \"=\" : return val1 === val2 ;\n    case \"est\" : return val1 === val2;\n    default: return true;\n  }\n}\n\n/*Function that take the list of checklist, transform it in json format and export as .json file*/\nconst checklist_to_json = (checklist) => {\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(checklist, null, '\\t'));\n    console.log(dataStr)\n    var b = document.createElement('a');\n    b.href = dataStr ;\n    b.download = \"checklist.json\";\n    document.body.appendChild(b);\n    b.click();\n    b.remove()\n}\n\n/*Function to take a data array and put in a .csv file, with some characteristics*/\nfunction CsvGenerator(dataArray, fileName, separator, addQuotes) {\n    this.dataArray = dataArray;\n    this.fileName = fileName;\n    this.separator = separator || ';';\n    this.addQuotes = !!addQuotes;\n\n    if (this.addQuotes) {\n        this.separator = '\"' + this.separator + '\"';\n    }\n\n    this.getDownloadLink = function () {\n        var separator = this.separator;\n        var addQuotes = this.addQuotes;\n\n        var rows = this.dataArray.map(function (row) {\n            var rowData = row.join(separator);\n\n            if (rowData.length && addQuotes) {\n                return '\"' + rowData + '\"';\n            }\n\n            return rowData;\n        });\n\n        var type = 'data:text/csv;charset=utf-8';\n        var data = rows.join('\\n');\n\n        if (typeof btoa === 'function') {\n            type += ';base64';\n            data = btoa(data);\n        } else {\n            data = encodeURIComponent(data);\n        }\n\n        return this.downloadLink = this.downloadLink || type + ',' + data;\n    };\n\n    this.getLinkElement = function (linkText) {\n        var downloadLink = this.getDownloadLink();\n        var fileName = this.fileName;\n        this.linkElement = this.linkElement || (function() {\n            var a = document.createElement('a');\n            a.innerHTML = linkText || '';\n            a.href = downloadLink;\n            a.download = fileName;\n            return a;\n        }());\n        return this.linkElement;\n    };\n\n    // call with removeAfterDownload = true if you want the link to be removed after downloading\n    this.download = function (removeAfterDownload) {\n        var linkElement = this.getLinkElement();\n        linkElement.style.display = 'none';\n        document.body.appendChild(linkElement);\n        linkElement.click();\n        if (removeAfterDownload) {\n            document.body.removeChild(linkElement);\n        }\n    };\n}\n\nfunction checklist_tree_to_flat(checklist_tree ) {\n    let checklist_array = [[\"id\", \"name\", \"parent_id\", \"position\", \"comment\", \"section_title\", \"cond\", \"check\", \"color\", \"pre_check\"]]\n    checklist_array = checklist_tree_to_flat_rec(checklist_tree, checklist_array, 0, 0);\n    console.log(checklist_array)\n    // let csvGenerator = new CsvGenerator(checklist_array, 'my_csv.csv', \";\");\n    // csvGenerator.download(true);\n    checklist_to_json(checklist_array)\n\n    return checklist_array\n}\n\nfunction checklist_tree_to_flat_rec(item, array, parent_id, position){\n    if (item.id > 0){\n      console.log(JSON.stringify(item.cond))\n      array.push([item.id, item.name, parent_id, position, item.comment, item.section_title, JSON.stringify(item.cond), JSON.stringify(item.check), JSON.stringify(item.color), item.pre_check ? JSON.stringify(item.pre_check) : null])\n    }\n    for (let i=0; i<item.values.length; i++){\n        array = checklist_tree_to_flat_rec(item.values[i], array, item.id, i)\n    }\n    return array\n}\n\nfunction checklist_flat_to_tree(checklist_array, checklist_id){\n  let root_item = {\n    checklist_id:checklist_id,\n    id:-1,\n    num_values:[],\n    values:[]\n  }\n  return checklist_flat_to_tree_rec(root_item, checklist_array)\n}\n\nfunction checklist_flat_to_tree_rec(item, array){\n  let child_array = array.filter(elm => elm[2] === item.id)\n  child_array.sort(function(a, b){return a[3] - b[3]})\n  // console.log(array)\n  // console.log(child_array)\n  if (!child_array.length){\n    return item\n  }\n  for (let i=0; i< child_array.length; i++){\n    const elm = child_array[i]\n    let new_item = {\n      id: elm[0],\n      name : JSON.parse(elm[1]),\n      comment : JSON.parse(elm[4]),\n      section_title : JSON.parse(elm[5]),\n      cond : JSON.parse(elm[6]),\n      check : JSON.parse(elm[7]),\n      color : JSON.parse(elm[8]),\n      pre_check : JSON.parse(elm[9]),\n      values:[]\n    }\n    new_item = checklist_flat_to_tree_rec(new_item, array)\n    item.values.push(new_item)\n  }\n  return item\n}\n\n\n\nexport {list_possible_answer_trad, list_possible_answer, list_possible_num_var_trad, list_possible_num_var, list_possible_op, trad_answer, trad_num_var, CsvGenerator, simple_operation, checklist_to_json, checklist_tree_to_flat, checklist_flat_to_tree}","import React from \"react\";\nimport * as utils from \"./utils\";\n\n/* Component of the upper navbar of the webpage\n* -setCreationMode: bool indicating if we are in creation mode set function\n* -setCreditMode: bool indicating if we are in credit mode set function\n* -trimmedCanvasUrl: the canvas url data of the signature\n* -result: dict containing the results of the current checklist check-in\n* -checklistList: List containing the different checklists\n* -swapchecklist: function that changes the current checklist\n* */\nfunction AppNavbar ({props}) {\n\n  let {setCreationMode, setCreditMode, trimmedCanvasUrl, checklistList, swapchecklist, reset, forceUpdate, import_csv_result, result} = props;\n\n  /*Function triggered when we want to download the signature as .png file if there is a canvas url data*/\n  const image_download = () => {\n    if(trimmedCanvasUrl)\n      downloadImage(trimmedCanvasUrl, \"image.png\");\n  }\n\n  /*Activate the creation mode*/\n  const activatecreatemode = () => {\n    setCreationMode(1)\n  }\n\n  /*Deactivate the creation mode*/\n  const deactivatecreatemode = () => {\n    setCreationMode(0)\n  }\n\n  /*Activate the credit mode*/\n  const activatecreditmode = () => {\n    setCreditMode(1)\n  }\n\n  /*Deactivate the creation mode*/\n  const deactivatecreditmode = () => {\n    setCreditMode(0)\n  }\n\n  /*Return the different elements of the navbar*/\n  return (\n    <div className=\"iq-top-navbar h-auto \" >\n      <div className=\"iq-navbar-custom py-2\">\n        <nav className=\"navbar navbar-expand-lg navbar-light p-0\">\n          {/*Navbar Title*/}\n          <div className=\"navbar-brand pl-4\">\n            <a href=\"#\" onClick={deactivatecreditmode}>\n              <span>SLS</span>\n            </a>\n          </div>\n          {/*/!*Navbar Toggler button*!/*/}\n          <label className=\"navbar-toggler p-0 m-0\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\"\n                  aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </label>\n          {/*/!*Navbar links*!/*/}\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav  p-2 pl-4\">\n              <label className=\"nav-link active m-0\" aria-current=\"page\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={deactivatecreditmode}>Page d'accueil</label>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={import_csv_result}>Importer la checklist</label>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={image_download}>Importer la signature</label>\n              {/*Navbar checklist selection dropdown link*/}\n              <li className=\"nav-item dropdown\">\n                <label className=\"nav-link dropdown-toggle m-0\" id=\"navbarDropdown\" role=\"button\"\n                   data-toggle=\"dropdown\" aria-expanded=\"false\">\n                  Liste des checklists disponibles\n                </label>\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  {checklistList ? checklistList.map((i, index) => (\n                    <li key={index}><label className=\"dropdown-item m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={function (){swapchecklist(i.checklist_id) } }>{i.name}</label></li>\n                  )): null}\n                </ul>\n              </li>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\"  onClick={activatecreatemode}>Activer le mode Création</label>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={deactivatecreatemode}>Désactiver le mode Création</label>\n              <label className=\"nav-link m-0\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" onClick={activatecreditmode}>A propos</label>\n            </div>\n          </div>\n        </nav>\n      </div>\n    </div>\n  )\n}\n\n/*Download a data in a file with defined filename*/\nconst downloadImage = function(data, filename) {\n  let a = document.createElement('a');\n  a.href = data;\n  a.download = filename;\n  document.body.appendChild(a);\n  a.click();\n};\n\nexport {AppNavbar}","import SignaturePad from \"react-signature-canvas\";\nimport React from \"react\";\n\n/*Component for the signature pad\n* -sigpad: object representing the signature pad, fill in by the SignaturePad component\n* -setTrimmedCanvasUrl: the canvas url data of the signature set function\n* */\nfunction AppSignature ({props}) {\n\n  let {sigpad, setTrimmedCanvasUrl} = props;\n\n  /*Reinitialize the canvas and sigpad*/\n  const reinit_canvas = () => {\n    sigpad.clear()\n    setTrimmedCanvasUrl(null)\n  }\n\n  /*Import the current sigpad information into canvas url data*/\n  const trim_canvas = () => {\n    var dataUrl = sigpad.getTrimmedCanvas().toDataURL();\n    setTrimmedCanvasUrl(dataUrl);\n  }\n\n  /*Return the signature elements*/\n  return (\n    <div className=\"container iq-card rounded-0-top border-bottom border-right border-left border-dark shadow\">\n      <div className=\"row align-items-center p-0 m-0 h-100\">\n        {/*Information text*/}\n        <div className=\"col-sm-3 m-0 p-0 text-center text-dark\">\n          Veuillez rentrer votre signature :\n        </div>\n        {/*Signature pad component, receiving the signature*/}\n        <div className=\"col m-0 p-0 h-100 py-2 \">\n          <div className=\"container iq-card m-0 bg-light border\">\n            <div className=\"sigContainer\">\n              <SignaturePad canvasProps={{className: \"sigPad\"}}\n                ref={(ref) => { sigpad = ref }} />\n            </div>\n          </div>\n        </div>\n        {/*Validation and Reinitialisation buttons*/}\n        <div className=\"col-sm-3 mx-2 p-0\">\n          {/*Button to validate the current signature and put info into data*/}\n          <div className=\"row align-items-center p-0 m-0 mb-2 px-4\">\n            <button type=\"button\" className=\"btn btn-warning w-100\" onClick={trim_canvas}>\n              Valider la signature\n            </button>\n          </div>\n          {/*Button to clean the current signature canvas and remove info in data*/}\n          <div className=\" row align-items-center p-0 m-0 px-4\">\n            <button type=\"button\" className=\"btn btn-secondary w-100\" onClick={reinit_canvas}>\n              Réinitialiser\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport {AppSignature}","import BootstrapSelect from \"react-bootstrap-select-dropdown\";\nimport * as utils from \"./utils\";\nimport React, {useEffect, useState} from \"react\";\nimport {list_possible_answer, list_possible_num_var, list_possible_op, trad_answer, trad_num_var, checklist_to_json,} from \"./utils\";\nimport * as temp from \"./temporary_data\";\nimport * as temp_data from \"./temporary_data\";\nimport axios from \"axios\";\n\n/* Component for the creation mode box\n* -checklist: current checklist (state variable)\n* -setChecklist: current checklist set function\n* -swapchecklist: function that changes the current checklist\n* -checklistList : list of checklists (state variable)\n* -setChecklistList : list of checklist set function\n* -checklistId : id of the current checklist (state variables)\n* -setChecklistId : id of the current checklist set function\n* -forceUpdate: function that force the reload of component if necessary\n* */\nfunction CreateBox ({props}) {\n\n  let {checklist, setChecklist, checklistList, setChecklistList, checklistId, setChecklistId, forceUpdate, setResult, setIsDict, init_dict, setIsPreCheckDone, currentQuestion, setCurrentQuestion, swapchecklist} = props\n\n  /* State variables used only in creation mode\n  * -currentQuestion : the question currently into creation/modification\n  * -currentParentQuestion : the question that is parent of the current question\n  * -currentName : the current name\n  * -tempNums : the numerical condition values (var, op and val) of the current condition the user is going to add\n  * -tempPreChech : the precheck condition values (var, op, val) and then value of the current precheck the user is going to add\n  */\n\n\n  let [currentParentQuestion, setCurrentParentQuestion] = useState(checklist)\n  let [currentName, setCurrentName] = useState(checklist && checklist.values.length ? checklist.values[0].name : \" \" )\n  let [currentComment, setCurrentComment] = useState(checklist && checklist.values[0].comment ? checklist.values[0].comment : null)\n  let [currentSectionTitle, setCurrentSectionTitle] = useState(checklist && checklist.values[0].section_title ? checklist.values[0].section_title : null)\n\n  let [tempNums, setTempNums] = useState({})\n  let [tempPreCheck, setTempPreCheck] = useState({type:\"and\", then: checklist.values[0].pre_check && checklist.values[0].pre_check.then ? checklist.values[0].pre_check.then : null})\n\n  let [pairIndicator, setPairIndicator] = useState(0)\n\n  let [isAltAnswers, setIsAltAnswers] = useState(false)\n\n  // console.log(\"main\", currentQuestion)\n\n  /* Make the complete list of questions of the current checklist*/\n  let questionList = [];\n  function enumquestions (item){\n    if (item.id > 0)\n      questionList.push(item.id)\n    for (const value of item.values){\n      enumquestions(value)\n    }\n  }\n  if (checklist) enumquestions(checklist)\n\n  /*Create a list, usable by the select component, of the possible answer*/\n  let possible_answers = []\n  let possible_answers_single = []\n  let alt_possible_answers = []\n  function construct_possible_answers (){\n    possible_answers = []\n    list_possible_answer.forEach(function(answer){\n      if([\"text\",\"list\"].includes(answer)){\n        alt_possible_answers.push({\"labelKey\": answer,\"value\": trad_answer(answer)})\n      }\n      else{\n        possible_answers.push({\n          \"labelKey\": answer,\n        \"value\": trad_answer(answer),\n        \"isSelected\":currentQuestion.check.includes(answer),\n        })\n        possible_answers_single.push({\n          \"labelKey\": answer,\n        \"value\": trad_answer(answer),\n        })\n      }\n    })\n  }\n  if (currentQuestion) construct_possible_answers()\n\n  /*Create a list, usable by the select component, of the possible variables of conditions*/\n  let possible_vars = []\n  function construct_possible_vars (){\n    possible_vars = []\n    list_possible_num_var.forEach(function(num_var){\n      possible_vars.push({\"labelKey\": num_var, \"value\": trad_num_var(num_var)})\n    })\n  }\n  if (currentQuestion) construct_possible_vars()\n\n  let possible_vars_extended = JSON.parse( JSON.stringify(possible_vars) )\n  function construct_possible_vars_extended(){\n    questionList.forEach(function (question){\n      possible_vars_extended.push({\"labelKey\": question, \"value\": \"Question \"+ question})\n    })\n  }\n  if (currentQuestion) construct_possible_vars_extended()\n\n  /*Create a list, usable by the select component, of the possible operators of conditions*/\n  let possible_op = []\n  function construct_possible_op (){\n    possible_op = []\n    list_possible_op.forEach(function(op){\n      possible_op.push({\"labelKey\": op, \"value\": op})\n    })\n  }\n  if (currentQuestion) construct_possible_op()\n\n  /*Create a list, usable by the select component, of the possible answers of this question*/\n  let possible_pre_check = []\n  function construct_possible_pre_check (){\n    possible_pre_check = []\n    currentQuestion.check.forEach(function(pre_check){\n      possible_pre_check.push({\"labelKey\": pre_check, \"value\": trad_answer(pre_check)})\n    })\n  }\n  if (currentQuestion) construct_possible_pre_check()\n\n  let possible_lists = []\n  function construct_possible_lists () {\n    Object.keys(temp.lists).forEach(function (name){\n      possible_lists.push({\"labelKey\": name, \"value\": temp.lists_trad[name]})\n    })\n    return possible_lists\n  }\n  if (currentQuestion) construct_possible_lists()\n\n  // /*Set state variables*/\n  // function set_elements () {\n  //   setCurrentQuestion(currentQuestion)\n  //   setCurrentParentQuestion(currentParentQuestion)\n  //   setChecklist(checklist)\n  //   setChecklistList(checklistList)\n  // }\n\n  /*Reinitialize the current question, which means taking the first question of the current checklist as current question*/\n  function reinit_current_question (checklist) {\n    console.log(\"reinit\", checklist)\n    setCurrentQuestion(checklist && checklist.values.length ? checklist.values[0] : null)\n    setCurrentParentQuestion(checklist)\n    setCurrentName(checklist && checklist.values.length ? checklist.values[0].name : \"\")\n    setCurrentComment(checklist && checklist.values.length ? checklist.values[0].comment : \"\")\n    setCurrentSectionTitle(checklist && checklist.values[0].section_title ? checklist.values[0].section_title : null)\n    setTempNums({})\n    setTempPreCheck({type:\"and\", then: checklist.values[0].pre_check && checklist.values[0].pre_check.then ? checklist.values[0].pre_check.then : null})\n    setIsAltAnswers(false)\n  }\n\n  /*Search for a question (with id) in item and his children, knowing that parent_item is the parent of item. When found, set\n  * the current question to this question (and so for the parent and name)*/\n  function searchquestion (item, parent_item, id) {\n    if (item.id === id){\n      console.log(\"found\", item)\n      currentQuestion = item\n      currentParentQuestion = parent_item\n      setCurrentQuestion(currentQuestion)\n      setCurrentParentQuestion(currentParentQuestion)\n      setCurrentName(currentQuestion.name)\n      setTempNums({})\n      setTempPreCheck({})\n      setCurrentComment(currentQuestion.comment)\n      setCurrentSectionTitle(currentQuestion.section_title)\n      setPairIndicator(!pairIndicator)\n      setIsAltAnswers(false)\n      return currentQuestion\n    }\n    let current_question = null\n    for (const value of item.values){\n      current_question = searchquestion(value,item,id) || current_question;\n    }\n    return current_question\n  }\n\n  /*Remove the current question (by removing the question from children of his parent),\n  * and reset to a new current queston\n  */\n  function removequestion (){\n    if (currentParentQuestion) {\n      currentParentQuestion.values = currentParentQuestion.values.filter(e => e.id !== currentQuestion.id)\n      reinit_current_question(checklist)\n      forceUpdate() // Dont know why the remove question need force update but not remove checklist\n    }\n  }\n\n  /*Add a new question to the checklist. For now we put it as the last children of the checklist item\n  * (the last question at first level of the tree ) and we put basic elements inside\n  */\n  function addnewquestion (){\n    let last_id = questionList.length ? questionList[questionList.length-1] : 0\n    let new_empty_question =\n      {\n        id: last_id+1,\n        name : \"\",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\", \"no\"],\n        color : [0,1],\n        values: [],\n      }\n    checklist.values.push(new_empty_question)\n    //set_elements()\n    searchquestion(checklist, null, last_id+1)\n  }\n\n  function check_id(item, id){\n    return item.id === id || (item.values.length && item.values.every(value => check_id(value)))\n  }\n\n  /*Move the current question to another position (the last child of the question with id), we reset the cond for now */\n  function movecurrentquestion_sibling (id){\n    if (!check_id(currentQuestion, id)) {\n      let currentQuestionCopy = {...currentQuestion}\n      removequestion()\n      searchquestion(checklist, null, id)\n      let chosen_question_position = currentParentQuestion.values.findIndex(elm => elm.id === id)\n      currentQuestionCopy.cond = {\"yes\": [], \"no\": [], num: []}\n      currentParentQuestion.values.splice(chosen_question_position + 1, 0, currentQuestionCopy)\n      //set_elements()\n      searchquestion(checklist, null, currentQuestionCopy.id)\n      forceUpdate()\n    }\n  }\n\n  function movecurrentquestion_child (id){\n    if (!check_id(currentQuestion, id)) {\n      let currentQuestionCopy = {...currentQuestion}\n      currentQuestionCopy.cond = {\"yes\":[], \"no\":[], num:[]}\n      removequestion()\n      searchquestion(checklist, null, id)\n      currentQuestion.values.splice(0,0,currentQuestionCopy)\n      //set_elements()\n      searchquestion(checklist, null, currentQuestionCopy.id)\n      forceUpdate()\n    }\n  }\n\n  /*Modify the current name*/\n  const modifyname = (event) => {\n    currentName = event.target.value\n    setCurrentName(currentName)\n  }\n\n  /*Update the current question name*/\n  const updatename = () => {\n    currentQuestion.name = currentName\n    setCurrentQuestion(currentQuestion)\n    forceUpdate()\n  }\n\n    /*Modify the current name*/\n  const modifycomment = (event) => {\n    currentComment = event.target.value\n    setCurrentComment(currentComment)\n  }\n\n  /*Update the current question name*/\n  const updatecomment = () => {\n    if (currentComment)\n      currentQuestion.comment = currentComment\n    else\n      delete currentQuestion.comment\n    forceUpdate()\n  }\n\n  /*Modify the current name*/\n  const modifysectiontitle= (event) => {\n    currentSectionTitle = event.target.value\n    setCurrentSectionTitle(currentSectionTitle)\n  }\n\n  /*Update the current question name*/\n  const updatesectiontitle = () => {\n    if (currentSectionTitle)\n      currentQuestion.section_title = currentSectionTitle\n    else\n      delete currentQuestion.section_title\n    forceUpdate()\n  }\n\n  /*Change the check array of the current question, containing the possible answers*/\n  const changecheck = (selectedOptions) => {\n    if (selectedOptions.selectedKey.length) {\n      if (!(selectedOptions.selectedKey.includes(\"list\") || selectedOptions.selectedKey.includes(\"text\"))) {\n        currentQuestion.check = selectedOptions.selectedKey\n        let current_colors = currentQuestion.color\n        if (currentQuestion.check.length >= current_colors.length)\n          current_colors = current_colors.concat(new Array(currentQuestion.check.length - current_colors.length).fill(2))\n        // else\n        //   current_colors.splice(currentQuestion.check.length)\n        currentQuestion.color = current_colors\n      }\n      else if(selectedOptions.selectedKey[0] === \"list\"){\n        currentQuestion.check = [\"list_meds\"]\n      }\n      else{\n        currentQuestion.check = selectedOptions.selectedKey\n      }\n    }\n    else{\n      currentQuestion.check = []\n    }\n      setCurrentQuestion(currentQuestion)\n      switchpairindicator()\n      forceUpdate()\n  }\n\n  /*Add a checklist (with basic content) to the list of checklist, and switch to this checklist*/\n\n  const addchecklist = () => {\n    const checklist_id = checklistList.length ? checklistList[checklistList.length-1].checklist_id+1 : 0\n\n    // Inform that we want to add a new checklist and receive in response the new checklist list\n    axios.get('https://api.npms.io/v2/search?q=react') //Random url, just to simulate the fact that we need to make get call to add checklist\n    .then(function(response){\n\n      //Must handle incoming data\n\n      setChecklist(checklistList)\n\n      swapchecklist(checklist_id) // Pour l'instant n'a pas de sens puisqu'on ne rajoute rien\n      console.log(\"add checklist get call and set finished\")\n    });\n  }\n\n  /*Remove the current checklist from the list of checklist and take the first checklist still available as current checklist*/\n  const removechecklist = () => {\n    const checklist_id = checklistList.length ? checklistList[0].checklist_id : 0\n\n    // Inform that we want to del a checklist and receive in response the new checklist list\n    axios.get('https://api.npms.io/v2/search?q=react') //Random url, just to simulate the fact that we need to make get call to del checklist\n    .then(function(response){\n\n      //Must handle incoming data\n      setChecklist(checklistList)\n\n      swapchecklist(checklist_id) // Pour l'instant n'a pas de sens puisqu'on ne rajoute rien\n      console.log(\"remove checklist get call and set finished\")\n    });\n  }\n\n  /*Function that add a  question condition (with it answer and id) to current question*/\n  const addcond = (answer, id) => {\n    if (currentQuestion.cond[answer]) currentQuestion.cond[answer].push(id)\n    else currentQuestion.cond[answer] = [id]\n\n    setCurrentQuestion(currentQuestion)\n    forceUpdate()\n  }\n\n  /*Function that delete a  question condition (with it answer and id) to current question*/\n  const deletecond = (answer, id) => {\n    currentQuestion.cond[answer] = currentQuestion.cond[answer].filter(elm => elm !== id)\n    console.log(currentQuestion)\n    setCurrentQuestion(currentQuestion)\n    //set_elements()\n    forceUpdate()\n  }\n\n  /*Function that update the tempNum.var variable with input*/\n  const addtempnumvar = (selectedOptions) => {\n    if (!tempNums){ tempNums = {}}\n    tempNums = {}\n    tempNums.var = selectedOptions.selectedKey[0]\n    setTempNums(tempNums)\n\n    forceUpdate()\n  }\n  /*Function that update the tempNum.op variable with input*/\n  const addtempnumop = (selectedOptions) => {\n    if (!tempNums){ tempNums = {}}\n    tempNums.op = selectedOptions.selectedKey[0]\n    setTempNums(tempNums)\n    forceUpdate()\n  }\n    /*Function that update the tempNum.val variable with input*/\n  const addtempnumval = (event) => {\n    if (!tempNums){ tempNums = {}}\n    if(tempNums.var && [\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempNums.var) )\n      tempNums.val = event.selectedKey[0]\n    else\n      tempNums.val = event.target.value\n    setTempNums(tempNums)\n    forceUpdate()\n  }\n\n  /*Function that add a numerical condition (with values contains in tempNum) to currentQuestion*/\n  const addnum = () => {\n    if(tempNums.var && tempNums.val && [\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempNums.var)){\n      currentQuestion.cond.num.push({var: tempNums.var, op: \"est\", val: tempNums.val})\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n    else if (tempNums.var && tempNums.op && tempNums.val) {\n      currentQuestion.cond.num.push({var: tempNums.var, op: tempNums.op, val: tempNums.val})\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n  }\n\n  /*Function that remove a numerical condition of the currentQuestion*/\n  const removenum = (index) => {\n    console.log(\"supprimer\", index)\n    currentQuestion.cond.num.splice(index,1)\n    console.log(currentQuestion.cond.num)\n    setCurrentQuestion(currentQuestion)\n    //set_elements()\n    forceUpdate()\n  }\n\n  /*Function that update the tempPrecheck.var variable with input*/\n  const addtempprecheckvar = (selectedOptions) => {\n    tempPreCheck = {type:tempPreCheck.type, then:currentQuestion.pre_check && currentQuestion.pre_check.then ? currentQuestion.pre_check.then: null}\n    tempPreCheck.var = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n  /*Function that update the tempPrecheck.op variable with input*/\n  const addtempprecheckop = (selectedOptions) => {\n    tempPreCheck.op = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n  /*Function that update the tempPrecheck.val variable with input*/\n  const addtempprecheckval = (event) => {\n    if(tempPreCheck.var && ![\"age\",\"yearofbirth\"].includes(tempPreCheck.var))\n      tempPreCheck.val = event.selectedKey[0]\n    else\n      tempPreCheck.val = event.target.value\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n\n    /*Function that update the tempPrecheck.then variable with input*/\n  const addtempprecheckthen = (selectedOptions) => {\n    if (selectedOptions.selectedKey[0]) tempPreCheck.then = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n\n  /*Function that update the tempPrecheck.then variable with input*/\n  const addtempprechecktype = (selectedOptions) => {\n    if (selectedOptions.selectedKey[0]) tempPreCheck.type = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n\n\n  /*Function that add a precheck condition (with values contains in tempPreCheck) and precheck then to currentQuestion*/\n  const addprecheck = () => {\n    console.log(tempPreCheck)\n    if(tempPreCheck.var && tempPreCheck.val && tempPreCheck.then && (![\"age\",\"yearofbirth\"].includes(tempPreCheck.var) || tempPreCheck.op)){\n      if (!currentQuestion.pre_check)\n        currentQuestion.pre_check = {if:[],then:null}\n      currentQuestion.pre_check.then = tempPreCheck.then\n      if (!tempPreCheck.op) utils.list_possible_num_var.includes(tempPreCheck.var) ? tempPreCheck.op = \"est\" : tempPreCheck.op = null\n      if (tempPreCheck.type === \"and\" || !currentQuestion.pre_check.if.length)\n        currentQuestion.pre_check.if.push([{var: tempPreCheck.var, val: tempPreCheck.val, op:tempPreCheck.op}])\n      else if (tempPreCheck.type === \"or\") {\n        console.log(currentQuestion.pre_check.if.length)\n        currentQuestion.pre_check.if[currentQuestion.pre_check.if.length - 1].push({var: tempPreCheck.var, val: tempPreCheck.val, op: tempPreCheck.op})\n      }\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n  }\n\n  const updateprecheckthen = () => {\n    if(currentQuestion.pre_check){\n      currentQuestion.pre_check.then = tempPreCheck.then\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n  }\n\n  /*Function that remove a precheck condition of the currentQuestion*/\n  const removeprecheck = (index1, index2) => {\n    currentQuestion.pre_check.if[index1].splice(index2,1)\n    if (!currentQuestion.pre_check.if[index1].length)\n      currentQuestion.pre_check.if.splice(index1,1)\n    if (!currentQuestion.pre_check.if.length)\n      currentQuestion.pre_check = null\n    setCurrentQuestion(currentQuestion)\n    //set_elements()\n    forceUpdate()\n  }\n\n  const switchpairindicator = () => {\n    pairIndicator = (pairIndicator + 1)%4\n  }\n\n  const changecolor = (answer, color_id) => {\n    currentQuestion.color[currentQuestion.check.indexOf(answer)] = color_id\n    setCurrentQuestion(currentQuestion)\n    forceUpdate()\n  }\n\n  const changelist = (selectedOptions) => {\n    if (selectedOptions.selectedKey.length) {\n      currentQuestion.check = [currentQuestion.check[0].split(\"_\")[0] + \"_\" + selectedOptions.selectedKey[0]]\n      console.log(currentQuestion.check)\n      setCurrentQuestion(currentQuestion)\n      forceUpdate()\n    }\n  }\n\n  console.log(currentQuestion)\n  console.log(currentName)\n\n  /*Return the create box, with all it elements*/\n  return (\n    <div className=\"container iq-card pt-2 border border-dark shadow\">\n\n      {/*Title text*/}\n      <div className=\"iq-card bg-primary text-center mb-2\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title text-white\">Mode Création </h4>\n          <p className=\"card-text  m-0\">Vous pouvez ajouter, supprimer, modifier des checklists et des questions ici.</p>\n          <p className=\"card-text \">La checklist modifiée s'affiche en dessous.</p>\n        </div>\n      </div>\n\n      {/*Question and Checklist selection and show*/}\n      <div className=\"row align-items-center p-0 m-0 pb-2 border-bottom border-\">\n        {/*Checklist selection dropdown*/}\n        <div className=\"col align-items-center \">\n          <div className=\"dropright text-center\">\n            <button className=\"btn btn-info dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-toggle=\"dropdown\" aria-expanded=\"false\">\n              Sélectionnez la checklist\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Add a checklist (and select it)*/}\n              <li><label className=\"dropdown-item \" onClick={function(event){ addchecklist(); forceUpdate()}}>Nouvelle checklist</label></li>\n              {/*Select an existing checklist*/}\n              {checklistList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item \" onClick={function (){swapchecklist(i.checklist_id)}}>\n                  Checklist {i.name}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        {/*Checklist show*/}\n        <div className=\"col align-items-center p-2\">\n          <div className=\"iq-card card-light text-dark text-center shadow-sm mb-0 \">\n            Checklist n°{checklistId}\n          </div>\n        </div>\n        {/*Question show*/}\n        <div className=\"col align-items-center p-2\">\n          <div className=\"iq-card card-light text-dark text-center shadow-sm mb-0\">\n            Question n°{currentQuestion ? currentQuestion.id : \" -\"}\n          </div>\n        </div>\n        {/*Checklist selection dropdown*/}\n        <div className=\"col align-items-center \">\n          <div className=\"dropleft text-center\">\n            <button className=\"btn btn-info dropdown-toggle  \" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-toggle=\"dropdown\" aria-expanded=\"false\">\n              Sélectionnez la question\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Add a question (and select it)*/}\n              <li><label className=\"dropdown-item \" onClick={function(event){ addnewquestion(); forceUpdate()}}>Nouvelle question</label></li>\n              {/*Select an existing checklist*/}\n              {questionList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item \" onClick={function(){searchquestion(checklist, null, i)}}>\n                  Question n°{i}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {currentQuestion ? ( <div key={currentQuestion.id}>\n        {/*Question Name selection*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark \">\n            Nom de la question :\n          </div>\n          {/*Question name text input */}\n          <div className=\"col-sm-4 align-items-center\">\n            <input key={checklistId} className=\"form-control w-100 mb-0\" type = \"text \" aria-label=\"text input\" value={currentName} onChange={modifyname}/>\n          </div>\n          {/*Question name validation button*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center \">\n            <button className=\"btn btn-warning \" onClick={ () => updatename()}>\n              Valider le nom\n            </button>\n          </div>\n        </div>\n\n        {/*Question Comment selection*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark  \">\n            Commentaire (optionnel) de la question :\n          </div>\n          {/*Question comment text input */}\n          <div className=\"col-sm-4 align-items-center \">\n            <textarea className=\"form-control form-control-custom textarea\" id=\"exampleFormControlTextarea1\" rows=\"2\" value={currentComment ? currentComment:\"\"} onChange={modifycomment}/>\n          </div>\n          {/*Question comment validation button*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center\">\n            <button className=\"btn btn-warning \" onClick={function(event){ updatecomment(); forceUpdate()}}>\n              Valider le commentaire\n            </button>\n          </div>\n        </div>\n\n        {/*Question Section Title selection*/}\n        {currentParentQuestion.id === -1 ? (\n          <div className=\"row align-items-center p-2 m-0 border-bottom\">\n            {/*Information text*/}\n            <div className=\"col-sm-4 align-items-center text-dark  \">\n              Nom de section (optionnel) devant la question :\n            </div>\n            {/*Question comment text input */}\n            <div className=\"col-sm-4 align-items-center \">\n              <textarea className=\"form-control form-control-custom textarea\" id=\"exampleFormControlTextarea1\" rows=\"2\" value={currentSectionTitle ? currentSectionTitle:\"\"} onChange={modifysectiontitle}/>\n            </div>\n            {/*Question comment validation button*/}\n            <div className=\"col-sm-4 align-items-center p-0 text-center\">\n              <button className=\"btn btn-warning \" onClick={function(event){ updatesectiontitle(); forceUpdate()}}>\n                Valider le titre\n              </button>\n            </div>\n          </div>\n        ): null}\n\n        {/*Question Position (below which question the current question must be put)*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark\">\n            Placer la question à la suite d'une autre :\n          </div>\n          <div className=\"col-sm-4 align-items-center\">\n          </div>\n          {/*Other question as parent selection dropdown*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center\">\n            <div className=\"dropleft text-center\">\n              <button className=\"btn btn-warning dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton1\"\n                      data-toggle=\"dropdown\" aria-expanded=\"false\">\n                Quelle question ?\n              </button>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                {/*Put the question at top level*/}\n                <li><label className=\"dropdown-item \" onClick={() => movecurrentquestion_child(-1)}>\n                  Au début</label>\n                  </li>\n                {/*Put the question at child of another question*/}\n                {questionList.map((i, index) => (\n                  <li key={index}><label className=\"dropdown-item \" onClick={() => movecurrentquestion_sibling(i)}>\n                    Question n°{i}</label>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/*Question situation (child or sibling of the upper question)*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark \">\n            Placer la question comme découlant d'une autre :\n          </div>\n          <div className=\"col-sm-4 align-items-center\">\n          </div>\n          {/*Choice between child and sibling*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center\">\n            <div className=\"dropleft text-center\">\n              <button className=\"btn btn-warning dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton1\"\n                      data-toggle=\"dropdown\" aria-expanded=\"false\">\n                Quelle question ?\n              </button>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                {/*Put the question at top level*/}\n                <li><label className=\"dropdown-item \" onClick={() => movecurrentquestion_child(-1)}>\n                  Au début</label>\n                  </li>\n                {/*Put the question at child of another question*/}\n                {questionList.map((i, index) => (\n                  <li key={index}><label className=\"dropdown-item \" onClick={() => movecurrentquestion_child(i)}>\n                    Question n°{i}</label>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/*(Multi)selection of answers of the current question*/}\n        <div className=\"row align-items-center p-2 m-0 border-bottom\">\n          {/*Information text*/}\n          <div className=\"col-sm-4 align-items-center text-dark \">\n            Quelles réponses possibles ? :\n          </div>\n          <div className=\"col-sm-4 align-items-center\">\n\n          </div>\n          {/*(Multi)Selection dropdown*/}\n          <div className=\"col-sm-4 align-items-center p-0 text-center\">\n            <div className=\"row\">\n              {!isAltAnswers ?\n                <BootstrapSelect key={pairIndicator} className=\" col w-100 my-auto \" selectStyle =\"btn-warning\" options={possible_answers} isMultiSelect={true} placeholder=\"Entrer checkboxs\" onChange={changecheck}/>\n                :\n                <BootstrapSelect key={!pairIndicator} className=\" col w-100 my-auto \" selectStyle =\"btn-warning\" options={alt_possible_answers} isMultiSelect={false} placeholder=\"Entrer Autres\" onChange={changecheck}/>\n              }\n              <button className={\"col-sm-2 btn btn-outline-info\"} onClick={function (){setIsAltAnswers(!isAltAnswers)}}>\n                <div data-icon=\"&#xe049;\" className=\"icon mt-1\"></div>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/*Select of the list (if the answer is list)*/}\n        { currentQuestion.check[0] && currentQuestion.check[0].split(\"_\")[0] === \"list\" ?\n          <div className=\"row align-items-center p-2 m-0 border-bottom\">\n            {/*Information text*/}\n            <div className=\"col-sm-4 align-items-center text-dark \">\n              Quelle liste ? :\n            </div>\n            <div className=\"col-sm-4 align-items-center\">\n\n            </div>\n            {/*(Multi)Selection dropdown*/}\n            <div className=\"col-sm-4 align-items-center p-0 text-center\">\n              <div className=\"row\">\n                <BootstrapSelect key={pairIndicator} className=\" col w-100 my-auto \" selectStyle =\"btn-warning\" options={possible_lists} isMultiSelect={false} placeholder=\"Aucune\" onChange={changelist}/>\n              </div>\n            </div>\n          </div>\n        : null}\n\n        {/*selection of colors of answers of the current question*/}\n        { !isAltAnswers ?\n          <div className=\"border-bottom m-0 py-2 text-center\">\n            <button className=\"btn btn-secondary m-auto p-2 my-2 \" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseColors\"\n                    aria-expanded=\"false\" aria-controls=\"collapseExample\">\n              <i className=\"las la-angle-down\"/> Modifier les couleurs des questions <i className=\"las la-angle-down\"/>\n            </button>\n            <div className=\"collapse m-0 p-0\" id=\"collapseColors\">\n              <div className=\"row align-items-center p-2 m-0 border-bottom\">\n                {/*Information text*/}\n                <div className=\"col-sm-3 align-items-center text-dark \">\n                  Avec quelles couleurs ? :\n                </div>\n                <div className=\"col-sm-9 align-items-center text-center\">\n                  {currentQuestion.check.map((answer,index) => (\n                    <div key={index} className=\"row\">\n                      <div className=\"col text-center justify-content-center my-4\">\n                        <div className=\" iq-card card-grey text-center shadow-sm text-dark m-0\">\n                          {utils.trad_answer(answer)}\n                        </div>\n                      </div>\n                      <div className=\"col text-center justify-content-center my-4\">\n                        <div className=\" iq-card card-grey text-center shadow-sm text-dark m-0\">\n                          {currentQuestion.color[index] === 0 ? \"Vert\" : currentQuestion.color[index] === 1 ? \"Rouge\" : \"Gris\"}\n                        </div>\n                      </div>\n                      <div className=\"col text-center justify-content-center my-3\">\n                        <div className=\"dropleft text-center\">\n                          <button className=\"btn btn-warning dropdown-toggle m-0 \" type=\"button\" id=\"dropdownMenuButton1\"\n                                  data-toggle=\"dropdown\" aria-expanded=\"false\">\n                            Quelle couleur ?\n                          </button>\n                          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                            {[\"Vert\",\"Rouge\",\"Gris\"].map((color, index) => (\n                              <li key={index}><label className=\"dropdown-item \" onClick={() => changecolor(answer, index)}>\n                                {color}</label>\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        : null}\n\n        {/*Question conditions of the current question (optional part, so it needs to be collapsable)*/}\n        <div className=\"border-bottom m-0 py-2 text-center\">\n          <button className=\"btn btn-secondary m-auto p-2 my-2 \" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseQuestionConditions\"\n                  aria-expanded=\"false\" aria-controls=\"collapseExample\">\n            <i className=\"las la-angle-down\"/> Ajouter/Supprimer des conditions sur les autres questions <i className=\"las la-angle-down\"/>\n          </button>\n          <div className=\"collapse m-0 p-0\" id=\"collapseQuestionConditions\">\n            <div className=\"row align-items-center p-2 m-0\">\n              <div className=\"col-sm-3 align-items-center text-dark \">\n                Quelles conditions sur les réponses ? :\n              </div>\n              <div className=\"col-sm-9 align-items-center\">\n                {utils.list_possible_answer.map((answer, index) => (\n                  <div key={index} className=\"row\">\n                    <div className=\"col align-items-center p-2 my-auto\">\n                      <div className=\"iq-card card-grey text-center shadow-sm m-0 text-dark \">\n                        {trad_answer(answer)}\n                      </div>\n                    </div>\n                    <div className=\"col align-items-center p-2\">\n                      <div className=\"list-group list-group-horizontal m-0\">\n                        {/*For each possible answer, if in item.check, we put a checkbox*/}\n                        {(currentQuestion && currentQuestion.cond[answer]) ? currentQuestion.cond[answer].map( (id, index) => (\n                            <button key={index} className=\" list-group-item list-group-item-custom btn btn-outline-secondary \" type=\"button\" onClick={() => deletecond(answer, id)} >{id} </button>\n                        )): null}\n                      </div>\n\n                    </div>\n                    <div className=\"col align-items-center p-2 my-auto\">\n                      <div className=\"dropleft text-center\">\n                        <button className=\"btn btn-warning dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton1\"\n                                data-toggle=\"dropdown\" aria-expanded=\"false\">\n                          Quelle question ?\n                        </button>\n                        <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                          {questionList.map((id, index) => (\n                            <li key={index}><label className=\"dropdown-item \" onClick={() => addcond(answer, id)}>\n                              Question n°{id}</label>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/*Numerical conditions of the current question*/}\n        <div className=\"border-bottom m-0 py-2 text-center\">\n          <button className=\"btn btn-secondary m-auto p-2 my-2 \" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseNumConditions\"\n                  aria-expanded=\"false\" aria-controls=\"collapseExample\">\n            <i className=\"las la-angle-down\"/> Ajouter/Supprimer des conditions numériques <i className=\"las la-angle-down\"/>\n          </button>\n          <div className=\"collapse m-0 p-0\" id=\"collapseNumConditions\">\n            <div className=\"col align-items-center p-2 m-0\">\n              {/*Current Numerical condition list display*/}\n              {(currentQuestion && currentQuestion.cond.num) ? currentQuestion.cond.num.map( (num, index) => (\n                <div  key={index} className=\"row justify-content-md-center py-2\">\n                  <div className=\"col-sm-3 align-items-center my-auto\">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark \">\n                      {trad_num_var(num.var)}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto \">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark \">\n                      {num.op}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto \">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark\">\n                      {num.val}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto text-center\">\n                    <button className=\"btn btn-danger \" onClick={() => removenum(index)} >\n                      <div data-icon=\"&#xe053;\" className=\"icon mt-1\"/>\n                    </button>\n                  </div>\n                </div>\n              )): null}\n              {/*Add numerical condition section */}\n              <div>\n                <div className=\"row justify-content-md-center py-2\">\n                  <div className=\"col-sm-3 align-items-center my-auto\">\n                    <BootstrapSelect key={pairIndicator} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle variable ?\" options={possible_vars} onChange={addtempnumvar}/>\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto\">\n                    {[\"diabetic\",\"difficult_intubation\", \"gender\"].includes(tempNums.var) ?\n                      <div>est</div>\n                      :\n                      <BootstrapSelect key={pairIndicator} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quel opérateur ?\" options={possible_op} onChange={addtempnumop}/>\n                    }\n                  </div>\n                  <div className=\"col-sm-3 align-items-center my-auto \">\n                    {[\"diabetic\",\"difficult_intubation\"].includes(tempNums.var) ?\n                      <BootstrapSelect key={tempNums.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle valeur ?\"\n                                     options={[{\"labelKey\": \"vrai\", \"value\": \"Vrai\"},{\"labelKey\": \"faux\", \"value\": \"Faux\"}]  } onChange={addtempnumval}/>\n                      :\n                      <div> {tempNums.var === \"gender\" ?\n                        <BootstrapSelect key={tempNums.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle valeur ?\"\n                                     options={[{\"labelKey\": \"F\", \"value\": \"F\"},{\"labelKey\": \"M\", \"value\": \"M\"}] } onChange={addtempnumval}/>\n                        :\n                        <input type=\"number\" className=\"form-control \" placeholder=\"Quelle valeur ?\" onChange={addtempnumval}/>\n                      } </div>\n                    }\n                  </div>\n                  <div className=\"col-sm-3 align-items-center text-center my-auto\">\n                    <button className=\"btn btn-warning w-100 \" onClick={() => addnum()} >\n                      Valider\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/*Precheck conditions of the current question*/}\n        <div className=\"border-bottom m-0 py-2 text-center\">\n          <button className=\"btn btn-secondary m-auto p-2 my-2 \" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsePreCheck\"\n                  aria-expanded=\"false\" aria-controls=\"collapseExample\">\n            <i className=\"las la-angle-down\"/> Ajouter/Supprimer des conditions pour que la question soit pré-checkée <i className=\"las la-angle-down\"/>\n          </button>\n          <div className=\"collapse m-0 p-0\" id=\"collapsePreCheck\">\n            <div className=\"col align-items-center p-2 m-0\">\n              {/*Current PreCheck condition list (and then value) display*/}\n              {(currentQuestion && currentQuestion.pre_check) ? currentQuestion.pre_check.if.map( (pre_checks, index1) => (\n                <div>\n                  {index1 ? <div className={\"mx-auto w-50 border-top border-bottom border-light\"}>et</div> : <div className={\"mx-auto w-50 border-top border-light\"}/>}\n                  {pre_checks.map((pre_check, index2) => (\n                    <div>\n                      {index2 ? <div>ou</div> : null}\n                      <div  key={index1} className=\"row justify-content-md-center py-2\">\n                        <div className=\"col-sm-3 align-items-center my-auto\">\n                          <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark \">\n                            {list_possible_num_var.includes(pre_check.var) ? trad_num_var(pre_check.var) : \"Question \" + pre_check.var}\n                          </div>\n                        </div>\n                        <div className=\"col-sm-3 align-items-center my-auto \">\n                          <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark\">\n                            {pre_check.op ? pre_check.op : \"est\"}\n                          </div>\n                        </div>\n                        <div className=\"col-sm-3 align-items-center my-auto \">\n                          <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark\">\n                            {list_possible_num_var.includes(pre_check.var) ? pre_check.val : trad_answer(pre_check.val)}\n                          </div>\n                        </div>\n                        <div className=\"col-sm-3 align-items-center my-auto text-center\">\n                          <button className=\"btn btn-danger \" onClick={() => removeprecheck(index1, index2)} >\n                            <div data-icon=\"&#xe053;\" className=\"icon mt-1\"/>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )): null}\n              {(currentQuestion && currentQuestion.pre_check) ? (\n                <div className=\"row mx-auto w-50 justify-content-md-center py-2 border-top\">\n                  <div className=\"col-sm-2 align-items-center my-auto\">\n                    <div className=\"iq-card card-grey shadow-sm text-center m-0 text-dark\">\n                      {trad_answer(currentQuestion.pre_check.then)}\n                    </div>\n                  </div>\n                </div>\n              ): null}\n\n\n              {/*Add PreCheck condition and then value section*/}\n              <div>\n                {/*Same problem than with other (multi) bootstrap select, must see if another solution. If we switch between checklist 0 question 1 and checklist 1 question 1, problem stay*/}\n                <div>\n                  <div className=\"row justify-content-md-center py-2\">\n                    <div className=\"col-sm-3 align-items-center my-auto\">\n                      <BootstrapSelect key={pairIndicator} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Et/Ou\" options={[{\"labelKey\": \"and\", \"value\": \"Et\", \"isSelected\":true},{\"labelKey\": \"or\", \"value\": \"Ou\"}]  } onChange={addtempprechecktype}/>\n                    </div>\n                    <div className=\"col-sm-3 align-items-center my-auto\">\n                      <BootstrapSelect key={pairIndicator} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle variable ?\" options={possible_vars_extended} onChange={addtempprecheckvar}/>\n                    </div>\n                    <div className=\"col-sm-3 align-items-center my-auto \">\n                      {![\"age\",\"yearofbirth\"].includes(tempPreCheck.var) ?\n                        <div>est</div>\n                        :\n                        <BootstrapSelect key={tempPreCheck.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quel opérateur ?\" options={possible_op} onChange={addtempprecheckop}/>\n                      }\n                    </div>\n                    <div className=\"col-sm-3 align-items-center my-auto\">\n                      {[\"diabetic\",\"difficult_intubation\"].includes(tempPreCheck.var) ?\n                        <BootstrapSelect key={tempPreCheck.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle valeur ?\"\n                                       options={[{\"labelKey\": \"vrai\", \"value\": \"Vrai\"},{\"labelKey\": \"faux\", \"value\": \"Faux\"}]  } onChange={addtempprecheckval}/>\n                        :\n                        <div> {tempPreCheck.var === \"gender\" ?\n                          <BootstrapSelect key={tempPreCheck.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle valeur ?\"\n                                       options={[{\"labelKey\": \"F\", \"value\": \"F\"},{\"labelKey\": \"M\", \"value\": \"M\"}] } onChange={addtempprecheckval}/>\n                          :\n                          <div> {Number.isInteger(tempPreCheck.var) ?\n                            <BootstrapSelect key={tempPreCheck.var} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quelle valeur ?\"\n                                             options={possible_answers_single} onChange={addtempprecheckval}/>\n                            :\n                            <input key={tempPreCheck.var} type=\"number\" className=\"form-control \" placeholder=\"Quelle valeur ?\"\n                                   onChange={addtempprecheckval}/>\n                          }\n                          </div>\n                        }\n                        </div>\n                      }\n                    </div>\n                  </div>\n                  <div className=\"row justify-content-md-center py-2\">\n                    <div className=\"col-sm-3 align-items-center my-auto \">\n                      <BootstrapSelect key={tempPreCheck.var + currentQuestion.check.length} className=\"w-100 \" selectStyle=\"btn border\" placeholder=\"Quel pre-check ?\" options={possible_pre_check} onChange={addtempprecheckthen}/>\n                    </div>\n                    <div className=\"col-sm-3 align-items-center \">\n                      <button className=\"btn btn-warning w-100  \" onClick={() => updateprecheckthen()} >\n                        Modifier le precheck\n                      </button>\n                    </div>\n                    <div className=\"col-sm-3 align-items-center text-center my-auto\">\n                      <button className=\"btn btn-warning w-100  \" onClick={() => addprecheck()} >\n                        Valider\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> ) : null}\n\n\n      {/*End section of the create box, with remove and import button*/}\n      <div className=\"row align-items-center p-2 m-0\">\n        {/*Button to remove the current checklist*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-danger  \" onClick={removechecklist} >\n            Supprimer la checklist\n          </button>\n        </div>\n        {/*Button to import in .json the list of checklist*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-warning  \" onClick={() =>  utils.checklist_tree_to_flat(checklist)}>\n            Sauvegarder la checklist\n          </button>\n        </div>\n        {/*Button to remove the current question*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-danger \" onClick={removequestion}>\n            Supprimer la question\n          </button>\n        </div>\n      </div>\n    </div>\n    )\n}\n\nexport {CreateBox}","import React from \"react\";\n\n/*Component to show the credits of the web app*/\nfunction Credits ({props}) {\n  return (\n    <div className=\"\">\n      <div className=\"card-inv text-center\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title m-0 text-custom\">SLS Checklist App</h5>\n          <p className=\"card-text text-custom m-0\">v0.9.2</p>\n          <p className=\"card-text text-custom m-0\">Développé par Théo Stassen</p>\n          <p className=\"card-text text-custom\">theo.stassen@protonmail.com</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Credits}","import React from \"react\";\nimport * as utils from \"./utils\";\n\n/*Component for the selection of the current patient\n* -patientList : list of all patients\n* -currentPatient : current patient state variable\n* -setCurrentPatient: current patient set function\n* */\nfunction PatientBox ({props}) {\n\n  let {patientList, currentPatient, setCurrentPatient, setIsDict, setResult, setIsPreCheckDone, forceUpdate} = props\n\n  /*Function to change the current patient to the one with patient_id*/\n  const changecurrentpatient = (patient_id) => {\n    const currentPatient = patientList.filter(elm => elm.id === patient_id)[0]\n    setCurrentPatient(currentPatient)\n    setResult({})\n    let init_dict = {}\n    utils.list_possible_answer.forEach(function (answer){init_dict[answer]={0:true}})\n    setIsDict(init_dict)\n    setIsPreCheckDone([])\n    forceUpdate()\n  }\n\n  /*Return the patient box elements*/\n  return (\n    <div className=\"container iq-card p-2 py-3 my-0 border border-dark shadow rounded-0-bottom\">\n      <div className=\"row align-items-center m-0\">\n        {/*Indication text*/}\n        <div className=\"col-sm-4 align-items-center text-dark\">\n          Patient Actuel :\n        </div>\n        {/*Current patient name*/}\n        <div className=\"col-sm-4 align-items-center \">\n          <div className=\"iq-card bg-primary text-center  m-0\">\n            {currentPatient.firstname}&nbsp;{currentPatient.lastname}\n          </div>\n        </div>\n        {/*Current patient selection dropdown*/}\n        <div className=\"col-sm-4 align-items-center \">\n          <div className=\"dropdown text-center\">\n            <button className=\"btn btn-secondary btn-round dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-toggle=\"dropdown\" aria-expanded=\"false\">\n              Sélectionnez le patient\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {patientList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item \" onClick={() => changecurrentpatient(i.id)}>\n                  {i.firstname}&nbsp;{i.lastname}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {PatientBox}","import * as utils from \"./utils\";\nimport  * as temp_data from \"./temporary_data.js\";\nimport React, {useState, useReducer} from \"react\";\nimport BootstrapSelect from \"react-bootstrap-select-dropdown\";\n\n/* Component representing a checklist item (a question).\n- init_items : the parent node of the checklist, used when we need to clean the questions after a answer modification\n- item : the current item\n- dicts : the different state dicts\n- forceUpdate : function that force the reload of component if necessary\n- values_filter_cond : function that filter the values by keeping only the values that validates all conditions\n* */\nfunction ChecklistItem({init_items, item, dicts, forceUpdate, values_filter_cond , creationMode, currentId, warningId, precheckMode}) {\n\n  // console.log(\"enter item\", item)\n\n\n\n  let [isDict, setIsDict, numDict, result, setResult, isPreCheckDone, setIsPreCheckDone, visibleList, setVisibleList] = dicts\n\n  // console.log(item)\n  // console.log(\"isDict\", isDict)\n  // console.log(\"result\", result)\n  // console.log(\"isprecheck\", isPreCheckDone)\n  // console.log(\"numdict\", numDict)\n\n  let [isOther, setIsOther] = useState(false)\n\n  /* Function triggered when the user click on one answer, we update the isDict and results and clean (remove from isDict and results) questions\n  * that must not be visible anymore, because of there cond's */\n  const handleOnChangeIs = (answer) => {\n    const is_check = !isDict[answer][item.id]\n    const list_other_answer = utils.list_possible_answer.filter(elm => elm !== answer)\n\n    // If is_check = true, it means that the state of the answer uncheck -> check,\n    // so we add in result and clean questions that depends of this item being with another answer (as it is not the case anymore)\n    if (is_check){\n      result[item.id]={name:item.name,answer:answer}\n\n      clean_children_rec(init_items, init_items, item.id,isDict, setIsDict, result, list_other_answer)\n    }\n    // If is_check = false, it means that the state of the answer check -> uncheck,\n    // so we remove in result and clean questions that depends of this item being with this answer (as it is not the case anymore)\n    else{\n      delete result[item.id]\n      clean_children_rec(init_items, init_items, item.id, isDict, setIsDict, result, [answer])\n    }\n    setResult(result)\n    isDict[answer][item.id] = is_check\n    list_other_answer.forEach(function(elm){isDict[elm][item.id]= false})\n    setIsDict(isDict)\n  }\n\n  /*Function triggered where the user enter a text in a text question. We update the result*/\n  const handleOnChangeText = (event) => {\n    const input_text = event.target.value;\n    result[item.id]={name:item.name,answer:input_text}\n    setResult(result)\n  };\n\n  const handleOnChangeList = (selectedOptions) => {\n    const input_answer = selectedOptions.selectedValue[0];\n    if (selectedOptions.selectedKey[0] === \"other\") {\n      delete result[item.id]\n      setResult(result)\n      setIsOther(true)\n    }\n    else{\n      result[item.id]={name:item.name,answer:input_answer}\n      setResult(result)\n      setIsOther(false)\n    }\n  };\n\n  /*Function triggered where the user enter a text in a text question. We update the result*/\n  const handleOnChangeListOther = (event) => {\n    const input_text = event.target.value;\n    result[item.id]={name:item.name,answer:input_text}\n    setResult(result)\n  };\n\n  const create_possible_list_answers = (name) => {\n    const list_answers = temp_data.lists[name]\n    const list_possible_answers = []\n    list_answers.forEach(function(answer){\n      list_possible_answers.push({\n        \"labelKey\": answer,\n        \"value\": answer,\n      })\n    })\n    list_possible_answers.push({\"labelKey\": \"other\", \"value\": \"Autre\"})\n    return list_possible_answers\n  }\n\n  /* If the item as pre check conditions and his precheck as not already been made,\n  * we check the condition in 'pre_check.if' and if it passes, we do as if the 'pre_check.then' answer was clicked\n  */\n  // console.log(item.id, item.pre_check)\n\n  if(precheckMode && item.pre_check && !isPreCheckDone.includes(item.id)){\n    // console.log(\"enter precheck\", item, isDict)\n    if (item.pre_check.if.every(function (elms){\n        return elms.some(function (elm){\n          if (elm.op)\n            return utils.simple_operation(numDict[elm.var],elm.op, elm.val);\n          else\n            return isDict[elm.val][elm.var]\n        })\n    })){\n      handleOnChangeIs(item.pre_check.then); isPreCheckDone.push(item.id); setIsPreCheckDone(isPreCheckDone);\n    }\n  }\n\n  /* Filter (check of the cond's) of the item values (children) */\n  let children = null;\n  let values = null;\n  if (item.values) {\n    values = values_filter_cond(item.values, isDict, numDict, creationMode)\n    values.forEach(value => !visibleList.includes(value.id) && value.check.length ? visibleList.push(value.id) : null)\n  }\n\n  /*We create the children components of the current item*/\n  if (values && values.length) {\n    children = (\n      <ul className=\"mb-0\">\n        {values.map((i, index) => (\n          <ChecklistItem  key={index} init_items={init_items} item={i} dicts={dicts} forceUpdate = {forceUpdate} values_filter_cond={values_filter_cond} creationMode={creationMode} currentId={currentId} warningId={warningId} />\n        ))}\n      </ul>\n    );\n  }\n\n\n\n\n  // console.log(\"Item return\", item)\n  // console.log(\"isDict\", isDict)\n  // console.log(\"result\", result)\n  // console.log(result)\n  // console.log(visibleList)\n  //\n  // console.log(warningId)\n  // console.log(currentId)\n  //\n  // console.log(item)\n\n  /*We return the different elements of the current item, and also his children*/\n  return (\n    <div className={\"container p-0 mt-3 mx-auto \"}>\n      {/*Current Item*/}\n\n      {warningId === item.id ? (\n        <div className=\" alert text-white bg-warning rounded\" role=\"alert\">\n          <div className=\"iq-alert-icon\">\n            <i className=\"ri-alert-fill\"/>\n          </div>\n          <div className=\"iq-alert-text\">Vous n'avez pas répondu à cette question</div>\n        </div>\n      ):null}\n\n      <div id={\"question\"+item.id} className={\"row align-items-center m-0 p-0\" + (creationMode && currentId === item.id ? \" border border-danger \" : \" \" )}>\n\n        {/*Item Id*/}\n        <div className=\"col list-group list-group-horizontal m-0 p-0 w-auto\">\n          <div className=\"list-group-item m-0 p-0  bg-primary text-center shadow-sm my-auto\" >\n            <h5 className=\"card-body p-auto text-white\">\n              {item.id}\n            </h5>\n          </div>\n\n          {/*Item name*/}\n          <div className=\"list-group-item m-0 p-0 w-100 shadow-sm h-auto text-dark \"  >\n              {item.comment ? (\n                <div className=\"alert alert-light m-0 mt-0 border-0 text-primary my-auto\" role=\"alert\">\n                  {item.comment}\n                </div>\n              ) : null}\n            <div className=\"card-body my-auto\">\n              {item.name}\n            </div>\n            {/*Item comment (above the item name)*/}\n          </div>\n\n        </div>\n\n        {/*Item answers (if any, if not empty col)*/}\n        {item.check.length ? (\n        <div className=\"col-md-auto p-0 pl-3\">\n          <div className=\"list-group list-group-horizontal \">\n            {/*For each possible answer, if in item.check, we put a checkbox*/}\n            {item.check.map((answer, index) =>\n              ![\"text\",\"list\"].includes(answer.split(\"_\")[0]) ?\n                <label key={index} className={\"list-group-item list-group-item-custom btn m-0\" + (item.color && item.color[index] === 0 ? \" btn-outline-success\" : (item.color && item.color[index] === 1 ? \" btn-outline-danger\" : \" btn-outline-secondary\"))} >\n                  <input  type=\"checkbox\"\n                         aria-label=\"Checkbox\"\n                         checked={isDict[answer] && isDict[answer][item.id] ? 1:0}\n                         onChange={function(event) {handleOnChangeIs(answer);forceUpdate()}}\n                  />\n                  &nbsp;{utils.trad_answer(answer)}\n                </label>\n              : null\n            )}\n\n            {/*If item answers must contain text, put a text input*/}\n            {item.check.includes(\"text\") ? (\n              <input className=\"form-control w-100 mb-0 bg-white\" type = \"text \" aria-label=\"text input\" placeholder=\"Insérez ici\" onChange={handleOnChangeText}/>\n            ) : null }\n\n            {/*If item answers must contain list, put a list dropdown input*/}\n            {item.check[0].split(\"_\").includes(\"list\") ? (\n              <BootstrapSelect key={item.check[0].split(\"_\")[1]} className=\" w-100 my-auto \" selectStyle =\"py-2 px-4 btn btn-outline-dark bg-white text-dark\" options={create_possible_list_answers(item.check[0].split(\"_\")[1])} isMultiSelect={false} placeholder=\"Aucun\" onChange={handleOnChangeList}/>\n            ) : null }\n\n            {/*If item answers is list and the answer is Other, put a text*/}\n            {isOther ? (\n              <input className=\"form-control w-100 ml-2 mb-0 bg-white\" type = \"text \" aria-label=\"text input\" placeholder=\"Insérez ici\" onChange={handleOnChangeListOther}/>\n            ) : null }\n\n          </div>\n        </div>\n        ) : <div className=\"col-sm-6\"> {null} </div>}\n      </div>\n      {/*Children of the current item*/}\n      {children}\n    </div>\n  );\n}\n\n/*Function that clean (remove from isDict and results) questions\n  * that must not be visible anymore, because of there cond's.\n  * -We check the current item, remove if necessary from result and isDict\n  * (id indicating what question has been removed, and answers indicating all the answers possibly removed,\n  * so we need to check if the current item was dependent of one of these answers,\n  * -We call the function recursively on each child of the current item\n  * - If the current item as been removed, we call recursively, s\n  * */\nfunction clean_children_rec(init_item, item, id, isDict, setIsDict, result, answers) {\n  let is_remove = false\n  if(item.cond){\n    answers.forEach(function(answer){\n      if(item.cond[answer] && item.cond[answer].includes(id)){\n        utils.list_possible_answer.forEach(function(elm){isDict[elm][item.id]= false})\n        delete result[item.id]\n        is_remove = true\n      }\n    })\n  }\n\n  if (item.values && item.values.length){\n    item.values.forEach( function (value) {\n      clean_children_rec(init_item, value, id, isDict, setIsDict, result, answers)\n    })\n  }\n  if (id !== item.id && is_remove) {\n        clean_children_rec(init_item, init_item, item.id, isDict, setIsDict, result, answers)\n  }\n}\n\nexport {ChecklistItem}","import React from \"react\";\nimport * as utils from \"./utils\";\n\nfunction SectionTitle ({section_title, index}) {\n\n\n  // console.log(section_title)\n  return (\n    <div className={\"card p-2 px-4 mb-2 bg-primary shadow-sm border-bottom border-dark text-center \" + (index ? \"border-top\":\"rounded rounded-0-bottom\") } >\n      <h5 className=\"text-white \">{section_title}</h5>\n    </div>\n  )\n\n}\n\nexport {SectionTitle}","import React from \"react\";\nimport * as utils from \"./utils\";\nimport {bindReporter} from \"web-vitals/dist/modules/lib/bindReporter\";\n\nfunction check_all_question_answered (visibleList, result){\n  return visibleList.every(\n    function (elm){ return result[elm]}\n  )\n}\n\n\n\nfunction ValidationButton ({visibleList, result, import_csv_result, checklist, setWarningId}) {\n\n  function search_question_not_answered (visibleList, result, is_set){\n    const visibleListsorted = visibleList.sort(function (elm1,elm2){return elm1>elm2})\n    for (let i=0; i<visibleListsorted.length;i=i+1){\n      if(!result[visibleListsorted[i]]){\n        if (is_set) setWarningId(visibleListsorted[i])\n        return \"question\" + (visibleListsorted[i-1])\n      }\n    }\n    if (is_set) setWarningId(0)\n    return \"\"\n  }\n\n  return (\n    <div className=\"container iq-card  mt-5 text-center p-2 shadow border border-dark\">\n      <a onClick={() => search_question_not_answered(visibleList, result, true) === \"\" ? import_csv_result() : null }\n         href={\"#\" + search_question_not_answered(visibleList, result, false)}\n         className=\"\"\n      >\n        <div className=\"btn-group btn-group-lg w-100 \" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" className=\"btn btn-warning w-100\">Valider la checklist</button>\n        </div>\n      </a>\n    </div>\n  )\n\n  // href={\"#\" + !check_all_question_answered(visibleList, result) ? search_question_not_answered(visibleList, result) : \"\"}\n\n}\n\nexport {ValidationButton}","import React from \"react\";\nimport * as utils from \"./utils\";\nimport * as temp_data from \"./temporary_data\";\n\n/*Component for the selection of the current patient\n* -patientList : list of all patients\n* -currentPatient : current patient state variable\n* -setCurrentPatient: current patient set function\n* */\nfunction AlertsBox ({props}) {\n\n  const list_alert = temp_data.alerts\n  const half = Math.ceil(list_alert.length/2)\n\n  const first_half_list = list_alert.slice(0, half)\n  const second_half_list = list_alert.length % 2 === 0 ? list_alert.slice(-half) : list_alert.slice(-half+1)\n\n  return (\n    <div className={\"container iq-card pt-3 pb-1 border-bottom border-left border-right border-dark shadow rounded-0-top\"}>\n      <div className=\"row align-items-center\">\n        <div className={\"col-sm-6 pr-2\"}>\n          {first_half_list.map((alert, index) =>\n            <div className={\"col-sm-12 alert rounded \" + (alert.gravity === 0 ? \"bg-danger\" : alert.gravity === 1 ? \"bg-warning\" : \"bg-light text-dark\") } role=\"alert\">\n              <div className=\"iq-alert-text\">Alerte <b>Question {alert.question_id}</b> : {alert.info}</div>\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                <i className=\"ri-close-line text-dark\"></i>\n              </button>\n            </div>\n          )}\n        </div>\n        <div className={\"col-sm-6 pl-2\"}>\n          {second_half_list.map((alert, index) =>\n            <div className={\"col-sm-12 alert rounded \" + (alert.gravity === 0 ? \"bg-danger\" : alert.gravity === 1 ? \"bg-warning\" : \"bg-light text-dark\") } role=\"alert\">\n              <div className=\"iq-alert-text\">Alerte <b>Question {alert.question_id}</b> : {alert.info}</div>\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                <i className=\"ri-close-line text-dark\"></i>\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {AlertsBox}","import React from \"react\";\nimport * as utils from \"./utils\";\n\n\n\n\nfunction Title ({checklistList, checklistId}) {\n  const checklist = checklistList ? checklistList.filter(elm => elm.checklist_id === checklistId)[0] : null\n  return (\n    <div className=\"container iq-card bg-primary  mt-4 text-center p-2 shadow border border-dark\">\n      <div className=\"card-body\">\n        <h3 className=\"card-title text-white\">{checklist ? \"Checklist \" + checklist.name: null} </h3>\n        <h4 className=\"card-text text-dark m-0\">{checklist ? checklist.person : null}</h4>\n      </div>\n    </div>\n  )\n\n}\n\nexport {Title}","import React, {useEffect, useReducer, useState} from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport * as temp_data from \"./temporary_data.js\";\nimport * as utils from \"./utils.js\";\nimport {AppNavbar} from \"./navbar.js\";\nimport {AppSignature} from \"./signature.js\"\nimport {CreateBox} from \"./creation_box.js\"\nimport {Credits} from \"./credits.js\"\nimport {PatientBox} from \"./patient_box.js\"\nimport {ChecklistItem} from \"./item.js\"\nimport {SectionTitle} from \"./section_title.js\";\nimport {ValidationButton} from \"./validation_button\";\nimport {AlertsBox} from \"./alerts_box\";\nimport {Title} from \"./title\";\nimport {checklist_arrays, checklist_list} from \"./temporary_data.js\";\n\n/*Main Function\n* -Declare all the variables needed in different component\n* -Return a combination of different components (Navbar, CreateBox, Credits, PatientBox, ChecklistItem(s), Signature)\n* */\n\nfunction date_to_age (date){\n  let result = date.split(\"/\")\n  let current_year = new Date()\n  return current_year.getFullYear() - result[2]\n}\n\nexport default function App() {\n\n  /*Function needed (for the moment), to force the components to update because they don't*/\n  const [, forceUpdate] = useReducer((x) => x + 1, 0);\n\n\n  /*Main state variables :\n  * -checklistId : Id of the current checklist\n  * -checklistList : List containing the different checklists (from backend, will be a database call)\n  * -patientList : List of all the patient (from hospital data, will be a database call)\n  * -checklist : current checklist (the one that is shown) (the structure can be seen in temporary_data.js\n  * -result : dict containing the results of the current checklist check-in\n  * -isPreCheckDone : array containing the id's of the questions for which the precheck as been made\n  * */\n  let [checklistId, setChecklistId] = useState(0)\n\n  //On fait l'appel qui va chercher la liste des checklists (constant)\n  let [checklistList, setChecklistList] = useState(null)\n\n  //On fait l'appel qui va chercher la checklist 'checklistId = 0'\n  let [checklist, setChecklist] = useState(null)\n\n  let [currentQuestion, setCurrentQuestion] = useState(null)\n\n\n  // Init calls (get checklist list and the initial checklist\n  useEffect(() => {\n    axios.get('https://api.npms.io/v2/search?q=react') //Random url, just to simulate the fact that we need to make get call before set checklistList\n      .then(function(response){\n\n        //Must handle incoming data\n        console.log(\"call response\", response)\n        console.log(temp_data.checklist_list)\n\n        //For now we use temp_data\n\n        setChecklistList(temp_data.checklist_list);\n        // checklist.name = temp_data.checklist_list.filter(elm => elm.checklist_id === 0)[0].name\n        // checklist.person = temp_data.checklist_list.filter(elm => elm.checklist_id === 0)[0].person\n        setChecklist(checklist)\n        console.log(\"initial get checklist list call and set finished\")\n      });\n    axios.get('https://api.npms.io/v2/search?q=react') //Random url, just to simulate the fact that we need to make get call before set checklistList\n    .then(function(response){\n\n      //Must handle incoming data\n      console.log(\"call response\", response)\n      console.log(temp_data.checklist_arrays[0])\n\n      //For now we use temp_data\n      const init_checklist = utils.checklist_flat_to_tree(temp_data.checklist_arrays[0],0)\n\n      setChecklist(init_checklist);\n      setCurrentQuestion(init_checklist && init_checklist.values.length ? init_checklist.values[0] : null)\n      console.log(\"initial get first checklist call and set finished\")\n    });\n  }, [])\n\n  let [patientList, ] = useState(temp_data.patients)\n  let [currentPatient, setCurrentPatient] = useState(patientList[0])\n  let [result, setResult] = useState({})\n  let [visibleList, setVisibleList] = useState([])\n  let [isPreCheckDone, setIsPreCheckDone] = useState([])\n  let [warningId, setWarningId] = useState(0)\n  let [precheckMode, setPrecheckMode] = useState(true)\n\n\n\n  /* Other state variables\n  * -creationMode : bool indicates if we are in creation mode\n  * -creditMode : bool indicates if we are in credit mode\n  * -trimmedCanvasUrl : variable containing the canvas url data of the signature\n  * -sigpad : variable containing the signature pad information*/\n  let [creationMode, setCreationMode] = useState(0)\n  let [creditMode, setCreditMode] = useState(0)\n  let [trimmedCanvasUrl, setTrimmedCanvasUrl] = useState(null)\n  let sigpad = {}\n\n  /* Initial set of isDict state variablesetTotalReactPackages\n  * -init_dict : dict containing {0:true} for each possible answer (yes, no, etc), defined in utils.js\n  * -isDict : dict containing a dict for each possible response,\n  * containing the questions id's that have this response checked at this moment*/\n  let init_dict = {}\n  utils.list_possible_answer.forEach(function (answer){init_dict[answer]={0:true}})\n  const [isDict, setIsDict] = useState(init_dict)\n\n  // console.log(\"init_dict\", init_dict)\n\n  // console.log(checklist)\n\n  /* Fill in of numDict, containing all the numerical data (the way current patient info is extracted will be improved)*/\n  let num_values = checklist ? checklist.num_values : []\n  let numDict = {}\n  num_values.forEach(function(elm) {numDict[elm.var] = elm.val})\n\n  for (const [key, value] of Object.entries(currentPatient)) {\n    numDict[key] = value\n  }\n  numDict[\"age\"] = date_to_age(numDict[\"dateofbirth\"])\n\n\n\n  /* Filter (check of the cond's) of the checklist  initial values (i.e. the questions at the first level of the tree)*/\n  let values = null\n  visibleList = []\n  if (checklist && checklist.values) {\n    values = values_filter_cond(checklist.values, isDict, numDict, creationMode)\n    values.forEach(value => value.check.length ? visibleList.push(value.id): null)\n  }\n\n  let dicts = [isDict, setIsDict, numDict, result, setResult,isPreCheckDone, setIsPreCheckDone, visibleList, setVisibleList ]\n\n  function reset (){\n    setResult({})\n    let init_dict_ = {}\n    utils.list_possible_answer.forEach(function (answer){init_dict_[answer]={0:true}})\n    setIsDict(init_dict_)\n    setIsPreCheckDone([])\n  }\n\n  /* Function that changes the current checklist to the checklist with checklist_id and resets dicts*/\n  const swapchecklist = (checklist_id) => {\n\n      //On fait l'appel qui va chercher la checklist 'checklistId = x'\n    axios.get('https://api.npms.io/v2/search?q=react') //Random url, just to simulate the fact that we need to make get call before set checklistList\n    .then(function(response){\n\n      //Must handle incoming data\n      console.log(\"swap call response\", response)\n      console.log(temp_data.checklist_arrays[checklist_id])\n\n\n      //For now we use temp_data\n      const current_creation_mode = creationMode\n      checklist = utils.checklist_flat_to_tree(temp_data.checklist_arrays[checklist_id],checklist_id)\n      checklist.name = checklistList.filter(elm => elm.checklist_id === checklist_id)[0].name\n      checklist.person = checklistList.filter(elm => elm.checklist_id === checklist_id)[0].person\n      setChecklist(checklist)\n\n      setCreationMode(false)\n      setChecklistId(checklist_id);\n      setCurrentQuestion(checklist && checklist.values.length ? checklist.values[0] : null)\n      setCreationMode(current_creation_mode)\n      reset()\n      console.log(\"switch checklist get call and set finished\")\n    })\n\n    return checklist\n  }\n\n    /*Create a table containing results and export it as .csv file*/\n  function import_csv_result () {\n    let result_table = [[\"id\", \"name\", \"answer\"]]\n    for (const [key, value] of Object.entries(result)){\n      result_table.push([key, value.name, value.answer])\n    }\n    let csvGenerator = new utils.CsvGenerator(result_table, 'my_csv.csv');\n    csvGenerator.download(true);\n  }\n\n\n  // console.log(\"app\")\n  // console.log(\"isPreCheckDone\", isPreCheckDone)\n  // console.log(\"isDict\", isDict)\n  // console.log(\"result\", result)\n  // console.log(result)\n  // console.log(visibleList)\n  // console.log(isDict)\n  // console.log(isPreCheckDone)\n  // console.log(result)\n\n  /* Return the different components, depending of the mode.\n  * We define also the background and a hidden bottom navbar to avoid problems with the background limits\n  */\n  return (\n    <div className=\"min-vh-100 content-page iq-bg-info\">\n      <div>\n        {<AppNavbar props = {{setCreationMode, setCreditMode, trimmedCanvasUrl, checklistList, swapchecklist, reset, forceUpdate, import_csv_result, result}}/>}\n        {!creditMode ? (\n          <div>\n            <Title checklistList={checklistList} checklistId={checklistId}/>\n            {creationMode ?\n              <CreateBox key={checklistId} props={{checklist, setChecklist, checklistList, setChecklistList, checklistId, setChecklistId, forceUpdate, setResult, setIsDict, init_dict, setIsPreCheckDone, currentQuestion, setCurrentQuestion, swapchecklist}} />\n              :\n              <div>\n                <PatientBox props={{patientList, currentPatient, setCurrentPatient, setIsDict, setResult, setIsPreCheckDone, init_dict, forceUpdate}} />\n                <AlertsBox props={{}}/>\n              </div>\n            }\n            <div className=\"container p-0 border-bottom border border-dark  shadow rounded rounded-0-bottom\">\n\n              {values ? values.map((i, index) => (\n                <div>\n                  {i.section_title ? <SectionTitle section_title={i.section_title} index={index} /> :<div className={\"\" + (index ? \"border-dark border-top\":\"\")}/>}\n                  <div className=\"mb-3 px-3\">\n                    <ChecklistItem key={index} init_items={checklist} item={i} dicts={dicts}\n                                   forceUpdate = {forceUpdate} values_filter_cond={values_filter_cond}\n                                   creationMode={creationMode} currentId = {currentQuestion ? currentQuestion.id: null} warningId={warningId} precheckMode={precheckMode}\n                    />\n                  </div>\n                </div>))\n                :\n                null\n              }\n            </div>\n            {!creationMode ? <AppSignature props = {{sigpad, setTrimmedCanvasUrl}}/> : null}\n            {!creationMode ? <ValidationButton visibleList={visibleList} result={result} import_csv_result = {import_csv_result} checklist={checklist} setWarningId={setWarningId}/> : null }\n\n\n          </div>\n          )\n          :\n          <Credits props={null}/>\n        }\n      </div>\n      <div>\n        <nav className=\"navbar\">\n          <label className=\"navbar-brand\">{null}</label>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\n/* Filter the values by keeping only the values that validates all conditions\n* We check all the response condition of the item\n* (for ex, if item.cond contains {\"yes\": [1,4]}, we check if isDict[\"yes\"] contains 1 and 4 )\n* + all num conditions\n*/\nfunction values_filter_cond(values, isDict, numDict, creationMode) {\n  // console.log(values)\n  // console.log(isDict)\n  return values.filter( item=>\n      Object.keys(item.cond).every(\n        function(answer){\n          return (answer === \"num\" || !item.cond[answer] || item.cond[answer].every(\n            function(elm) {return isDict[answer][elm];}\n          ))\n        }\n      )\n      && (creationMode || item.cond.num.every(\n        function(elm) {\n          return !numDict[elm.var] || utils.simple_operation(numDict[elm.var],elm.op, elm.val) }\n      ))\n    )\n}\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}