{"version":3,"sources":["temporary_data.js","utils.js","navbar.js","signature.js","creation_box.js","credits.js","patient_box.js","item.js","App.js","reportWebVitals.js","index.js"],"names":["checklist_list","checklist_id","id","num_values","var","val","values","name","cond","num","check","pre_check","if","op","then","comment","patients","gender","yearofbirth","list_possible_answer","list_possible_answer_trad","list_possible_num_var","list_possible_num_var_trad","list_possible_op","trad_answer","answer","trad_num_var","num_var","simple_operation","val1","string_op","val2","CsvGenerator","dataArray","fileName","separator","addQuotes","this","getDownloadLink","type","data","map","row","rowData","join","length","btoa","encodeURIComponent","downloadLink","getLinkElement","linkText","linkElement","a","document","createElement","innerHTML","href","download","removeAfterDownload","style","display","body","appendChild","click","removeChild","AppNavbar","props","setCreationMode","setCreditMode","trimmedCanvasUrl","result","checklistList","swapchecklist","deactivatecreditmode","className","onClick","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","result_table","Object","entries","key","value","push","utils","downloadImage","role","aria-labelledby","i","index","filename","AppSignature","sigpad","setTrimmedCanvasUrl","canvasProps","ref","dataUrl","getTrimmedCanvas","toDataURL","clear","CreateBox","checklist","setChecklist","setChecklistList","checklistId","setChecklistId","forceUpdate","useState","currentQuestion","setCurrentQuestion","currentParentQuestion","setCurrentParentQuestion","currentName","setCurrentName","currentComment","setCurrentComment","tempNums","setTempNums","tempPreCheck","setTempPreCheck","questionList","enumquestions","item","possible_answers","forEach","includes","possible_vars","possible_op","possible_pre_check","reinit_current_question","searchquestion","parent_item","console","log","removequestion","filter","e","check_id","every","movecurrentquestion_sibling","currentQuestionCopy","chosen_question_position","findIndex","elm","splice","movecurrentquestion_child","changecheck","selectedOptions","selectedKey","swapchecklist_creation_mode","addtempnumvar","addtempnumop","addtempnumval","event","target","addtempprecheckvar","addtempprecheckop","addtempprecheckval","addtempprecheckthen","n_checklist","new_empty_checklist","addchecklist","last_id","new_empty_question","addnewquestion","onChange","rows","options","isMultiSelect","placeholder","onClose","deletecond","addcond","removenum","selectStyle","removeprecheck","dataStr","JSON","stringify","b","remove","checklist_to_json","Credits","PatientBox","patientList","currentPatient","setCurrentPatient","patient_id","changecurrentpatient","ChecklistItem","init_items","dicts","values_filter_cond","creationMode","isDict","setIsDict","numDict","setResult","isPreCheckDone","setIsPreCheckDone","handleOnChangeIs","is_check","list_other_answer","clean_children_rec","children","checked","input_text","init_item","answers","is_remove","App","useReducer","x","temp_data","creditMode","init_dict","0","keys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4d6563f1.chunk.js","sourcesContent":["/* Data that will be obtain by call to backend\n* */\n\n/*Initial checklist list*/\nconst checklist_list = [\n  {\n    checklist_id: 0,\n    id: -1,\n    num_values:[\n      {var:\"difficult_intubation\", val:1},\n      {var:\"diabetic\", val:1},\n    ],\n    values:[\n      {\n        id: 1,\n        name: \"Intubation Difficile ? \",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\",\"no\",\"idk\"],\n        pre_check : {if:[{var:\"difficult_intubation\",op:\"=\",val:1}],then:\"yes\"},\n        values: [\n          {\n            id: 2,\n            name: \"A confirmer l'incubation difficile\",\n            cond: {\"yes\":[], \"no\": [], \"idk\" : [1], num:[]},\n            check : [\"yes\",\"no\"],\n            values: []\n          },\n          {\n            id: 3,\n            name: \"2ème Anesthésiste\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            values: []\n          },\n          {\n            id: 4,\n            name: \"2ème Infirmière\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            values: []\n          },\n          {\n            id: 5,\n            name: \"Matériel\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [],\n            values: [\n              {\n                id: 6,\n                name: \"Glidescope\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                values: []\n              },\n              {\n                id: 7,\n                name: \"Laryngoscope\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                values: []\n              },\n              {\n                id: 8,\n                name: \"Set Trachéo\",\n                cond: {\"yes\":[1], \"no\":[], num:[]},\n                check : [\"yes\",\"no\"],\n                values: []\n              },\n            ]\n          },\n          {\n            id: 9,\n            name: \"Protocole\",\n            cond: {\"yes\":[1], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            values: []\n          },\n        ]\n      },\n      {\n        id: 10,\n        name: \"Est-elle susceptible d'être enceinte ?\",\n        comment: \"(Les données patient nous indiquent que la patiente est âgée entre 15 et 60 ans)\",\n        cond: {\"yes\":[], \"no\":[], num:[{var:\"yearofbirth\",op:\">\",val:1960}, {var:\"gender\",op:\"=\",val:\"F\"}]},\n        check : [\"yes\",\"no\"],\n        values: [\n          {\n            id: 11,\n            name: \"Arrêt des rêgles depuis ?\",\n            cond: {\"yes\":[10], \"no\":[], num:[]},\n            check : [\"text\"],\n            values: []\n          },\n          {\n            id: 12,\n            name: \"Test disponible ?\",\n            cond: {\"yes\":[10], \"no\":[], num:[]},\n            check : [\"yes\",\"no\"],\n            values: [\n              {\n                id: 13,\n                name: \"Négatif ?\",\n                cond: {\"yes\":[12], \"no\":[], num:[]},\n                check : [\"yes\", \"no\"],\n                values: []\n              },\n              {\n                id: 14,\n                name: \"Faire test maintenant ?\",\n                cond: {\"yes\":[], \"no\":[12], num:[]},\n                check : [\"yes\", \"no\"],\n                values: []\n              },\n              {\n                id: 15,\n                name: \"Postposer l'intervention ?\",\n                cond: {\"yes\":[], \"no\":[12], num:[]},\n                check : [\"yes\", \"no\"],\n                values: []\n              },\n            ]\n          },\n        ]\n      },\n      {\n        id: 16,\n        name: \"Le patient est-il diabétique ?\",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\",\"no\"],\n        pre_check : {if:[{var:\"diabetic\",op:\"=\",val:1}],then:\"yes\"},\n        values: [\n          {\n            id: 17,\n            name: \"Traitement Oral ?\",\n            cond: {\"yes\":[16], \"no\":[], num:[]},\n            check : [\"yes\", \"no\"],\n            values: [\n              {\n                id: 18,\n                name: \"Arrêt des médicaments ?\",\n                cond: {\"yes\":[17], \"no\":[], num:[]},\n                check : [\"yes\", \"no\"],\n                values: []\n              }\n            ]\n          },\n          {\n            id: 19,\n            name: \"Traitement par piqure à insuline ?\",\n            cond: {\"yes\":[16], \"no\":[17], num:[]},\n            check : [\"yes\", \"no\"],\n            values: [\n              {\n                id: 20,\n                name: \"Dernière piqure le ? \",\n                cond : {\"yes\":[19], \"no\":[], num:[]},\n                check: [\"text\"],\n                values: []\n              }\n            ]\n          },\n        ]\n      }\n    ]\n  },\n  {\n    checklist_id: 1,\n    id: -1,\n    num_values:[\n      {var:\"Intubation_difficile\", val:1},\n      {var:\"Diabétique\", val:1},\n    ],\n    values:[\n      {\n        id: 1,\n        name: \"Intubation ? \",\n        cond: {\"yes\": [], \"no\": [], num: []},\n        check: [\"yes\", \"no\", \"?\"],\n        pre_check: {if: [{var: \"Intubation_difficile\", op: \"=\", val: 1}], then: \"yes\"},\n        values: []\n      },\n      {\n        id: 2,\n        name: \"Test ? \",\n        cond: {\"yes\": [], \"no\": [], num: []},\n        check: [\"yes\", \"no\", \"?\"],\n        values: []\n      }\n    ]\n  }\n];\n\n/*List of all patients*/\nconst patients = [\n  {id: 0, name: \"Jean Dupont\", gender: \"M\", yearofbirth: 1970},\n  {id: 1, name: \"Robert Edwards\", gender: \"M\", yearofbirth: 1998},\n  {id: 2, name: \"Luc Monjeau\", gender: \"M\", yearofbirth: 1965},\n  {id: 3, name: \"Eglantine Racine\", gender: \"F\", yearofbirth: 1987},\n  {id: 4, name: \"Georgette Cailot\", gender: \"F\", yearofbirth: 1941}\n]\n\n\nexport {checklist_list, patients}","/*Diverse utility elements*/\n\n\n/*We consider a constant list of all possible answers to a question*/\nconst list_possible_answer = [\"yes\",\"no\",\"idk\",\"ok\",\"not_ok\"]\nconst list_possible_answer_trad = {\"yes\":\"Oui\",\"no\":\"Non\",\"idk\":\"?\",\"ok\":\"OK\",\"not_ok\":\"Non OK\"}\n\nconst list_possible_num_var = [\"diabetic\",\"age\",\"yearofbirth\",\"difficult_intubation\", \"gender\"]\nconst list_possible_num_var_trad = {\"diabetic\":\"Diabétique\",\"age\":\"Âge\",\"yearofbirth\":\"Année de naissance\",\"difficult_intubation\":\"Intubation Difficile\", \"gender\":\"Genre\"}\n\nconst list_possible_op = [\"<\",\">\",\"=\"]\n\n\n/*Function to translate an answer into mountable french version*/\nconst trad_answer = (answer) => {\n  return list_possible_answer_trad[answer]\n}\n\nconst trad_num_var = (num_var) => {\n    return list_possible_num_var_trad[num_var]\n}\n\n/*List of possible options (answers), used in the multiselect component to choose the question answers*/\n\n\n/*Function that make the operation of type \"is val1 op val2 ?' with op the operator in string input*/\nconst simple_operation = (val1, string_op, val2) => {\n  switch (string_op) {\n    case \">\" : return val1 > val2;\n    case \"<\" : return val1 < val2;\n    case \"=\" : return val1 === val2 ;\n    default: return true;\n  }\n}\n\n/*Function that take the list of checklist, transform it in json format and export as .json file*/\nconst checklist_to_json = (checklistList) => {\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(checklistList));\n    console.log(dataStr)\n    var b = document.createElement('a');\n    b.href = dataStr ;\n    b.download = \"checklist.json\";\n    document.body.appendChild(b);\n    b.click();\n    b.remove()\n}\n\n/*Function to take a data array and put in a .csv file, with some characteristics*/\nfunction CsvGenerator(dataArray, fileName, separator, addQuotes) {\n    this.dataArray = dataArray;\n    this.fileName = fileName;\n    this.separator = separator || ',';\n    this.addQuotes = !!addQuotes;\n\n    if (this.addQuotes) {\n        this.separator = '\"' + this.separator + '\"';\n    }\n\n    this.getDownloadLink = function () {\n        var separator = this.separator;\n        var addQuotes = this.addQuotes;\n\n        var rows = this.dataArray.map(function (row) {\n            var rowData = row.join(separator);\n\n            if (rowData.length && addQuotes) {\n                return '\"' + rowData + '\"';\n            }\n\n            return rowData;\n        });\n\n        var type = 'data:text/csv;charset=utf-8';\n        var data = rows.join('\\n');\n\n        if (typeof btoa === 'function') {\n            type += ';base64';\n            data = btoa(data);\n        } else {\n            data = encodeURIComponent(data);\n        }\n\n        return this.downloadLink = this.downloadLink || type + ',' + data;\n    };\n\n    this.getLinkElement = function (linkText) {\n        var downloadLink = this.getDownloadLink();\n        var fileName = this.fileName;\n        this.linkElement = this.linkElement || (function() {\n            var a = document.createElement('a');\n            a.innerHTML = linkText || '';\n            a.href = downloadLink;\n            a.download = fileName;\n            return a;\n        }());\n        return this.linkElement;\n    };\n\n    // call with removeAfterDownload = true if you want the link to be removed after downloading\n    this.download = function (removeAfterDownload) {\n        var linkElement = this.getLinkElement();\n        linkElement.style.display = 'none';\n        document.body.appendChild(linkElement);\n        linkElement.click();\n        if (removeAfterDownload) {\n            document.body.removeChild(linkElement);\n        }\n    };\n}\n\n\n\n\nexport {list_possible_answer_trad, list_possible_answer, list_possible_num_var_trad, list_possible_num_var, list_possible_op, trad_answer, trad_num_var, CsvGenerator, simple_operation, checklist_to_json}","import React from \"react\";\nimport * as utils from \"./utils\";\n\n/* Component of the upper navbar of the webpage\n* -setCreationMode: bool indicating if we are in creation mode set function\n* -setCreditMode: bool indicating if we are in credit mode set function\n* -trimmedCanvasUrl: the canvas url data of the signature\n* -result: dict containing the results of the current checklist check-in\n* -checklistList: List containing the different checklists\n* -swapchecklist: function that changes the current checklist\n* */\nfunction AppNavbar ({props}) {\n\n  let {setCreationMode, setCreditMode, trimmedCanvasUrl, result, checklistList, swapchecklist} = props;\n\n  /*Function triggered when we want to download the signature as .png file if there is a canvas url data*/\n  const image_download = () => {\n    if(trimmedCanvasUrl)\n      downloadImage(trimmedCanvasUrl, \"image.png\");\n  }\n\n  /*Create a table containing results and export it as .csv file*/\n  function import_csv_result () {\n    let result_table = [[\"id\", \"name\", \"answer\"]]\n    for (const [key, value] of Object.entries(result)){\n      result_table.push([key, value.name, value.answer])\n    }\n    let csvGenerator = new utils.CsvGenerator(result_table, 'my_csv.csv');\n    csvGenerator.download(true);\n  }\n\n  /*Activate the creation mode*/\n  const activatecreatemode = () => {\n    setCreationMode(1)\n  }\n\n  /*Deactivate the creation mode*/\n  const deactivatecreatemode = () => {\n    setCreationMode(0)\n  }\n\n  /*Activate the credit mode*/\n  const activatecreditmode = () => {\n    setCreditMode(1)\n  }\n\n  /*Deactivate the creation mode*/\n  const deactivatecreditmode = () => {\n    setCreditMode(0)\n  }\n\n  /*Return the different elements of the navbar*/\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light border-bottom border-light shadow-sm mb-4\">\n      <div className=\"container-fluid\">\n        {/*Navbar Title*/}\n        <label className=\"navbar-brand text-custom text-title\" onClick={deactivatecreditmode}>SLS</label>\n        {/*Navbar Toggler button*/}\n        <label className=\"navbar-toggler\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\"\n                aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </label>\n        {/*Navbar links*/}\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <div className=\"navbar-nav\">\n            <label className=\"nav-link active text-custom\" aria-current=\"page\" onClick={deactivatecreditmode}>Page d'accueil</label>\n            <label className=\"nav-link text-custom\" onClick={import_csv_result}>Importer la checklist</label>\n            <label className=\"nav-link text-custom\" onClick={image_download}>Importer la signature</label>\n            {/*Navbar checklist selection dropdown link*/}\n            <li className=\"nav-item dropdown\">\n              <label className=\"nav-link dropdown-toggle text-custom\" id=\"navbarDropdown\" role=\"button\"\n                 data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                Liste des checklists disponibles\n              </label>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                {checklistList.map((i, index) => (\n                  <li key={index}><label className=\"dropdown-item text-custom\" onClick={() => swapchecklist(i.checklist_id)}>Checklist n°{i.checklist_id}</label></li>\n                ))}\n              </ul>\n            </li>\n            <label className=\"nav-link text-custom\"  onClick={activatecreatemode}>Activer le mode Création</label>\n            <label className=\"nav-link text-custom\" onClick={deactivatecreatemode}>Désactiver le mode Création</label>\n            <label className=\"nav-link text-custom\" onClick={activatecreditmode}>A propos</label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\n/*Download a data in a file with defined filename*/\nconst downloadImage = function(data, filename) {\n  let a = document.createElement('a');\n  a.href = data;\n  a.download = filename;\n  document.body.appendChild(a);\n  a.click();\n};\n\nexport {AppNavbar}","import SignaturePad from \"react-signature-canvas\";\nimport React from \"react\";\n\n/*Component for the signature pad\n* -sigpad: object representing the signature pad, fill in by the SignaturePad component\n* -setTrimmedCanvasUrl: the canvas url data of the signature set function\n* */\nfunction AppSignature ({props}) {\n\n  let {sigpad, setTrimmedCanvasUrl} = props;\n\n  /*Reinitialize the canvas and sigpad*/\n  const reinit_canvas = () => {\n    sigpad.clear()\n    setTrimmedCanvasUrl(null)\n  }\n\n  /*Import the current sigpad information into canvas url data*/\n  const trim_canvas = () => {\n    var dataUrl = sigpad.getTrimmedCanvas().toDataURL();\n    setTrimmedCanvasUrl(dataUrl);\n  }\n\n  /*Return the signature elements*/\n  return (\n    <div className=\"container mt-5 mx-auto p-0 container-custom\">\n      <div className=\"row align-items-center p-0 m-0 h-100\">\n        {/*Information text*/}\n        <div className=\"col-sm-3 m-0 p-0 text-center\">\n          <div className=\"card card-grey shadow-sm mx-4\" >\n            <div className=\"card-body\">\n              <div className=\"text-custom\">Veuillez rentrer votre signature : </div>\n            </div>\n          </div>\n        </div>\n        {/*Signature pad component, receiving the signature*/}\n        <div className=\"col m-0 p-0 h-100 \">\n          <div className=\"sigContainer\">\n            <SignaturePad canvasProps={{className: \"sigPad\"}}\n              ref={(ref) => { sigpad = ref }} />\n          </div>\n        </div>\n        {/*Validation and Reinitialisation buttons*/}\n        <div className=\"col-md-auto mx-2 p-0\">\n          {/*Button to validate the current signature and put info into data*/}\n          <div className=\"row align-items-center p-0 m-0 w-100 mb-2\">\n            <button type=\"button\" className=\"btn btn-val shadow-sm text-custom\" onClick={trim_canvas}>\n              Valider la signature\n            </button>\n          </div>\n          {/*Button to clean the current signature canvas and remove info in data*/}\n          <div className=\" row align-items-center p-0 m-0 h-100\">\n            <button type=\"button\" className=\"btn btn-change shadow-sm text-custom\"onClick={reinit_canvas}>\n              Réinitialiser\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport {AppSignature}","import BootstrapSelect from \"react-bootstrap-select-dropdown\";\nimport * as utils from \"./utils\";\nimport React, {useState} from \"react\";\nimport {list_possible_answer, list_possible_num_var, list_possible_op, trad_answer, trad_num_var, checklist_to_json} from \"./utils\";\n\n/* Component for the creation mode box\n* -checklist: current checklist (state variable)\n* -setChecklist: current checklist set function\n* -swapchecklist: function that changes the current checklist\n* -checklistList : list of checklists (state variable)\n* -setChecklistList : list of checklist set function\n* -checklistId : id of the current checklist (state variables)\n* -setChecklistId : id of the current checklist set function\n* -forceUpdate: function that force the reload of component if necessary\n* */\nfunction CreateBox ({props}) {\n\n  let {checklist, setChecklist, swapchecklist, checklistList, setChecklistList, checklistId, setChecklistId, forceUpdate} = props\n\n  /* State variables used only in creation mode\n  * -currentQuestion : the question currently into creation/modification\n  * -currentParentQuestion : the question that is parent of the current question\n  * -currentName : the current name\n  * -tempNums : the numerical condition values (var, op and val) of the current condition the user is going to add\n  * -tempPreChech : the precheck condition values (var, op, val) and then value of the current precheck the user is going to add\n  */\n  let [currentQuestion, setCurrentQuestion] = useState(checklist.values[0])\n  let [currentParentQuestion, setCurrentParentQuestion] = useState(checklist)\n  let [currentName, setCurrentName] = useState(checklist.values[0].name)\n  let [currentComment, setCurrentComment] = useState(checklist.comment ? checklist.comment : null)\n\n  let [tempNums, setTempNums] = useState({})\n  let [tempPreCheck, setTempPreCheck] = useState({})\n\n\n  // console.log(\"main\", currentQuestion)\n\n  /* Make the complete list of questions of the current checklist*/\n  let questionList = [];\n  function enumquestions (item){\n    if (item.id > 0)\n      questionList.push(item.id)\n    for (const value of item.values){\n      enumquestions(value)\n    }\n  }\n  enumquestions(checklist)\n\n  /*Create a list, usable by the select component, of the possible answer*/\n  let possible_answers = []\n  function construct_possible_answers (){\n    possible_answers = []\n    list_possible_answer.forEach(function(answer){\n      possible_answers.push({\"labelKey\": answer, \"value\": trad_answer(answer), \"isSelected\":currentQuestion.check.includes(answer)})\n    })\n  }\n  construct_possible_answers()\n\n  /*Create a list, usable by the select component, of the possible variables of conditions*/\n  let possible_vars = []\n  function construct_possible_vars (){\n    possible_vars = []\n    list_possible_num_var.forEach(function(num_var){\n      possible_vars.push({\"labelKey\": num_var, \"value\": trad_num_var(num_var)})\n    })\n  }\n  construct_possible_vars()\n\n  /*Create a list, usable by the select component, of the possible operators of conditions*/\n  let possible_op = []\n  function construct_possible_op (){\n    possible_op = []\n    list_possible_op.forEach(function(op){\n      possible_op.push({\"labelKey\": op, \"value\": op})\n    })\n  }\n  construct_possible_op()\n\n  /*Create a list, usable by the select component, of the possible answers of this question*/\n  let possible_pre_check = []\n  function construct_possible_pre_check (){\n    possible_pre_check = []\n    currentQuestion.check.forEach(function(pre_check){\n      possible_pre_check.push({\"labelKey\": pre_check, \"value\": trad_answer(pre_check)})\n    })\n  }\n  construct_possible_pre_check()\n\n\n  // /*Set state variables*/\n  // function set_elements () {\n  //   setCurrentQuestion(currentQuestion)\n  //   setCurrentParentQuestion(currentParentQuestion)\n  //   setChecklist(checklist)\n  //   setChecklistList(checklistList)\n  // }\n\n  /*Reinitialize the current question, which means taking the first question of the current checklist as current question*/\n  function reinit_current_question (checklist) {\n    setCurrentQuestion(checklist.values[0])\n    setCurrentParentQuestion(checklist)\n    setCurrentName(checklist.values[0].name)\n  }\n\n  /*Search for a question (with id) in item and his children, knowing that parent_item is the parent of item. When found, set\n  * the current question to this question (and so for the parent and name)*/\n  function searchquestion (item, parent_item, id) {\n    if (item.id === id){\n      console.log(\"found\", item)\n      currentQuestion = item\n      currentParentQuestion = parent_item\n      setCurrentQuestion(currentQuestion)\n      setCurrentParentQuestion(currentParentQuestion)\n      setCurrentName(currentQuestion.name)\n      setTempNums({})\n    }\n    for (const value of item.values){\n      searchquestion(value,item,id);\n    }\n  }\n\n  /*Remove the current question (by removing the question from children of his parent),\n  * and reset to a new current queston\n  */\n  function removequestion (){\n    currentParentQuestion.values = currentParentQuestion.values.filter(e => e.id !== currentQuestion.id)\n    //set_elements()\n    reinit_current_question(checklist)\n  }\n\n  /*Add a new question to the checklist. For now we put it as the last children of the checklist item\n  * (the last question at first level of the tree ) and we put basic elements inside\n  */\n  function addnewquestion (){\n    let last_id = questionList[questionList.length-1]\n    let new_empty_question =\n      {\n        id: last_id+1,\n        name : \"Nom vide\",\n        cond: {\"yes\":[], \"no\":[], num:[]},\n        check : [\"yes\", \"no\"],\n        values: [],\n      }\n    checklist.values.push(new_empty_question)\n    //set_elements()\n    searchquestion(checklist, null, last_id+1)\n  }\n\n  function check_id(item, id){\n    return item.id === id || (item.values.length && item.values.every(value => check_id(value)))\n  }\n\n  /*Move the current question to another position (the last child of the question with id), we reset the cond for now */\n  function movecurrentquestion_sibling (id){\n    if (!check_id(currentQuestion, id)) {\n      let currentQuestionCopy = {...currentQuestion}\n      removequestion()\n      searchquestion(checklist, null, id)\n      let chosen_question_position = currentParentQuestion.values.findIndex(elm => elm.id === id)\n      currentQuestionCopy.cond = {\"yes\": [], \"no\": [], num: []}\n      currentParentQuestion.values.splice(chosen_question_position + 1, 0, currentQuestionCopy)\n      //set_elements()\n      searchquestion(checklist, null, currentQuestionCopy.id)\n      forceUpdate()\n    }\n  }\n\n  function movecurrentquestion_child (id){\n    if (!check_id(currentQuestion, id)) {\n      let currentQuestionCopy = {...currentQuestion}\n      currentQuestionCopy.cond = {\"yes\":[], \"no\":[], num:[]}\n      removequestion()\n      searchquestion(checklist, null, id)\n      currentQuestion.values.splice(0,0,currentQuestionCopy)\n      //set_elements()\n      searchquestion(checklist, null, currentQuestionCopy.id)\n      forceUpdate()\n    }\n  }\n\n  /*Modify the current name*/\n  const modifyname = (event) => {\n    currentName = event.target.value\n    setCurrentName(currentName)\n  }\n\n  /*Update the current question name*/\n  const updatename = () => {\n    currentQuestion.name = currentName\n    setCurrentQuestion(currentQuestion)\n    forceUpdate()\n  }\n\n    /*Modify the current name*/\n  const modifycomment = (event) => {\n    currentComment = event.target.value\n    setCurrentComment(currentComment)\n  }\n\n  /*Update the current question name*/\n  const updatecomment = () => {\n    if (currentComment)\n      currentQuestion.comment = currentComment\n    else\n      delete currentQuestion.comment\n    forceUpdate()\n  }\n\n  /*Change the check array of the current question, containing the possible answers*/\n  const changecheck = (selectedOptions) => {\n    if (selectedOptions.selectedKey.length){\n      currentQuestion.check = selectedOptions.selectedKey\n      setCurrentQuestion(currentQuestion)\n    }\n  }\n\n  /*Add a checklist (with basic content) to the list of checklist, and switch to this checklist*/\n  const addchecklist = () => {\n    const n_checklist = checklistList[checklistList.length-1].checklist_id+1\n    let new_empty_checklist =\n      {\n        checklist_id: n_checklist,\n        id: -1,\n        num_values: [],\n        values: [\n          {\n            id: 1,\n            name : \"Vide\",\n            check : [\"yes\",\"no\"],\n            cond: {\"yes\":[], \"no\":[], num:[]},\n            values: []\n          }\n        ],\n      }\n    checklistList.push(new_empty_checklist)\n    setChecklistList(checklistList)\n    swapchecklist_creation_mode(n_checklist)\n  }\n\n  /*Remove the current checklist from the list of checklist and take the first checklist still available as current checklist*/\n  const removechecklist = () => {\n    console.log(checklistList, checklistId)\n    checklistList = checklistList.filter(e => e.checklist_id !== checklistId)\n    console.log(checklistList)\n    setChecklistId(checklistList[0].checklist_id)\n    checklist = checklistList[0]\n    setChecklist(checklist)\n    setChecklistList(checklistList)\n    reinit_current_question(checklist)\n  }\n\n  /*Function that swap the current checklist and reinitialize the current question*/\n  const swapchecklist_creation_mode = (checklist_id) =>  {\n    checklist = swapchecklist(checklist_id)\n    reinit_current_question(checklist)\n    forceUpdate()\n  }\n\n  /*Function that add a  question condition (with it answer and id) to current question*/\n  const addcond = (answer, id) => {\n    currentQuestion.cond[answer].push(id)\n    setCurrentQuestion(currentQuestion)\n    // //set_elements()\n    forceUpdate()\n  }\n\n  /*Function that delete a  question condition (with it answer and id) to current question*/\n  const deletecond = (answer, id) => {\n    currentQuestion.cond[answer] = currentQuestion.cond[answer].filter(elm => elm !== id)\n    console.log(currentQuestion)\n    setCurrentQuestion(currentQuestion)\n    //set_elements()\n    forceUpdate()\n  }\n\n  /*Function that update the tempNum.var variable with input*/\n  const addtempnumvar = (selectedOptions) => {\n    if (!tempNums){ tempNums = {}}\n    tempNums.var = selectedOptions.selectedKey[0]\n    setTempNums(tempNums)\n    forceUpdate()\n  }\n  /*Function that update the tempNum.op variable with input*/\n  const addtempnumop = (selectedOptions) => {\n    if (!tempNums){ tempNums = {}}\n    tempNums.op = selectedOptions.selectedKey[0]\n    setTempNums(tempNums)\n    forceUpdate()\n  }\n    /*Function that update the tempNum.val variable with input*/\n  const addtempnumval = (event) => {\n    if (!tempNums){ tempNums = {}}\n    tempNums.val = event.target.value\n    setTempNums(tempNums)\n    forceUpdate()\n  }\n\n  /*Function that add a numerical condition (with values contains in tempNum) to currentQuestion*/\n  const addnum = () => {\n    if (tempNums.var && tempNums.op && tempNums.val) {\n      currentQuestion.cond.num.push({var: tempNums.var, op: tempNums.op, val: tempNums.val})\n      setCurrentQuestion(currentQuestion)\n      //set_elements()\n      forceUpdate()\n    }\n  }\n\n  /*Function that remove a numerical condition of the currentQuestion*/\n  const removenum = (index) => {\n    console.log(\"supprimer\", index)\n    currentQuestion.cond.num.splice(index,1)\n    console.log(currentQuestion.cond.num)\n    setCurrentQuestion(currentQuestion)\n    //set_elements()\n    forceUpdate()\n  }\n\n  /*Function that update the tempPrecheck.var variable with input*/\n  const addtempprecheckvar = (selectedOptions) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck.var = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n  /*Function that update the tempPrecheck.op variable with input*/\n  const addtempprecheckop = (selectedOptions) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck.op = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n  /*Function that update the tempPrecheck.val variable with input*/\n  const addtempprecheckval = (event) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck.val = event.target.value\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n\n    /*Function that update the tempPrecheck.then variable with input*/\n  const addtempprecheckthen = (selectedOptions) => {\n    if (!tempPreCheck){ tempPreCheck = {}}\n    tempPreCheck.then = selectedOptions.selectedKey[0]\n    setTempPreCheck(tempPreCheck)\n    forceUpdate()\n  }\n\n  /*Function that add a precheck condition (with values contains in tempPreCheck) and precheck then to currentQuestion*/\n  const addprecheck = () => {\n    if (tempPreCheck.var && tempPreCheck.op && tempPreCheck.val && tempPreCheck.then) {\n      if (!currentQuestion.pre_check)\n        currentQuestion.pre_check = {if:[],then:null}\n      currentQuestion.pre_check.then = tempPreCheck.then\n      currentQuestion.pre_check.if.push({var: tempPreCheck.var, op: tempPreCheck.op, val: tempPreCheck.val})\n      setCurrentQuestion(currentQuestion)\n      //set_elements()\n      forceUpdate()\n    }\n  }\n\n  /*Function that remove a precheck condition of the currentQuestion*/\n  const removeprecheck = (index) => {\n    console.log(\"supprimer\", index)\n    currentQuestion.pre_check.if.splice(index,1)\n    if (!currentQuestion.pre_check.if.length)\n      currentQuestion.pre_check = null\n    console.log(currentQuestion.cond.num)\n    setCurrentQuestion(currentQuestion)\n    //set_elements()\n    forceUpdate()\n  }\n\n\n  /*Return the create box, with all it elements*/\n  return (\n    <div className=\"container p-2 container-custom border border-2 shadow-sm\">\n\n      {/*Title text*/}\n      <div className=\"card card-grey text-center mb-2 \">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\"><div className=\"text-custom\">Mode Création </div></h5>\n          <p className=\"card-text text-custom m-0\">Vous pouvez ajouter, supprimer, modifier des checklists et des questions ici.</p>\n          <p className=\"card-text text-custom\">La checklist modifiée s'affiche en dessous.</p>\n        </div>\n      </div>\n\n      {/*Question and Checklist selection and show*/}\n      <div className=\"row align-items-center p-0 m-0 pb-2 border-bottom border-\">\n        {/*Checklist selection dropdown*/}\n        <div className=\"col align-items-center \">\n          <div className=\"dropdown text-center\">\n            <button className=\"btn btn-val dropdown-toggle text-custom\" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              Sélectionnez la checklist\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Add a checklist (and select it)*/}\n              <li><label className=\"dropdown-item text-custom\" onClick={function(event){ addchecklist(); forceUpdate()}}>Nouvelle checklist</label></li>\n              {/*Select an existing checklist*/}\n              {checklistList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item text-custom\" onClick={() => swapchecklist_creation_mode(i.checklist_id)}>\n                  Checklist n°{i.checklist_id}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        {/*Checklist show*/}\n        <div className=\"col align-items-center p-2\">\n          <div className=\"card card-grey text-center shadow-sm text-custom\">\n            Checklist n°{checklistId}\n          </div>\n        </div>\n        {/*Question show*/}\n        <div className=\"col align-items-center p-2\">\n          <div className=\"card card-grey text-center shadow-sm text-custom\">\n            Question n°{currentQuestion.id}\n          </div>\n        </div>\n        {/*Checklist selection dropdown*/}\n        <div className=\"col align-items-center \">\n          <div className=\"dropdown text-center\">\n            <button className=\"btn btn-val dropdown-toggle text-custom \" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              Sélectionnez la question\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Add a question (and select it)*/}\n              <li><label className=\"dropdown-item text-custom\" onClick={function(event){ addnewquestion(); forceUpdate()}}>Nouvelle question</label></li>\n              {/*Select an existing checklist*/}\n              {questionList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item text-custom\" onClick={function(){searchquestion(checklist, null, i)}}>\n                  Question n°{i}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {/*Question Name selection*/}\n      <div className=\"row align-items-center p-2 m-0 border-bottom\">\n        {/*Information text*/}\n        <div className=\"col-sm-4 align-items-center text-custom\">\n          Nom de la question :\n        </div>\n        {/*Question name text input */}\n        <div className=\"col-sm-4 align-items-center\">\n          <input className=\"card w-100 text-custom\" type = \"text \" aria-label=\"text input\" value={currentName} onChange={modifyname}/>\n        </div>\n        {/*Question name validation button*/}\n        <div className=\"col-sm-4 align-items-center p-0 text-center \">\n          <button className=\"btn btn-change text-custom\" onClick={ () => updatename()}>\n            Valider le nom\n          </button>\n        </div>\n      </div>\n\n      {/*Question Comment selection*/}\n      <div className=\"row align-items-center p-2 m-0 border-bottom\">\n        {/*Information text*/}\n        <div className=\"col-sm-4 align-items-center text-custom \">\n          Commentaire (optionnel) de la question :\n        </div>\n        {/*Question comment text input */}\n        <div className=\"col-sm-4 align-items-center text-custom\">\n          <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"2\" value={currentComment ? currentComment:\"\"} onChange={modifycomment}/>\n        </div>\n        {/*Question comment validation button*/}\n        <div className=\"col-sm-4 align-items-center p-0 text-center\">\n          <button className=\"btn btn-change text-custom\" onClick={function(event){ updatecomment(); forceUpdate()}}>\n            Valider le commentaire\n          </button>\n        </div>\n      </div>\n\n      {/*Question Position (below which question the current question must be put)*/}\n      <div className=\"row align-items-center p-2 m-0 border-bottom\">\n        {/*Information text*/}\n        <div className=\"col-sm-4 align-items-center text-custom\">\n          Placer la question à la suite d'une autre :\n        </div>\n        <div className=\"col-sm-4 align-items-center\">\n        </div>\n        {/*Other question as parent selection dropdown*/}\n        <div className=\"col-sm-4 align-items-center p-0 text-center\">\n          <div className=\"dropdown text-center\">\n            <button className=\"btn btn-change dropdown-toggle text-custom\" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              Quelle question ?\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Put the question at top level*/}\n              <li><label className=\"dropdown-item text-custom\" onClick={() => movecurrentquestion_sibling(-1)}>\n                Aucune</label>\n                </li>\n              {/*Put the question at child of another question*/}\n              {questionList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item text-custom\" onClick={() => movecurrentquestion_sibling(i)}>\n                  Question n°{i}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {/*Question situation (child or sibling of the upper question)*/}\n      <div className=\"row align-items-center p-2 m-0 border-bottom\">\n        {/*Information text*/}\n        <div className=\"col-sm-4 align-items-center text-custom\">\n          Placer la question comme découlant d'une autre :\n        </div>\n        <div className=\"col-sm-4 align-items-center\">\n        </div>\n        {/*Choice between child and sibling*/}\n        <div className=\"col-sm-4 align-items-center p-0 text-center\">\n          <div className=\"dropdown text-center\">\n            <button className=\"btn btn-change dropdown-toggle text-custom\" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              Quelle question ?\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {/*Put the question at top level*/}\n              <li><label className=\"dropdown-item text-custom\" onClick={() => movecurrentquestion_child(-1)}>\n                Aucune</label>\n                </li>\n              {/*Put the question at child of another question*/}\n              {questionList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item text-custom\" onClick={() => movecurrentquestion_child(i)}>\n                  Question n°{i}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {/*(Multi)selection of answers of the current question*/}\n      <div className=\"row align-items-center p-2 m-0 border-bottom\">\n        {/*Information text*/}\n        <div className=\"col-sm-4 align-items-center text-custom\">\n          Quelles réponses possibles ? :\n        </div>\n        <div className=\"col-sm-4 align-items-center\">\n        </div>\n        {/*(Multi)Selection dropdown\n        -> For now, the only solution i found to have the dropdown reset correctly when question switch is have one separate dropdown for each question, but only one shown\n        -> clearly not optimal (but big problem when doing the simple way : the current selection of answers is not reset when question switch and component update -> very annoying*/}\n        <div className=\"col-sm-4 align-items-center p-0 text-center\">\n          {questionList.map((elm, index) => (\n            elm === currentQuestion.id ? <BootstrapSelect key={index} className=\"w-100 text-custom\" options={possible_answers} isMultiSelect={true} placeholder=\"Aucune\" onChange={changecheck} onClose={forceUpdate}/>: null\n          ))}\n          {/*Simple way*/}\n          {/*<BootstrapSelect options={possible_options} isMultiSelect={true} placeholder=\"Aucune\" onChange={changecheck} onClose={forceUpdate}/>*/}\n        </div>\n      </div>\n\n      {/*Question conditions of the current question (optional part, so it needs to be collapsable)*/}\n      <div className=\"border-bottom m-0 p-0 text-center\">\n        <button className=\"btn btn-change m-auto p-2 my-2 text-custom\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseQuestionConditions\"\n                aria-expanded=\"false\" aria-controls=\"collapseExample\">\n          + Ajouter/Supprimer des conditions sur les autres questions +\n        </button>\n        <div className=\"collapse m-0 p-0\" id=\"collapseQuestionConditions\">\n          <div className=\"row align-items-center p-2 m-0\">\n            <div className=\"col-sm-3 align-items-center text-custom\">\n              Quelles conditions sur les réponses ? :\n            </div>\n            <div className=\"col-sm-9 align-items-center\">\n              {utils.list_possible_answer.map((answer, index) => (\n                <div key={index} className=\"row\">\n                  <div className=\"col align-items-center p-2 my-auto\">\n                    <div className=\"card card-grey text-center shadow-sm m-0  text-custom\">\n                      {trad_answer(answer)}\n                    </div>\n                  </div>\n                  <div className=\"col align-items-center p-2\">\n                    <div className=\"input-group m-0\">\n                      {/*For each possible answer, if in item.check, we put a checkbox*/}\n                      {currentQuestion.cond[answer] ? currentQuestion.cond[answer].map( (id, index) => (\n                        <div key={index} className=\"input-group-prepend\">\n                          <button className=\"btn btn-outline-secondary text-custom\" type=\"button\" onClick={() => deletecond(answer, id)} >{id} </button>\n                        </div>\n                      )): null}\n                    </div>\n\n                  </div>\n                  <div className=\"col align-items-center p-2\">\n                    <div className=\"dropdown text-center\">\n                      <button className=\"btn btn-change dropdown-toggle text-custom\" type=\"button\" id=\"dropdownMenuButton1\"\n                              data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        Quelle question ?\n                      </button>\n                      <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                        {questionList.map((id, index) => (\n                          <li key={index}><label className=\"dropdown-item text-custom\" onClick={() => addcond(answer, id)}>\n                            Question n°{id}</label>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/*Numerical conditions of the current question*/}\n      <div className=\"border-bottom m-0 p-0 text-center\">\n        <button className=\"btn btn-change m-auto p-2 my-2 text-custom\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseNumConditions\"\n                aria-expanded=\"false\" aria-controls=\"collapseExample\">\n          + Ajouter/Supprimer des conditions numériques +\n        </button>\n        <div className=\"collapse m-0 p-0\" id=\"collapseNumConditions\">\n          <div className=\"col align-items-center p-2 m-0 border-bottom\">\n            {/*Current Numerical condition list display*/}\n            {currentQuestion.cond.num ? currentQuestion.cond.num.map( (num, index) => (\n              <div  key={index} className=\"row justify-content-md-center py-2\">\n                <div className=\"col-sm-2 align-items-center my-auto\">\n                  <div className=\"card card-grey shadow-sm text-center text-custom\">\n                    {trad_num_var(num.var)}\n                  </div>\n                </div>\n                <div className=\"col-sm-2 align-items-center my-auto \">\n                  <div className=\"card card-grey shadow-sm text-center text-custom\">\n                    {num.op}\n                  </div>\n                </div>\n                <div className=\"col-sm-2 align-items-center my-auto \">\n                  <div className=\"card card-grey shadow-sm text-center text-custom\">\n                    {num.val}\n                  </div>\n                </div>\n                <div className=\"col-sm-2 align-items-center my-auto text-center\">\n                  <button className=\"btn btn-delete text-custom\" onClick={() => removenum(index)} >\n                    x\n                  </button>\n                </div>\n              </div>\n            )): null}\n            {/*Add numerical condition section */}\n            <div>\n              {/*Same problem than with other (multi) bootstrap select, must see if another solution. If we switch between checklist 0 question 1 and checklist 1 question 1, problem stay*/}\n              {questionList.map((elm, index) => (\n                elm === currentQuestion.id ? (\n                  <div  key={index} className=\"row justify-content-md-center py-2\">\n                    <div className=\"col-sm-2 align-items-center \">\n                      <BootstrapSelect className=\"w-100 text-custom\" selectStyle=\"btn btn-light border\" placeholder=\"Quelle variable ?\" options={possible_vars} onChange={addtempnumvar}/>\n                    </div>\n                    <div className=\"col-sm-2 align-items-center \">\n                      <BootstrapSelect className=\"w-100 text-custom\" selectStyle=\"btn btn-light border\" placeholder=\"Quel opérateur ?\" options={possible_op} onChange={addtempnumop}/>\n                    </div>\n                    <div className=\"col-sm-2 align-items-center \">\n                      <input type=\"number\" className=\"form-control text-custom\" placeholder=\"Quelle valeur ?\" onChange={addtempnumval}/>\n                    </div>\n                    <div className=\"col-sm-2 align-items-center text-center\">\n                      <button className=\"btn btn-change w-100 text-custom\" onClick={() => addnum()} >\n                        Valider\n                      </button>\n                    </div>\n                  </div>)\n                  : null ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/*Precheck conditions of the current question*/}\n      <div className=\"border-bottom m-0 p-0 text-center\">\n        <button className=\"btn btn-change m-auto p-2 my-2 text-custom\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapsePreCheck\"\n                aria-expanded=\"false\" aria-controls=\"collapseExample\">\n          + Ajouter/Supprimer des conditions pour que la question soit pré-checkée +\n        </button>\n        <div className=\"collapse m-0 p-0\" id=\"collapsePreCheck\">\n          <div className=\"col align-items-center p-2 m-0 border-bottom\">\n            {/*Current PreCheck condition list (and then value) display*/}\n            {currentQuestion.pre_check ? currentQuestion.pre_check.if.map( (pre_check, index) => (\n              <div  key={index} className=\"row justify-content-md-center py-2\">\n                <div className=\"col-sm-2 align-items-center my-auto\">\n                  <div className=\"card card-grey shadow-sm text-center text-custom\">\n                    {trad_num_var(pre_check.var)}\n                  </div>\n                </div>\n                <div className=\"col-sm-2 align-items-center my-auto \">\n                  <div className=\"card card-grey shadow-sm text-center text-custom\">\n                    {pre_check.op}\n                  </div>\n                </div>\n                <div className=\"col-sm-2 align-items-center my-auto \">\n                  <div className=\"card card-grey shadow-sm text-center text-custom\">\n                    {pre_check.val}\n                  </div>\n                </div>\n                <div className=\"col-sm-2 align-items-center my-auto text-center\">\n                  <button className=\"btn btn-delete text-custom\" onClick={() => removeprecheck(index)} >\n                    x\n                  </button>\n                </div>\n              </div>\n            )): null}\n            {currentQuestion.pre_check ? (\n              <div className=\"row justify-content-md-center py-2\">\n                <div className=\"col-sm-2 align-items-center my-auto \">\n                  <div className=\"card card-grey shadow-sm text-center text-custom\">\n                    {trad_answer(currentQuestion.pre_check.then)}\n                  </div>\n                </div>\n              </div>\n            ): null}\n\n\n            {/*Add PreCheck condition and then value section*/}\n            <div>\n              {/*Same problem than with other (multi) bootstrap select, must see if another solution. If we switch between checklist 0 question 1 and checklist 1 question 1, problem stay*/}\n              {questionList.map((elm, index) => (\n                elm === currentQuestion.id ? (\n                  <div key={index}>\n                    <div className=\"row justify-content-md-center py-2\">\n                      <div className=\"col-sm-2 align-items-center \">\n                        <BootstrapSelect className=\"w-100 text-custom\" selectStyle=\"btn btn-light border\" placeholder=\"Quelle variable ?\" options={possible_vars} onChange={addtempprecheckvar}/>\n                      </div>\n                      <div className=\"col-sm-2 align-items-center \">\n                        <BootstrapSelect className=\"w-100 text-custom\" selectStyle=\"btn btn-light border\" placeholder=\"Quel opérateur ?\" options={possible_op} onChange={addtempprecheckop}/>\n                      </div>\n                      <div className=\"col-sm-2 align-items-center \">\n                        <input type=\"number\" className=\"form-control text-custom\" placeholder=\"Quelle valeur ?\" onChange={addtempprecheckval}/>\n                      </div>\n                      <div className=\"col-sm-2 align-items-center text-center\">\n                        <button className=\"btn btn-change w-100  text-custom\" onClick={() => addprecheck()} >\n                          Valider\n                        </button>\n                      </div>\n                    </div>\n                    <div className=\"row justify-content-md-center py-2\">\n                      <div className=\"col-sm-2 align-items-center \">\n                        <BootstrapSelect className=\"w-100 text-custom\" selectStyle=\"btn btn-light border\" placeholder=\"Quel pre-check ?\" options={possible_pre_check} onChange={addtempprecheckthen}/>\n                      </div>\n                    </div>\n                  </div>\n                  )\n                  : null ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      {/*End section of the create box, with remove and import button*/}\n      <div className=\"row align-items-center p-2 m-0\">\n        {/*Button to remove the current checklist*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-change text-custom \" onClick={removechecklist} >\n            Supprimer la checklist\n          </button>\n        </div>\n        {/*Button to import in .json the list of checklist*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-change text-custom \" onClick={() => checklist_to_json(checklistList)}>\n            Sauvegarder la liste de checklists\n          </button>\n        </div>\n        {/*Button to remove the current question*/}\n        <div className=\"col-sm-4 align-items-center text-center\">\n          <button className=\"btn btn-change text-custom\" onClick={removequestion}>\n            Supprimer la question\n          </button>\n        </div>\n      </div>\n    </div>\n    )\n}\n\nexport {CreateBox}","import React from \"react\";\n\n/*Component to show the credits of the web app*/\nfunction Credits ({props}) {\n    return (\n    <div className=\"card-inv text-center position-absolute top-50 start-50 translate-middle\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title m-0\"><text className=\"text-custom\">SLS Checklist App</text></h5>\n        <p className=\"card-text text-custom m-0\">v0.5.1</p>\n        <p className=\"card-text text-custom m-0\">Développé par Théo Stassen</p>\n        <p className=\"card-text text-custom\">theo.stassen@protonmail.com</p>\n      </div>\n    </div>\n  )\n}\n\nexport {Credits}","import React from \"react\";\n\n/*Component for the selection of the current patient\n* -patientList : list of all patients\n* -currentPatient : current patient state variable\n* -setCurrentPatient: current patient set function\n* */\nfunction PatientBox ({props}) {\n\n  let {patientList, currentPatient, setCurrentPatient} = props\n\n  /*Function to change the current patient to the one with patient_id*/\n  const changecurrentpatient = (patient_id) => {\n    const currentPatient = patientList.filter(elm => elm.id === patient_id)[0]\n    setCurrentPatient(currentPatient)\n  }\n\n  /*Return the patient box elements*/\n  return (\n    <div className=\"container p-2 container-custom border border-2 shadow-sm\">\n      <div className=\"row align-items-center p-2 m-0\">\n        {/*Indication text*/}\n        <div className=\"col-sm-4 align-items-center text-custom \">\n          Patient Actuel :\n        </div>\n        {/*Current patient name*/}\n        <div className=\"col-sm-4 align-items-center \">\n          <div className=\"card card-grey text-center shadow-sm text-custom\">\n            {currentPatient.name}\n          </div>\n        </div>\n        {/*Current patient selection dropdown*/}\n        <div className=\"col-sm-4 align-items-center \">\n          <div className=\"dropdown text-center\">\n            <button className=\"btn btn-val dropdown-toggle text-custom\" type=\"button\" id=\"dropdownMenuButton1\"\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              Sélectionnez le patient\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n              {patientList.map((i, index) => (\n                <li key={index}><label className=\"dropdown-item  text-custom\" onClick={() => changecurrentpatient(i.id)}>\n                  {i.name}</label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {PatientBox}","import * as utils from \"./utils\";\nimport React from \"react\";\n\n/* Component representing a checklist item (a question).\n- init_items : the parent node of the checklist, used when we need to clean the questions after a answer modification\n- item : the current item\n- dicts : the different state dicts\n- forceUpdate : function that force the reload of component if necessary\n- values_filter_cond : function that filter the values by keeping only the values that validates all conditions\n* */\nfunction ChecklistItem({init_items, item, dicts, forceUpdate, values_filter_cond , creationMode}) {\n\n  let [isDict, setIsDict, numDict, result, setResult, isPreCheckDone, setIsPreCheckDone] = dicts\n\n  /* Function triggered when the user click on one answer, we update the isDict and results and clean (remove from isDict and results) questions\n  * that must not be visible anymore, because of there cond's */\n  const handleOnChangeIs = (answer) => {\n    const is_check = !isDict[answer][item.id]\n    const list_other_answer = utils.list_possible_answer.filter(elm => elm !== answer)\n\n    // If is_check = true, it means that the state of the answer uncheck -> check,\n    // so we add in result and clean questions that depends of this item being with another answer (as it is not the case anymore)\n    if (is_check){\n      result[item.id]={name:item.name,answer:answer}\n\n      clean_children_rec(init_items, init_items, item.id,isDict, setIsDict, result, list_other_answer)\n    }\n    // If is_check = false, it means that the state of the answer check -> uncheck,\n    // so we remove in result and clean questions that depends of this item being with this answer (as it is not the case anymore)\n    else{\n      delete result[item.id]\n      clean_children_rec(init_items, init_items, item.id, isDict, setIsDict, result, [answer])\n    }\n    setResult(result)\n    isDict[answer][item.id] = is_check\n    list_other_answer.forEach(function(elm){isDict[elm][item.id]= false})\n    setIsDict(isDict)\n  }\n\n  /*Function triggered where the user enter a text in a text question. We update the result*/\n  const handleOnChangeText = (event) => {\n    const input_text = event.target.value;\n    result[item.id]={name:item.name,answer:input_text}\n    setResult(result)\n  };\n\n  /* If the item as pre check conditions and his precheck as not already been made,\n  * we check the condition in 'pre_check.if' and if it passes, we do as if the 'pre_check.then' answer was clicked\n  */\n\n  if(item.pre_check && !isPreCheckDone.includes(item.id)){\n    if (item.pre_check.if.every(function (elm){ return utils.simple_operation(numDict[elm.var],elm.op, elm.val);})){\n      handleOnChangeIs(item.pre_check.then); isPreCheckDone.push(item.id); setIsPreCheckDone(isPreCheckDone);\n    }\n  }\n\n  /* Filter (check of the cond's) of the item values (children) */\n  let children = null;\n  let values = null;\n  if (item.values)\n    values = values_filter_cond(item.values, isDict, numDict, creationMode)\n\n  /*We create the children components of the current item*/\n  if (values && values.length) {\n    children = (\n      <ul className=\"mb-0\">\n        {values.map((i, index) => (\n          <ChecklistItem  key={index} init_items={init_items} item={i} dicts={dicts} forceUpdate = {forceUpdate} values_filter_cond={values_filter_cond}/>\n        ))}\n      </ul>\n    );\n  }\n\n\n  // console.log(\"Item return\", item)\n  // console.log(\"isDict\", isDict[\"yes\"][10])\n  // console.log(\"result\", result)\n\n  /*We return the different elements of the current item, and also his children*/\n  return (\n    <div className=\"container m-0 mt-3 p-0 mx-auto\">\n      {/*Current Item*/}\n      <div className=\"row align-items-center m-0 p-0\">\n\n        {/*Item Id*/}\n        <div className=\"col-sm-1 m-0 p-0 w-auto\">\n          <div className=\"card card-grey text-center w-100 shadow-sm\" >\n            <div className=\"card-body  text-custom\">\n              {item.id}\n            </div>\n          </div>\n        </div>\n\n        {/*Item body*/}\n        <div className=\"col m-0 p-0 \">\n          {/*Item comment (above the item name)*/}\n          {item.comment ? (\n            <div className=\"alert alert-info m-0 mt-0 align- shadow-sm\" role=\"alert\">\n              <p className=\"mb-0  text-custom\"> {item.comment} </p>\n            </div>\n            ) : null\n          }\n          {/*Item name*/}\n          <div className=\"card w-100 shadow-sm\" >\n            <div className=\"card-body text-custom\">\n              {item.name}\n            </div>\n          </div>\n        </div>\n\n        {/*Item answers (if any, if not empty col)*/}\n        {item.check.length ? (\n        <div className=\"col-md-auto\">\n          <div className=\"input-group \">\n            {/*For each possible answer, if in item.check, we put a checkbox*/}\n            {utils.list_possible_answer.map((answer, index) => (\n              item.check.includes(answer) ? (\n              <div  key={index} className=\"input-group-prepend \">\n                <div className=\"input-group-text shadow  text-custom\">\n                  <input type=\"checkbox\"\n                         aria-label=\"Checkbox\"\n                         checked={isDict[answer][item.id] ? 1:0}\n                         onChange={function(event){handleOnChangeIs(answer); forceUpdate()}}\n                  />\n                  &nbsp;{utils.trad_answer(answer)}\n                </div>\n              </div>\n              ) : null\n            ))}\n            {/*If item answers must contain text, put a text input*/}\n            {item.check.includes(\"text\") ? (\n            <div className=\"input-group-prepend\">\n              <div className=\"input-group-text\">\n                  <input\n                    className=\"card w-100 text-custom\"\n                    type = \"text\"\n                    aria-label=\"text input\"\n                    onChange={handleOnChangeText}\n                  />\n              </div>\n            </div>\n            ) : null }\n          </div>\n        </div>\n        ) : <div className=\"col-sm-8\"> {null} </div>}\n      </div>\n      {/*Children of the current item*/}\n      {children}\n    </div>\n  );\n}\n\n/*Function that clean (remove from isDict and results) questions\n  * that must not be visible anymore, because of there cond's.\n  * -We check the current item, remove if necessary from result and isDict\n  * (id indicating what question has been removed, and answers indicating all the answers possibly removed,\n  * so we need to check if the current item was dependent of one of these answers,\n  * -We call the function recursively on each child of the current item\n  * - If the current item as been removed, we call recursively, s\n  * */\nfunction clean_children_rec(init_item, item, id, isDict, setIsDict, result, answers) {\n  let is_remove = false\n  if(item.cond){\n    answers.forEach(function(answer){\n      if(item.cond[answer] && item.cond[answer].includes(id)){\n        utils.list_possible_answer.forEach(function(elm){isDict[elm][item.id]= false})\n        delete result[item.id]\n        is_remove = true\n      }\n    })\n  }\n\n  if (item.values && item.values.length){\n    item.values.forEach( function (value) {\n      clean_children_rec(init_item, value, id, isDict, setIsDict, result, answers)\n    })\n  }\n  if (id !== item.id && is_remove) {\n        clean_children_rec(init_item, init_item, item.id, isDict, setIsDict, result, answers)\n  }\n}\n\nexport {ChecklistItem}","import React, {useState, useReducer} from \"react\";\nimport \"./App.css\";\nimport  * as temp_data from \"./temporary_data.js\";\nimport * as utils from \"./utils.js\";\nimport {AppNavbar} from \"./navbar.js\";\nimport {AppSignature} from \"./signature.js\"\nimport {CreateBox} from \"./creation_box.js\"\nimport {Credits} from \"./credits.js\"\nimport {PatientBox} from \"./patient_box.js\"\nimport {ChecklistItem} from \"./item.js\"\n\n/*Main Function\n* -Declare all the variables needed in different component\n* -Return a combination of different components (Navbar, CreateBox, Credits, PatientBox, ChecklistItem(s), Signature)\n* */\nexport default function App() {\n\n  /*Function needed (for the moment), to force the components to update because they don't*/\n  const [, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  /*Main state variables :\n  * -checklistId : Id of the current checklist\n  * -checklistList : List containing the different checklists (from backend, will be a database call)\n  * -patientList : List of all the patient (from hospital data, will be a database call)\n  * -checklist : current checklist (the one that is shown) (the structure can be seen in temporary_data.js\n  * -result : dict containing the results of the current checklist check-in\n  * -isPreCheckDone : array containing the id's of the questions for which the precheck as been made\n  * */\n  let [checklistId, setChecklistId] = useState(0)\n  let [checklistList, setChecklistList] = useState(temp_data.checklist_list)\n  let [patientList, ] = useState(temp_data.patients)\n  let [currentPatient, setCurrentPatient] = useState(patientList[0])\n  let [checklist, setChecklist] = useState(checklistList.filter(e => e.checklist_id === checklistId)[0])\n  let [result, setResult] = useState({})\n  let [isPreCheckDone, setIsPreCheckDone] = useState([])\n\n  /* Other state variables\n  * -creationMode : bool indicates if we are in creation mode\n  * -creditMode : bool indicates if we are in credit mode\n  * -trimmedCanvasUrl : variable containing the canvas url data of the signature\n  * -sigpad : variable containing the signature pad information*/\n  let [creationMode, setCreationMode] = useState(0)\n  let [creditMode, setCreditMode] = useState(0)\n  let [trimmedCanvasUrl, setTrimmedCanvasUrl] = useState(null)\n  let sigpad = {}\n\n  /* Initial set of isDict state variable\n  * -init_dict : dict containing {0:true} for each possible answer (yes, no, etc), defined in utils.js\n  * -isDict : dict containing a dict for each possible response,\n  * containing the questions id's that have this response checked at this moment*/\n  let init_dict = {}\n  utils.list_possible_answer.forEach(function (answer){init_dict[answer]={0:true}})\n  const [isDict, setIsDict] = useState(init_dict)\n\n\n  /* Fill in of numDict, containing all the numerical data (the way current patient info is extracted will be improved)*/\n  let num_values = checklist.num_values\n  let numDict = {}\n  num_values.forEach(function(elm) {numDict[elm.var] = elm.val})\n  numDict[\"yearofbirth\"] = currentPatient.yearofbirth\n  numDict[\"gender\"] = currentPatient.gender\n\n  let dicts = [isDict, setIsDict, numDict, result, setResult,isPreCheckDone, setIsPreCheckDone ]\n\n  /* Filter (check of the cond's) of the checklist  initial values (i.e. the questions at the first level of the tree)*/\n  let values = null\n  if (checklist.values)\n    values = values_filter_cond(checklist.values, isDict, numDict, creationMode)\n\n  /* Function that changes the current checklist to the checklist with checklist_id and resets dicts*/\n  const swapchecklist = (checklist_id) => {\n    setChecklistId(checklist_id);\n    checklist = checklistList.filter(e => e.checklist_id === checklist_id)[0]\n    setChecklist(checklist)\n    setResult({})\n    setIsDict(init_dict)\n    setIsPreCheckDone([])\n    return checklist\n  }\n\n  // console.log(\"app\")\n  // console.log(\"isPreCheckDone\", isPreCheckDone)\n  // console.log(\"isDict\", isDict)\n  // console.log(\"result\", result)\n\n  /* Return the different components, depending of the mode.\n  * We define also the background and a hidden bottom navbar to avoid problems with the background limits\n  */\n  return (\n    <div>\n      <div className=\"bg-color-custom min-vh-100\">\n        {<AppNavbar props = {{setCreationMode, setCreditMode, trimmedCanvasUrl, result, checklistList, swapchecklist}}/>}\n        {!creditMode ? (\n          <div>\n            {creationMode ?\n              <CreateBox props={{checklist, setChecklist, swapchecklist, checklistList, setChecklistList, checklistId, setChecklistId, forceUpdate}} />\n              :\n              <PatientBox props={{patientList, currentPatient, setCurrentPatient}} />\n            }\n            {values ? values.map((i, index) => (\n              <ChecklistItem key={index} init_items={checklist} item={i} dicts={dicts} forceUpdate = {forceUpdate} values_filter_cond={values_filter_cond} creationMode={creationMode} />))\n              :\n              null\n            }\n            {!creationMode ? <AppSignature props = {{sigpad, setTrimmedCanvasUrl}}/> : null}\n          </div>\n          )\n          :\n          <Credits props={null}/>\n        }\n      </div>\n      <div>\n        <nav className=\"navbar navbar-hidden\">\n          <label className=\"navbar-brand\">{null}</label>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\n/* Filter the values by keeping only the values that validates all conditions\n* We check all the response condition of the item\n* (for ex, if item.cond contains {\"yes\": [1,4]}, we check if isDict[\"yes\"] contains 1 and 4 )\n* + all num conditions\n*/\nfunction values_filter_cond(values, isDict, numDict, creationMode) {\n  return values.filter( item=>\n      Object.keys(item.cond).every(\n        function(answer){\n          return (answer === \"num\" || !item.cond[answer] || item.cond[answer].every(\n            function(elm) {return isDict[answer][elm];}\n          ))\n        }\n      )\n      && (creationMode || item.cond.num.every(\n        function(elm) {\n          return !numDict[elm.var] || utils.simple_operation(numDict[elm.var],elm.op, elm.val) }\n      ))\n    )\n}\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}